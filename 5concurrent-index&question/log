Script started on Mon 30 May 2016 06:05:17 PM PDT
[u'Stack memory - &int is not giving garbage value as expected [duplicate]']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command"]
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so"]
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', u'Multithreading non-static in class C++']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?', u'Dynamic loading a c++ dll built with MinGW32 from Visual Studio']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart', u'http://stackoverflow.com/questions/37529979/dynamic-loading-a-c-dll-built-with-mingw32-from-visual-studio']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?', u'Dynamic loading a c++ dll built with MinGW32 from Visual Studio', u'C++ Builder [bcc32 Error] Unit1.cpp(18): E2040 Declaration terminated incorrectly']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart', u'http://stackoverflow.com/questions/37529979/dynamic-loading-a-c-dll-built-with-mingw32-from-visual-studio', u'http://stackoverflow.com/questions/37529950/c-builder-bcc32-error-unit1-cpp18-e2040-declaration-terminated-incorrectl']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?', u'Dynamic loading a c++ dll built with MinGW32 from Visual Studio', u'C++ Builder [bcc32 Error] Unit1.cpp(18): E2040 Declaration terminated incorrectly', u'Parallel Assignment to A Shared Variable']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart', u'http://stackoverflow.com/questions/37529979/dynamic-loading-a-c-dll-built-with-mingw32-from-visual-studio', u'http://stackoverflow.com/questions/37529950/c-builder-bcc32-error-unit1-cpp18-e2040-declaration-terminated-incorrectl', u'http://stackoverflow.com/questions/37529942/parallel-assignment-to-a-shared-variable']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?', u'Dynamic loading a c++ dll built with MinGW32 from Visual Studio', u'C++ Builder [bcc32 Error] Unit1.cpp(18): E2040 Declaration terminated incorrectly', u'Parallel Assignment to A Shared Variable', u'C++ virtual templated method']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart', u'http://stackoverflow.com/questions/37529979/dynamic-loading-a-c-dll-built-with-mingw32-from-visual-studio', u'http://stackoverflow.com/questions/37529950/c-builder-bcc32-error-unit1-cpp18-e2040-declaration-terminated-incorrectl', u'http://stackoverflow.com/questions/37529942/parallel-assignment-to-a-shared-variable', u'http://stackoverflow.com/questions/37529777/c-virtual-templated-method']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?', u'Dynamic loading a c++ dll built with MinGW32 from Visual Studio', u'C++ Builder [bcc32 Error] Unit1.cpp(18): E2040 Declaration terminated incorrectly', u'Parallel Assignment to A Shared Variable', u'C++ virtual templated method', u'Print ancestors of all nodes in a Binary Tree. Can we do it in less than O(n^2) time complexity?']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart', u'http://stackoverflow.com/questions/37529979/dynamic-loading-a-c-dll-built-with-mingw32-from-visual-studio', u'http://stackoverflow.com/questions/37529950/c-builder-bcc32-error-unit1-cpp18-e2040-declaration-terminated-incorrectl', u'http://stackoverflow.com/questions/37529942/parallel-assignment-to-a-shared-variable', u'http://stackoverflow.com/questions/37529777/c-virtual-templated-method', u'http://stackoverflow.com/questions/37529679/print-ancestors-of-all-nodes-in-a-binary-tree-can-we-do-it-in-less-than-on2']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?', u'Dynamic loading a c++ dll built with MinGW32 from Visual Studio', u'C++ Builder [bcc32 Error] Unit1.cpp(18): E2040 Declaration terminated incorrectly', u'Parallel Assignment to A Shared Variable', u'C++ virtual templated method', u'Print ancestors of all nodes in a Binary Tree. Can we do it in less than O(n^2) time complexity?', u'Why does boost::filesystem::path::string() return by value on Windows and by reference on POSIX?']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart', u'http://stackoverflow.com/questions/37529979/dynamic-loading-a-c-dll-built-with-mingw32-from-visual-studio', u'http://stackoverflow.com/questions/37529950/c-builder-bcc32-error-unit1-cpp18-e2040-declaration-terminated-incorrectl', u'http://stackoverflow.com/questions/37529942/parallel-assignment-to-a-shared-variable', u'http://stackoverflow.com/questions/37529777/c-virtual-templated-method', u'http://stackoverflow.com/questions/37529679/print-ancestors-of-all-nodes-in-a-binary-tree-can-we-do-it-in-less-than-on2', u'http://stackoverflow.com/questions/37529670/why-does-boostfilesystempathstring-return-by-value-on-windows-and-by-ref']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?', u'Dynamic loading a c++ dll built with MinGW32 from Visual Studio', u'C++ Builder [bcc32 Error] Unit1.cpp(18): E2040 Declaration terminated incorrectly', u'Parallel Assignment to A Shared Variable', u'C++ virtual templated method', u'Print ancestors of all nodes in a Binary Tree. Can we do it in less than O(n^2) time complexity?', u'Why does boost::filesystem::path::string() return by value on Windows and by reference on POSIX?', u'Container of class [on hold]']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart', u'http://stackoverflow.com/questions/37529979/dynamic-loading-a-c-dll-built-with-mingw32-from-visual-studio', u'http://stackoverflow.com/questions/37529950/c-builder-bcc32-error-unit1-cpp18-e2040-declaration-terminated-incorrectl', u'http://stackoverflow.com/questions/37529942/parallel-assignment-to-a-shared-variable', u'http://stackoverflow.com/questions/37529777/c-virtual-templated-method', u'http://stackoverflow.com/questions/37529679/print-ancestors-of-all-nodes-in-a-binary-tree-can-we-do-it-in-less-than-on2', u'http://stackoverflow.com/questions/37529670/why-does-boostfilesystempathstring-return-by-value-on-windows-and-by-ref', u'http://stackoverflow.com/questions/37529609/container-of-class']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?', u'Dynamic loading a c++ dll built with MinGW32 from Visual Studio', u'C++ Builder [bcc32 Error] Unit1.cpp(18): E2040 Declaration terminated incorrectly', u'Parallel Assignment to A Shared Variable', u'C++ virtual templated method', u'Print ancestors of all nodes in a Binary Tree. Can we do it in less than O(n^2) time complexity?', u'Why does boost::filesystem::path::string() return by value on Windows and by reference on POSIX?', u'Container of class [on hold]', u'QFileDialog does not emit signals']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart', u'http://stackoverflow.com/questions/37529979/dynamic-loading-a-c-dll-built-with-mingw32-from-visual-studio', u'http://stackoverflow.com/questions/37529950/c-builder-bcc32-error-unit1-cpp18-e2040-declaration-terminated-incorrectl', u'http://stackoverflow.com/questions/37529942/parallel-assignment-to-a-shared-variable', u'http://stackoverflow.com/questions/37529777/c-virtual-templated-method', u'http://stackoverflow.com/questions/37529679/print-ancestors-of-all-nodes-in-a-binary-tree-can-we-do-it-in-less-than-on2', u'http://stackoverflow.com/questions/37529670/why-does-boostfilesystempathstring-return-by-value-on-windows-and-by-ref', u'http://stackoverflow.com/questions/37529609/container-of-class', u'http://stackoverflow.com/questions/37529397/qfiledialog-does-not-emit-signals']
 [[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'Explain the output of this loop']
u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]'[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop']
, u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', [u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?']
u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?'[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'Quicksort Partition Algorithm', , u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in']
u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', [u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data']
u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?', u'Dynamic loading a c++ dll built with MinGW32 from Visual Studio', u'C++ Builder [bcc32 Error] Unit1.cpp(18): E2040 Declaration terminated incorrectly', u'Parallel Assignment to A Shared Variable', u'C++ virtual templated method', u'Print ancestors of all nodes in a Binary Tree. Can we do it in less than O(n^2) time complexity?', u'Why does boost::filesystem::path::string() return by value on Windows and by reference on POSIX?', u'Container of class [on hold]', u'QFileDialog does not emit signals', u'glClearBufferfv - not declared in this scope?']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros'[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'How to know in a Qt .pro file if visual studio is the compiler?'], 
u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api'[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output']
, u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart'[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string']
, u'http://stackoverflow.com/questions/37529979/dynamic-loading-a-c-dll-built-with-mingw32-from-visual-studio', u'http://stackoverflow.com/questions/37529950/c-builder-bcc32-error-unit1-cpp18-e2040-declaration-terminated-incorrectl', u'http://stackoverflow.com/questions/37529942/parallel-assignment-to-a-shared-variable', u'http://stackoverflow.com/questions/37529777/c-virtual-templated-method', u'http://stackoverflow.com/questions/37529679/print-ancestors-of-all-nodes-in-a-binary-tree-can-we-do-it-in-less-than-on2', u'http://stackoverflow.com/questions/37529670/why-does-boostfilesystempathstring-return-by-value-on-windows-and-by-ref', u'http://stackoverflow.com/questions/37529609/container-of-class'[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37529397/qfiledialog-does-not-emit-signals', u'http://stackoverflow.com/questions/37529277/glclearbufferfv-not-declared-in-this-scope']
, u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess'[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]']
, u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]'[, u'Real Time process list c++', u'C++ - Send messages between processes', u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler'u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]']
, u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?', u'Dynamic loading a c++ dll built with MinGW32 from Visual Studio', [u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ Builder [bcc32 Error] Unit1.cpp(18): E2040 Declaration terminated incorrectly', u'Parallel Assignment to A Shared Variable', u'C++ virtual templated method', u'Print ancestors of all nodes in a Binary Tree. Can we do it in less than O(n^2) time complexity?', u'Why does boost::filesystem::path::string() return by value on Windows and by reference on POSIX?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++']
u'Container of class [on hold]', u'QFileDialog does not emit signals', u'glClearBufferfv - not declared in this scope?', [u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in'u"dlib's scan_fhog_pyramid : set max_pyramid_levels"]
, u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', [u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros'u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?"]
, u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings'[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', , u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree'u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', ]
u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed'[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', , u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp'u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'Efficient ways to calculate (-1)^n in C++', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration']
, u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart', u'http://stackoverflow.com/questions/37529979/dynamic-loading-a-c-dll-built-with-mingw32-from-visual-studio', u'http://stackoverflow.com/questions/37529950/c-builder-bcc32-error-unit1-cpp18-e2040-declaration-terminated-incorrectl', u'http://stackoverflow.com/questions/37529942/parallel-assignment-to-a-shared-variable', u'http://stackoverflow.com/questions/37529777/c-virtual-templated-method', u'http://stackoverflow.com/questions/37529679/print-ancestors-of-all-nodes-in-a-binary-tree-can-we-do-it-in-less-than-on2', u'http://stackoverflow.com/questions/37529670/why-does-boostfilesystempathstring-return-by-value-on-windows-and-by-ref', u'http://stackoverflow.com/questions/37529609/container-of-class', u'http://stackoverflow.com/questions/37529397/qfiledialog-does-not-emit-signals', u'http://stackoverflow.com/questions/37529277/glclearbufferfv-not-declared-in-this-scope', u'http://stackoverflow.com/questions/37529251/dlibs-scan-fhog-pyramid-set-max-pyramid-levels'[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string']
, u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration']
[u'Stack memory - &int is not giving garbage value as expected [duplicate]'[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', , u'Convert char[] into Templated List']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm'u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?', u'Dynamic loading a c++ dll built with MinGW32 from Visual Studio', u'C++ Builder [bcc32 Error] Unit1.cpp(18): E2040 Declaration terminated incorrectly', u'Parallel Assignment to A Shared Variable']
, u'C++ virtual templated method', u'Print ancestors of all nodes in a Binary Tree. Can we do it in less than O(n^2) time complexity?', u'Why does boost::filesystem::path::string() return by value on Windows and by reference on POSIX?', u'Container of class [on hold]', u'QFileDialog does not emit signals', u'glClearBufferfv - not declared in this scope?', u"dlib's scan_fhog_pyramid : set max_pyramid_levels", u'Definition of static const as constexpr'][u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List'
, u'Visual C++ project dependency on multiple architectures']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method'[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', , u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list'u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures']
, u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', [u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string'u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'Empty places at the end of the arrays c ++ [on hold]', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart', u'http://stackoverflow.com/questions/37529979/dynamic-loading-a-c-dll-built-with-mingw32-from-visual-studio', u'http://stackoverflow.com/questions/37529950/c-builder-bcc32-error-unit1-cpp18-e2040-declaration-terminated-incorrectl', u'http://stackoverflow.com/questions/37529942/parallel-assignment-to-a-shared-variable', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', , u'http://stackoverflow.com/questions/37529777/c-virtual-templated-method', u'http://stackoverflow.com/questions/37529679/print-ancestors-of-all-nodes-in-a-binary-tree-can-we-do-it-in-less-than-on2', u'http://stackoverflow.com/questions/37529670/why-does-boostfilesystempathstring-return-by-value-on-windows-and-by-ref', u'http://stackoverflow.com/questions/37529609/container-of-class', u'http://stackoverflow.com/questions/37529397/qfiledialog-does-not-emit-signals', u'http://stackoverflow.com/questions/37529277/glclearbufferfv-not-declared-in-this-scope', u'http://stackoverflow.com/questions/37529251/dlibs-scan-fhog-pyramid-set-max-pyramid-levels'u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'http://stackoverflow.com/questions/37529246/definition-of-static-const-as-constexpr']
]
[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so", u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program'[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', , u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?'u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be']
, u'C++ base class pointers, collection classes', u'Randomly select from a string array and set equal to variable [on hold]', u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', u'How should I copy values from inside a thread back to the main thread?', [u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration'u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?', u'Dynamic loading a c++ dll built with MinGW32 from Visual Studio', , u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers']
u'C++ Builder [bcc32 Error] Unit1.cpp(18): E2040 Declaration terminated incorrectly', u'Parallel Assignment to A Shared Variable', u'C++ virtual templated method', u'Print ancestors of all nodes in a Binary Tree. Can we do it in less than O(n^2) time complexity?', u'Why does boost::filesystem::path::string() return by value on Windows and by reference on POSIX?', u'Container of class [on hold]', [u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing'u'QFileDialog does not emit signals', u'glClearBufferfv - not declared in this scope?', u"dlib's scan_fhog_pyramid : set max_pyramid_levels", u'Definition of static const as constexpr', u'Which is faster inline function or MACRO [on hold]']
, u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', [u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers'u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions']
, u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method', u'http://stackoverflow.com/questions/37531492/conversion-program', [u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration'u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', , u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings'u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]']
, u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c'[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', , u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist'u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', , u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed'u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', , u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases'u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz']
, u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive'[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart', u'http://stackoverflow.com/questions/37529979/dynamic-loading-a-c-dll-built-with-mingw32-from-visual-studio', u'http://stackoverflow.com/questions/37529950/c-builder-bcc32-error-unit1-cpp18-e2040-declaration-terminated-incorrectl', u'http://stackoverflow.com/questions/37529942/parallel-assignment-to-a-shared-variable', u'http://stackoverflow.com/questions/37529777/c-virtual-templated-method', u'http://stackoverflow.com/questions/37529679/print-ancestors-of-all-nodes-in-a-binary-tree-can-we-do-it-in-less-than-on2', u'http://stackoverflow.com/questions/37529670/why-does-boostfilesystempathstring-return-by-value-on-windows-and-by-ref', u'http://stackoverflow.com/questions/37529609/container-of-class', u'Convert char[] into Templated List', , u'http://stackoverflow.com/questions/37529397/qfiledialog-does-not-emit-signals', u'http://stackoverflow.com/questions/37529277/glclearbufferfv-not-declared-in-this-scope', u'http://stackoverflow.com/questions/37529251/dlibs-scan-fhog-pyramid-set-max-pyramid-levels', u'http://stackoverflow.com/questions/37529246/definition-of-static-const-as-constexpr', u'http://stackoverflow.com/questions/37529235/which-is-faster-inline-function-or-macro']u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets']

[u'Stack memory - &int is not giving garbage value as expected [duplicate]', u"gdb in emacs hangs when issuing the 'q(uit)' command", u'Exception \u201cboost::interprocess::intermodule_singleton initialization\u201d from Boost Interprocess', u"Error using connector.internal.autostart.run Can't reload ibmwmathlinalg.so"[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', , u'Circular linking libraries', u'Triangulation of concave polygon using Triangle library', u'Partial specialization of specific member functions', u'Preprocess C-Code with gcc or cpp without resolving macros', u'How do i insert a linked list inside a node of a linked list in c++', u'QtConcurrent Map Cannot Use Class Method', u'Conversion Program', u'Multiple shared_ptrs to same object, one corrupted', u'gcc compiler undefined refrence many C files [on hold]', u'Real Time process list c++', u'C++ - Send messages between processes', u'how to access vector of map of ( int and vector of strings )', u'How to write \u201cif textbox is empty\u201d in Visual C++'u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'Conisce constexpr tree', u'Force non-class functions to exist?', u'Alternatives to Windows service application in C++. Any API?', u'C++ base class pointers, collection classes', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'Randomly select from a string array and set equal to variable [on hold]', , u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets']
u'Visual Studio Debugger is Unloading Symbols for DLL', u'Partial HTTP response when using BIO_read', u'OpenCV ANDROID_ABI: not all variants are displayed', u'In this example why do I need CRTP?', u'Where to get Settings for camera calibration in opencv?', u'Catch dynamically pass arguments to test cases', [u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]'u'How should I copy values from inside a thread back to the main thread?', u'Quicksort Partition Algorithm', u'Explanation of this code output [duplicate]', u'Difference between OpenCV type CV_32F and CV_32FC1', u'Redirecting data from MFC CArchive to boost::archive::xml_oarchive', u'std::array Type Initialization', u'how to bind a C++ function to a xaml text textblock property', , u'Why does this class member variable not change when calling a CUDA kernel function?']u'Multithreading non-static in class C++', u'How to check if the program is run from an autostart?', u'Dynamic loading a c++ dll built with MinGW32 from Visual Studio', u'C++ Builder [bcc32 Error] Unit1.cpp(18): E2040 Declaration terminated incorrectly', u'Parallel Assignment to A Shared Variable'
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'C++ virtual templated method', , u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c'u'Print ancestors of all nodes in a Binary Tree. Can we do it in less than O(n^2) time complexity?', u'Why does boost::filesystem::path::string() return by value on Windows and by reference on POSIX?', u'Container of class [on hold]', u'QFileDialog does not emit signals', u'glClearBufferfv - not declared in this scope?', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u"dlib's scan_fhog_pyramid : set max_pyramid_levels", u'Definition of static const as constexpr', u'Which is faster inline function or MACRO [on hold]', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'Why I receive error LNK1561 \u201cEntry point must be defined\u201d when I compile a DLL Project?']
, u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi']
[u'http://stackoverflow.com/questions/37532112/stack-memory-int-is-not-giving-garbage-value-as-expected', u'http://stackoverflow.com/questions/37531956/gdb-in-emacs-hangs-when-issuing-the-quit-command', u'http://stackoverflow.com/questions/37531915/exception-boostinterprocessintermodule-singleton-initialization-from-boost', u'http://stackoverflow.com/questions/37531857/error-using-connector-internal-autostart-run-cant-reload-ibmwmathlinalg-so', u'http://stackoverflow.com/questions/37531818/circular-linking-libraries', u'http://stackoverflow.com/questions/37531755/triangulation-of-concave-polygon-using-triangle-library', u'http://stackoverflow.com/questions/37531714/partial-specialization-of-specific-member-functions', u'http://stackoverflow.com/questions/37531684/preprocess-c-code-with-gcc-or-cpp-without-resolving-macros', u'http://stackoverflow.com/questions/37531553/how-do-i-insert-a-linked-list-inside-a-node-of-a-linked-list-in-c', u'http://stackoverflow.com/questions/37531509/qtconcurrent-map-cannot-use-class-method'[u'Explain the output of this loop', u'http://stackoverflow.com/questions/37531492/conversion-program', u'http://stackoverflow.com/questions/37531302/multiple-shared-ptrs-to-same-object-one-corrupted', u'http://stackoverflow.com/questions/37531299/gcc-compiler-undefined-refrence-many-c-files', u'http://stackoverflow.com/questions/37531265/real-time-process-list-c', u'http://stackoverflow.com/questions/37531232/c-send-messages-between-processes', u'http://stackoverflow.com/questions/37531225/how-to-access-vector-of-map-of-int-and-vector-of-strings', u'http://stackoverflow.com/questions/37531164/how-to-write-if-textbox-is-empty-in-visual-c', u'http://stackoverflow.com/questions/37531118/conisce-constexpr-tree', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'http://stackoverflow.com/questions/37531101/force-non-class-functions-to-exist', u'http://stackoverflow.com/questions/37530969/alternatives-to-windows-service-application-in-c-any-api', u'http://stackoverflow.com/questions/37530924/c-base-class-pointers-collection-classes', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'http://stackoverflow.com/questions/37530849/randomly-select-from-a-string-array-and-set-equal-to-variable', u'http://stackoverflow.com/questions/37530775/visual-studio-debugger-is-unloading-symbols-for-dll', u'http://stackoverflow.com/questions/37530730/partial-http-response-when-using-bio-read', u'http://stackoverflow.com/questions/37530701/opencv-android-abi-not-all-variants-are-displayed', u'http://stackoverflow.com/questions/37530699/in-this-example-why-do-i-need-crtp', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster']
, u'http://stackoverflow.com/questions/37530631/where-to-get-settings-for-camera-calibration-in-opencv', u'http://stackoverflow.com/questions/37530546/catch-dynamically-pass-arguments-to-test-cases', u'http://stackoverflow.com/questions/37530534/how-should-i-copy-values-from-inside-a-thread-back-to-the-main-thread', [u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string'u'http://stackoverflow.com/questions/37530411/quicksort-partition-algorithm', u'http://stackoverflow.com/questions/37530370/explanation-of-this-code-output', u'http://stackoverflow.com/questions/37530368/difference-between-opencv-type-cv-32f-and-cv-32fc1', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37530356/redirecting-data-from-mfc-carchive-to-boostarchivexml-oarchive', u'http://stackoverflow.com/questions/37530352/stdarray-type-initialization', u'http://stackoverflow.com/questions/37530328/how-to-bind-a-c-function-to-a-xaml-text-textblock-property', u'http://stackoverflow.com/questions/37530047/multithreading-non-static-in-class-c', u'http://stackoverflow.com/questions/37529991/how-to-check-if-the-program-is-run-from-an-autostart', u'http://stackoverflow.com/questions/37529979/dynamic-loading-a-c-dll-built-with-mingw32-from-visual-studio', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', , u'http://stackoverflow.com/questions/37529950/c-builder-bcc32-error-unit1-cpp18-e2040-declaration-terminated-incorrectl', u'http://stackoverflow.com/questions/37529942/parallel-assignment-to-a-shared-variable', u'http://stackoverflow.com/questions/37529777/c-virtual-templated-method', u'http://stackoverflow.com/questions/37529679/print-ancestors-of-all-nodes-in-a-binary-tree-can-we-do-it-in-less-than-on2'u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster']
, u'http://stackoverflow.com/questions/37529670/why-does-boostfilesystempathstring-return-by-value-on-windows-and-by-ref', u'http://stackoverflow.com/questions/37529609/container-of-class', u'http://stackoverflow.com/questions/37529397/qfiledialog-does-not-emit-signals', u'http://stackoverflow.com/questions/37529277/glclearbufferfv-not-declared-in-this-scope', u'http://stackoverflow.com/questions/37529251/dlibs-scan-fhog-pyramid-set-max-pyramid-levels', u'http://stackoverflow.com/questions/37529246/definition-of-static-const-as-constexpr', u'http://stackoverflow.com/questions/37529235/which-is-faster-inline-function-or-macro', u'http://stackoverflow.com/questions/37529162/why-i-receive-error-lnk1561-entry-point-must-be-defined-when-i-compile-a-dll-p']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise']
 [u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration'Found a new question link!
, u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures'Found a new question link!
, u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures'Found a new question link!
, u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string'Found a new question link!
, u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2']
 Found a new question link!
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]'Found a new question link!
, u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers'Found a new question link!
, u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures'Found a new question link!
, u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures'Found a new question link!
, u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers'Found a new question link!
, u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?"]
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++']
[ u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', Found a new question link!
u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets'Found a new question link!, u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', 
u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]'Found a new question link!
, u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures'Found a new question link!
, u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++'Found a new question link!
, u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do']
 Found a new question link!
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]'Found a new question link!
, u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c'Found a new question link!
, u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified']
 [u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]'Found a new question link!
, u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers'Found a new question link!
, u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value', u'C++ Dynamic Arrays - Why am I able to do this? [duplicate]']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers'Found a new question link!, u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers'
, u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c'Found a new question link!
, u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value', u'http://stackoverflow.com/questions/37533064/c-dynamic-arrays-why-am-i-able-to-do-this']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value', u'C++ Dynamic Arrays - Why am I able to do this? [duplicate]', u'Function that captures a copy of the loop counter in Rust']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures'Found a new question link!
, u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value', u'http://stackoverflow.com/questions/37533064/c-dynamic-arrays-why-am-i-able-to-do-this', u'http://stackoverflow.com/questions/37532963/function-that-captures-a-copy-of-the-loop-counter-in-rust']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]'Found a new question link!
, u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value', u'C++ Dynamic Arrays - Why am I able to do this? [duplicate]', u'Function that captures a copy of the loop counter in Rust', u'Unique character code not working when ran in linux but fine in windows (C++)']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi'Found a new question link!
, u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value', u'http://stackoverflow.com/questions/37533064/c-dynamic-arrays-why-am-i-able-to-do-this'Found a new question link!
, u'http://stackoverflow.com/questions/37532963/function-that-captures-a-copy-of-the-loop-counter-in-rust', u'http://stackoverflow.com/questions/37532873/unique-character-code-not-working-when-ran-in-linux-but-fine-in-windows-c']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer'Found a new question link!
, u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value', u'C++ Dynamic Arrays - Why am I able to do this? [duplicate]', u'Function that captures a copy of the loop counter in Rust', u'Unique character code not working when ran in linux but fine in windows (C++)', u'gdb: How to redirect the log-file of shared lib to gdb output']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value', u'http://stackoverflow.com/questions/37533064/c-dynamic-arrays-why-am-i-able-to-do-this', u'http://stackoverflow.com/questions/37532963/function-that-captures-a-copy-of-the-loop-counter-in-rust', u'http://stackoverflow.com/questions/37532873/unique-character-code-not-working-when-ran-in-linux-but-fine-in-windows-c', u'http://stackoverflow.com/questions/37532843/gdb-how-to-redirect-the-log-file-of-shared-lib-to-gdb-output']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?'Found a new question link!
, u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value', u'C++ Dynamic Arrays - Why am I able to do this? [duplicate]', u'Function that captures a copy of the loop counter in Rust', u'Unique character code not working when ran in linux but fine in windows (C++)', u'gdb: How to redirect the log-file of shared lib to gdb output', u'C++ Boost: Multiple .lib files, which one to use (s, sg?)?']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers'Found a new question link!
, u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value', u'http://stackoverflow.com/questions/37533064/c-dynamic-arrays-why-am-i-able-to-do-this', u'http://stackoverflow.com/questions/37532963/function-that-captures-a-copy-of-the-loop-counter-in-rust', u'http://stackoverflow.com/questions/37532873/unique-character-code-not-working-when-ran-in-linux-but-fine-in-windows-c', u'http://stackoverflow.com/questions/37532843/gdb-how-to-redirect-the-log-file-of-shared-lib-to-gdb-output', u'http://stackoverflow.com/questions/37532814/c-boost-multiple-lib-files-which-one-to-use-s-sg']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value', u'C++ Dynamic Arrays - Why am I able to do this? [duplicate]', u'Function that captures a copy of the loop counter in Rust', u'Unique character code not working when ran in linux but fine in windows (C++)', u'gdb: How to redirect the log-file of shared lib to gdb output', u'C++ Boost: Multiple .lib files, which one to use (s, sg?)?', u"Program Sunfounder's special LCD-Display with a microcontroller"]
 [u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures'Found a new question link!
, u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value', u'http://stackoverflow.com/questions/37533064/c-dynamic-arrays-why-am-i-able-to-do-this', u'http://stackoverflow.com/questions/37532963/function-that-captures-a-copy-of-the-loop-counter-in-rust', u'http://stackoverflow.com/questions/37532873/unique-character-code-not-working-when-ran-in-linux-but-fine-in-windows-c', u'http://stackoverflow.com/questions/37532843/gdb-how-to-redirect-the-log-file-of-shared-lib-to-gdb-output', Found a new question link!
u'http://stackoverflow.com/questions/37532814/c-boost-multiple-lib-files-which-one-to-use-s-sg', u'http://stackoverflow.com/questions/37532748/program-sunfounders-special-lcd-display-with-a-microcontroller']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value', u'C++ Dynamic Arrays - Why am I able to do this? [duplicate]', u'Function that captures a copy of the loop counter in Rust', u'Unique character code not working when ran in linux but fine in windows (C++)', u'gdb: How to redirect the log-file of shared lib to gdb output', u'C++ Boost: Multiple .lib files, which one to use (s, sg?)?', u"Program Sunfounder's special LCD-Display with a microcontroller", u'Changing an integer or a double value in a binary file by adding to it or substracting (fstream) (C++)']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c'Found a new question link!
, u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value', u'http://stackoverflow.com/questions/37533064/c-dynamic-arrays-why-am-i-able-to-do-this', u'http://stackoverflow.com/questions/37532963/function-that-captures-a-copy-of-the-loop-counter-in-rust', u'http://stackoverflow.com/questions/37532873/unique-character-code-not-working-when-ran-in-linux-but-fine-in-windows-c', u'http://stackoverflow.com/questions/37532843/gdb-how-to-redirect-the-log-file-of-shared-lib-to-gdb-output', u'http://stackoverflow.com/questions/37532814/c-boost-multiple-lib-files-which-one-to-use-s-sg', u'http://stackoverflow.com/questions/37532748/program-sunfounders-special-lcd-display-with-a-microcontroller', u'http://stackoverflow.com/questions/37532724/changing-an-integer-or-a-double-value-in-a-binary-file-by-adding-to-it-or-substr']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value', u'C++ Dynamic Arrays - Why am I able to do this? [duplicate]', u'Function that captures a copy of the loop counter in Rust', u'Unique character code not working when ran in linux but fine in windows (C++)', u'gdb: How to redirect the log-file of shared lib to gdb output', u'C++ Boost: Multiple .lib files, which one to use (s, sg?)?', u"Program Sunfounder's special LCD-Display with a microcontroller", u'Changing an integer or a double value in a binary file by adding to it or substracting (fstream) (C++)', u'Compiling external header files in mingw under windows']
[ u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop'Found a new question link!, u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', 
u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value', u'http://stackoverflow.com/questions/37533064/c-dynamic-arrays-why-am-i-able-to-do-this', u'http://stackoverflow.com/questions/37532963/function-that-captures-a-copy-of-the-loop-counter-in-rust', u'http://stackoverflow.com/questions/37532873/unique-character-code-not-working-when-ran-in-linux-but-fine-in-windows-c', u'http://stackoverflow.com/questions/37532843/gdb-how-to-redirect-the-log-file-of-shared-lib-to-gdb-output', u'http://stackoverflow.com/questions/37532814/c-boost-multiple-lib-files-which-one-to-use-s-sg', u'http://stackoverflow.com/questions/37532748/program-sunfounders-special-lcd-display-with-a-microcontroller', u'http://stackoverflow.com/questions/37532724/changing-an-integer-or-a-double-value-in-a-binary-file-by-adding-to-it-or-substr', u'http://stackoverflow.com/questions/37532699/compiling-external-header-files-in-mingw-under-windows']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value', u'C++ Dynamic Arrays - Why am I able to do this? [duplicate]', u'Function that captures a copy of the loop counter in Rust', u'Unique character code not working when ran in linux but fine in windows (C++)', u'gdb: How to redirect the log-file of shared lib to gdb output', u'C++ Boost: Multiple .lib files, which one to use (s, sg?)?', u"Program Sunfounder's special LCD-Display with a microcontroller", u'Changing an integer or a double value in a binary file by adding to it or substracting (fstream) (C++)', u'Compiling external header files in mingw under windows', u'Read class objects from file c++']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures'Found a new question link!
, u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions'Found a new question link!
, u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value', u'http://stackoverflow.com/questions/37533064/c-dynamic-arrays-why-am-i-able-to-do-this', u'http://stackoverflow.com/questions/37532963/function-that-captures-a-copy-of-the-loop-counter-in-rust', u'http://stackoverflow.com/questions/37532873/unique-character-code-not-working-when-ran-in-linux-but-fine-in-windows-c', u'http://stackoverflow.com/questions/37532843/gdb-how-to-redirect-the-log-file-of-shared-lib-to-gdb-output', u'http://stackoverflow.com/questions/37532814/c-boost-multiple-lib-files-which-one-to-use-s-sg', u'http://stackoverflow.com/questions/37532748/program-sunfounders-special-lcd-display-with-a-microcontroller', u'http://stackoverflow.com/questions/37532724/changing-an-integer-or-a-double-value-in-a-binary-file-by-adding-to-it-or-substr', u'http://stackoverflow.com/questions/37532699/compiling-external-header-files-in-mingw-under-windows', u'http://stackoverflow.com/questions/37532631/read-class-objects-from-file-c']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value', u'C++ Dynamic Arrays - Why am I able to do this? [duplicate]', u'Function that captures a copy of the loop counter in Rust', u'Unique character code not working when ran in linux but fine in windows (C++)', u'gdb: How to redirect the log-file of shared lib to gdb output', u'C++ Boost: Multiple .lib files, which one to use (s, sg?)?', u"Program Sunfounder's special LCD-Display with a microcontroller", u'Changing an integer or a double value in a binary file by adding to it or substracting (fstream) (C++)', u'Compiling external header files in mingw under windows', u'Read class objects from file c++', u'Reading structure from Binary file to Linked List leading to an infinite loop'Found a new question link!
]
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers'Found a new question link!
, u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value', u'http://stackoverflow.com/questions/37533064/c-dynamic-arrays-why-am-i-able-to-do-this', u'http://stackoverflow.com/questions/37532963/function-that-captures-a-copy-of-the-loop-counter-in-rust', u'http://stackoverflow.com/questions/37532873/unique-character-code-not-working-when-ran-in-linux-but-fine-in-windows-c', u'http://stackoverflow.com/questions/37532843/gdb-how-to-redirect-the-log-file-of-shared-lib-to-gdb-output', u'http://stackoverflow.com/questions/37532814/c-boost-multiple-lib-files-which-one-to-use-s-sg', u'http://stackoverflow.com/questions/37532748/program-sunfounders-special-lcd-display-with-a-microcontroller', u'http://stackoverflow.com/questions/37532724/changing-an-integer-or-a-double-value-in-a-binary-file-by-adding-to-it-or-substr', u'http://stackoverflow.com/questions/37532699/compiling-external-header-files-in-mingw-under-windows', u'http://stackoverflow.com/questions/37532631/read-class-objects-from-file-c', u'http://stackoverflow.com/questions/37532509/reading-structure-from-binary-file-to-linked-list-leading-to-an-infinite-loop']
 [u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', Found a new question link!
u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value', u'C++ Dynamic Arrays - Why am I able to do this? [duplicate]', u'Function that captures a copy of the loop counter in Rust', u'Unique character code not working when ran in linux but fine in windows (C++)', u'gdb: How to redirect the log-file of shared lib to gdb output', u'C++ Boost: Multiple .lib files, which one to use (s, sg?)?', u"Program Sunfounder's special LCD-Display with a microcontroller", u'Changing an integer or a double value in a binary file by adding to it or substracting (fstream) (C++)', u'Compiling external header files in mingw under windows', u'Read class objects from file c++', u'Reading structure from Binary file to Linked List leading to an infinite loop', u'How can I break this std::shared_ptr reference cycle?']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value', u'http://stackoverflow.com/questions/37533064/c-dynamic-arrays-why-am-i-able-to-do-this', u'http://stackoverflow.com/questions/37532963/function-that-captures-a-copy-of-the-loop-counter-in-rust', u'http://stackoverflow.com/questions/37532873/unique-character-code-not-working-when-ran-in-linux-but-fine-in-windows-c', u'http://stackoverflow.com/questions/37532843/gdb-how-to-redirect-the-log-file-of-shared-lib-to-gdb-output', u'http://stackoverflow.com/questions/37532814/c-boost-multiple-lib-files-which-one-to-use-s-sg', u'http://stackoverflow.com/questions/37532748/program-sunfounders-special-lcd-display-with-a-microcontroller', u'http://stackoverflow.com/questions/37532724/changing-an-integer-or-a-double-value-in-a-binary-file-by-adding-to-it-or-substr', u'http://stackoverflow.com/questions/37532699/compiling-external-header-files-in-mingw-under-windows', u'http://stackoverflow.com/questions/37532631/read-class-objects-from-file-c', u'http://stackoverflow.com/questions/37532509/reading-structure-from-binary-file-to-linked-list-leading-to-an-infinite-loop', u'http://stackoverflow.com/questions/37532408/how-can-i-break-this-stdshared-ptr-reference-cycle']
[u'Explain the output of this loop'Found a new question link!
, u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]'Found a new question link!
, u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value', u'C++ Dynamic Arrays - Why am I able to do this? [duplicate]', u'Function that captures a copy of the loop counter in Rust', u'Unique character code not working when ran in linux but fine in windows (C++)', u'gdb: How to redirect the log-file of shared lib to gdb output', u'C++ Boost: Multiple .lib files, which one to use (s, sg?)?', u"Program Sunfounder's special LCD-Display with a microcontroller", u'Changing an integer or a double value in a binary file by adding to it or substracting (fstream) (C++)', u'Compiling external header files in mingw under windows', u'Read class objects from file c++', u'Reading structure from Binary file to Linked List leading to an infinite loop', u'How can I break this std::shared_ptr reference cycle?', u'Casting from void* to int']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c', u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value', u'http://stackoverflow.com/questions/37533064/c-dynamic-arrays-why-am-i-able-to-do-this', u'http://stackoverflow.com/questions/37532963/function-that-captures-a-copy-of-the-loop-counter-in-rust', u'http://stackoverflow.com/questions/37532873/unique-character-code-not-working-when-ran-in-linux-but-fine-in-windows-c', u'http://stackoverflow.com/questions/37532843/gdb-how-to-redirect-the-log-file-of-shared-lib-to-gdb-output'Found a new question link!
, u'http://stackoverflow.com/questions/37532814/c-boost-multiple-lib-files-which-one-to-use-s-sg', u'http://stackoverflow.com/questions/37532748/program-sunfounders-special-lcd-display-with-a-microcontroller', u'http://stackoverflow.com/questions/37532724/changing-an-integer-or-a-double-value-in-a-binary-file-by-adding-to-it-or-substr', u'http://stackoverflow.com/questions/37532699/compiling-external-header-files-in-mingw-under-windows', u'http://stackoverflow.com/questions/37532631/read-class-objects-from-file-c', u'http://stackoverflow.com/questions/37532509/reading-structure-from-binary-file-to-linked-list-leading-to-an-infinite-loop', u'http://stackoverflow.com/questions/37532408/how-can-i-break-this-stdshared-ptr-reference-cycle', u'http://stackoverflow.com/questions/37532320/casting-from-void-to-int']
[u'Explain the output of this loop', u'how to create an ordered set using two ordering criteria(for a set of pairs) in c++?', u'c++ polymorphism: upcasting/re-downcasting and containers of base class, missing data', u'How to know in a Qt .pro file if visual studio is the compiler?', u'C++ -D_GLIBCXX_DEBUG with a string', u'Empty places at the end of the arrays c ++ [on hold]', u'Efficient ways to calculate (-1)^n in C++', u"Why aren't template expressions simplified internally?", u'Forward declaration and global namespace declaration', u'Convert char[] into Templated List', u'Visual C++ project dependency on multiple architectures', u'Is it possible to have a zero-cost assert() such that code should not have to be modified between debug and release builds?', u'Multidimensional array with array class error: too many initializers', u'error LNK2019: unresolved external symbol \u201cpublic: __thiscall FizzBuzz::FizzBuzz(void)\u201d referenced in function _wmain [duplicate]', u'Gnuplot with wxWidgets', u'Find function error [on hold]', u'Why does this class member variable not change when calling a CUDA kernel function?', u'threading program in C++ not faster', u'How to set up ZMQ for use in Visual Studio 2015 Enterprise', u'Why return a const reference for a basic type? (std::string::operator[])', u'Modulus and Binary Numbers', u'Questions about thread safety and suggestions [on hold]', u'Overriding function from derived class [on hold]', u'Building with libfreenect2', u'QAbstractListModel dataChanged signal not updating ListView (QML)', u'How to get address of function return value inside constructor via pointer', u'Why am I getting \u201cpointer to incomplete class type is not allowed\u201d error using example code straight from the MySQL Connector/C++ documentation?', u'C++ while loop in a custom file structure', u"What's the best way to design a recursive function that generates all combinations of n-digits numbers?", u'I am learning programming, I came across Look and Say sequence.I tried to code it in c++', u'priority queue read from file c++', u'Undefined behaviour when taking string input through scanf [duplicate]', u'OpenMP parallel nowait', u'Eclipse C/C++ import settings: Not sure what to do', u'Serial read and write via third party application to arduino', u'Qt Process Events processing for longer than specified', u'NU_SVM OpenCV 3.1 c++. Predict returning always the same value', u'C++ Dynamic Arrays - Why am I able to do this? [duplicate]', u'Function that captures a copy of the loop counter in Rust', u'Unique character code not working when ran in linux but fine in windows (C++)', u'gdb: How to redirect the log-file of shared lib to gdb output', u'C++ Boost: Multiple .lib files, which one to use (s, sg?)?', u"Program Sunfounder's special LCD-Display with a microcontroller", u'Changing an integer or a double value in a binary file by adding to it or substracting (fstream) (C++)', u'Compiling external header files in mingw under windows', u'Read class objects from file c++', u'Reading structure from Binary file to Linked List leading to an infinite loop', u'How can I break this std::shared_ptr reference cycle?', u'Casting from void* to int', u'Why does this work like this? [duplicate]']
[u'http://stackoverflow.com/questions/37535314/explain-the-output-of-this-loop', u'http://stackoverflow.com/questions/37535282/how-to-create-an-ordered-set-using-two-ordering-criteriafor-a-set-of-pairs-in', u'http://stackoverflow.com/questions/37535264/c-polymorphism-upcasting-re-downcasting-and-containers-of-base-class-missing', u'http://stackoverflow.com/questions/37535126/how-to-know-in-a-qt-pro-file-if-visual-studio-is-the-compiler', u'http://stackoverflow.com/questions/37535088/c-d-glibcxx-debug-with-a-string', u'http://stackoverflow.com/questions/37534898/empty-places-at-the-end-of-the-arrays-c', u'http://stackoverflow.com/questions/37534888/efficient-ways-to-calculate-1n-in-c', u'http://stackoverflow.com/questions/37534839/why-arent-template-expressions-simplified-internally', u'http://stackoverflow.com/questions/37534838/forward-declaration-and-global-namespace-declaration', u'http://stackoverflow.com/questions/37534770/convert-char-into-templated-list', u'http://stackoverflow.com/questions/37534711/visual-c-project-dependency-on-multiple-architectures', u'http://stackoverflow.com/questions/37534605/is-it-possible-to-have-a-zero-cost-assert-such-that-code-should-not-have-to-be', u'http://stackoverflow.com/questions/37534541/multidimensional-array-with-array-class-error-too-many-initializers', u'http://stackoverflow.com/questions/37534503/error-lnk2019-unresolved-external-symbol-public-thiscall-fizzbuzzfizzbuzz', u'http://stackoverflow.com/questions/37534497/gnuplot-with-wxwidgets', u'http://stackoverflow.com/questions/37534351/find-function-error', u'http://stackoverflow.com/questions/37534280/why-does-this-class-member-variable-not-change-when-calling-a-cuda-kernel-functi', u'http://stackoverflow.com/questions/37534163/threading-program-in-c-not-faster', u'http://stackoverflow.com/questions/37534136/how-to-set-up-zmq-for-use-in-visual-studio-2015-enterprise', u'http://stackoverflow.com/questions/37534102/why-return-a-const-reference-for-a-basic-type-stdstringoperator', u'http://stackoverflow.com/questions/37534075/modulus-and-binary-numbers', u'http://stackoverflow.com/questions/37534068/questions-about-thread-safety-and-suggestions', u'http://stackoverflow.com/questions/37533933/overriding-function-from-derived-class', u'http://stackoverflow.com/questions/37533866/building-with-libfreenect2', u'http://stackoverflow.com/questions/37533773/qabstractlistmodel-datachanged-signal-not-updating-listview-qml', u'http://stackoverflow.com/questions/37533765/how-to-get-address-of-function-return-value-inside-constructor-via-pointer', u'http://stackoverflow.com/questions/37533740/why-am-i-getting-pointer-to-incomplete-class-type-is-not-allowed-error-using-e', u'http://stackoverflow.com/questions/37533688/c-while-loop-in-a-custom-file-structure', u'http://stackoverflow.com/questions/37533609/whats-the-best-way-to-design-a-recursive-function-that-generates-all-combinatio', u'http://stackoverflow.com/questions/37533573/i-am-learning-programming-i-came-across-look-and-say-sequence-i-tried-to-code-i', u'http://stackoverflow.com/questions/37533537/priority-queue-read-from-file-c'Found a new question link!
, u'http://stackoverflow.com/questions/37533529/undefined-behaviour-when-taking-string-input-through-scanf', u'http://stackoverflow.com/questions/37533363/openmp-parallel-nowait', u'http://stackoverflow.com/questions/37533362/eclipse-c-c-import-settings-not-sure-what-to-do', u'http://stackoverflow.com/questions/37533231/serial-read-and-write-via-third-party-application-to-arduino', u'http://stackoverflow.com/questions/37533183/qt-process-events-processing-for-longer-than-specified', u'http://stackoverflow.com/questions/37533074/nu-svm-opencv-3-1-c-predict-returning-always-the-same-value', u'http://stackoverflow.com/questions/37533064/c-dynamic-arrays-why-am-i-able-to-do-this', u'http://stackoverflow.com/questions/37532963/function-that-captures-a-copy-of-the-loop-counter-in-rust', u'http://stackoverflow.com/questions/37532873/unique-character-code-not-working-when-ran-in-linux-but-fine-in-windows-c', u'http://stackoverflow.com/questions/37532843/gdb-how-to-redirect-the-log-file-of-shared-lib-to-gdb-output', u'http://stackoverflow.com/questions/37532814/c-boost-multiple-lib-files-which-one-to-use-s-sg', u'http://stackoverflow.com/questions/37532748/program-sunfounders-special-lcd-display-with-a-microcontroller', u'http://stackoverflow.com/questions/37532724/changing-an-integer-or-a-double-value-in-a-binary-file-by-adding-to-it-or-substr', u'http://stackoverflow.com/questions/37532699/compiling-external-header-files-in-mingw-under-windows', u'http://stackoverflow.com/questions/37532631/read-class-objects-from-file-c', u'http://stackoverflow.com/questions/37532509/reading-structure-from-binary-file-to-linked-list-leading-to-an-infinite-loop', u'http://stackoverflow.com/questions/37532408/how-can-i-break-this-stdshared-ptr-reference-cycle', u'http://stackoverflow.com/questions/37532320/casting-from-void-to-int', u'http://stackoverflow.com/questions/37532254/why-does-this-work-like-this']
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
 Found a new question link!
Found a new question link!
 Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
All index page are done!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
Found a new question link!
All index page are done!

I'm using emacs 24.5.1 under Mac Yosemite, in graphical mode and I'm trying to get gdb 7.11 working. 
After starting gdb with 'gdb', I use 'r' to run a mini C++ code, consisting only of an empty main(), which exits normally. After it exits I can type 'r' again and the program will run and exit fine again. However, when I type 'q' to quit gdb, I get a newline without the (gdb) prompt, but gdb does not seem to have quit; It no longer responds to input, but when I try invoking gdb again, emacs tells me that 'this program is already being debugged'.
Current directory is ~/cpp/ppcpp/
GNU gdb (GDB) 7.11
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-apple-darwin15.4.0".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...Reading symbols from /Users/mwisse/cpp/ppcpp/a.out.dSYM/Contents/Resources/DWARF/a.out...done.
done.
(gdb) r
Starting program: /Users/mwisse/cpp/ppcpp/a.out 
[Inferior 1 (process 98675) exited normally]
(gdb) r
Starting program: /Users/mwisse/cpp/ppcpp/a.out 
[Inferior 1 (process 98677) exited normally]
(gdb) q
...This is me typing something to show I can type anything here...
but no response.

Has anyone seen this before?

No answers for this question!
Get a new question page!

I'm using a C++ wrapper of the Triangle library and can't get rid of the triangles that are out of my polygon.
Here is what I want to get:


And here is what I got with Triangle:


(I intentionally didn't fill triangles to show that there are some triangles out of polygon)
I tried to get rid of outer triangles using Ray casting algorithm (finding the center of triangles edges and looking if it is in polygon. If at least one is not there than don't paint this triangle) but it is very slow for my purpose (the polygon is updated every frame). Did I miss something? Which parameters should I pass to Triangle to triangulate concave polygon?
If it is not possible to do what I want with Triangle, could someone suggest me a fast method for painting polygon (my program uses Qt Quick Scene Graph and I'm restricted to paint only in triangles or convex polygons as OpenGL requires)? Currently I want to try tessellation method from GLU and drawing using stencil buffer. Also I plan to try this library.

No answers for this question!
Get a new question page!


This question already has an answer here:


Can a local variable's memory be accessed outside its scope?

                    18 answers
                



I wrote some code to check if i understand stack memory. My goal was to get some kind of garbage value, because i know that after function get to the end stack memory of this function is being overwritten by another called function. 
So the code is:
#include <iostream>
using namespace std;

void speak()
{
    cout << " hello world" << endl;
}

int *add(int *x, int *y)
{
    int *c;
    *c = *x+*y;
    return c;
}

int main()
{
   int a = 3;
   int b = 5;
   int *c = add(&a,&b);
   speak();
   cout << *c;
    return 0;
}

as expected the result is some garbage value. But when i change the add() function to:
int *add(int *x, int *y)
{
    int c;
    c = *x+*y;
    return &c;
}

result is not a garbage value. "int c" is still a local variable of stack memory of add() function, so after another function is called shouldn't it give a garbage value as well?
thanks in advance for your response

New answer:
[u'\nYes, you did get a garbage value. You just didn\'t recognize it as garbage.\nYour code, with either version of the add function, has undefined behavior. In the first version, you dereference the uninitialized pointer object c. In the second, you return the address of a local object and then dereference it in the calling function.\nThe C++ standard defined "undefined behavior" as:\n\nbehavior for which this International Standard imposes no requirements\n\nIt mean that you\'ll get an error message, or even that you\'ll get some result other than the one you might expect. It (usually) means that there\'s a serious error in your code, one that the implementation is not required to detect, either at compile time or at run time.\nIn fact the worst symptom of undefined behavior is getting a seemingly valid result with no visible error. (This is bad because it means you have an error that\'s difficult to diagnose.)\n']
Get a new question page!

We have an application where the code is organized as several libraries, some of which depend on other of those libraries, so the dependency would be something like
App
 |
 +--------+--------+
 |        |        |
 v        v        v
lib1     lib2     lib3
 |        |
 v        v
lib3     lib3

Recently a new method was added in lib3, which depends on a class defined in lib2 using a forward declaration of the class needed in the header file present in lib3. 
Every library is compiled to a static library and then linked to its respectively linking list, so lib2 is in the linking listo of lib2 and also lib3 is in the liking list of lib2.
This works perfectly so far, but I was wondering the drawbacks related to have that kind of compile and linking dependencies. I checked that any change in any header file in lib2 would trigger the recompilation of lib3. 
So is there any other important drawback I should be aware of??

New answer:
[u'\n\nSo is there any other important drawback I should be aware of??\n\nWell, the order of libraries specified for linking actually matters.\nTo get rid of these dependencies the linker usually provides an option to group them if these were just using a single pool of .obj/.o files.\nFor the GCC compiler these options are -Wl,--start-group,-Wl,--end-group.\n']
Get a new question page!

Does there exists a flag that I can pass to one of these preprocessors that causes the preprocessor to not resolve any macros in the code? I"m trying to use it just to concatenate any included header files into one file. Thanks!

New answer:
[u'\nAFAIK there is no such flag. If you only want to concatenate header files - go ahead and write a short program for this. \nYou may anyway need sch program as the preprocessor does more than including headers and extending macros. It is also responsible e.g. for concatenating string literals, so e.g. "This""And""That" is turned into "ThisAndThat". So you will get some unexpected changes in your sources anyway.\n']
Get a new question page!

#include <iostream>

template <typename T1, typename T2>
class B{
public:
    void update(){ std::cerr<<__PRETTY_FUNCTION__<<std::endl; }
    void func1(){ std::cerr<<__PRETTY_FUNCTION__<<std::endl; }
    void func2(){ std::cerr<<__PRETTY_FUNCTION__<<std::endl; }
};

template <typename T1>
class B<T1, int>{
public:
    void update(){ std::cerr<<__PRETTY_FUNCTION__<<"(specialization)"<<std::endl;}
};

int main(){
    B<int, double> b1;
    b1.update();
    b1.func1();
    B<int, int> b2;
    b2.update();
    //b2.func1();//there's no function 'func1' in B<int,int>
}

I want to specialize update function for specific template parameter(data type). 
So I tried to specialize template class B but it seems that I have to implement whole member functions again.
Because other members are exactly same between specializations, reimplementing whole members look cumbersome.
Is there any workaround for this case?

New answer:
[u'\nTag-dispatch the call to update:\ntemplate <typename> struct tag {};\n\ntemplate <typename T1, typename T2>\nclass B\n{\npublic:\n    void update()\n    {\n        return update(tag<B>());\n    }\n\nprivate:\n    template <typename U1>\n    void update(tag<B<U1, int> >)\n    {\n        // specialization\n    }\n\n    template <typename U1, typename U2>\n    void update(tag<B<U1, U2> >)\n    {\n        // normal\n    }\n};\n\nDEMO\n']
Get a new question page!

I got this error while using Matlab as an external engine in C++ code. There are several reasons why this could happen. Some say about lack of permission of various folders. While my case was not due to that.

New answer:
[u'\nMy error was due to missing file libgfortran.so.3.0.0 in /usr/lib/x86_64-linux-gnu This was rectified by reinstalling gfortran using: \nsudo apt-get install gfortran\n\n']
Get a new question page!

Hello I am trying to pass QList to QtConcurrent::Map function, but it fails to start and I don't understand why, maybe some one knows what might be the problem? 
This is the Class Method Code
void MainWindow::find_file(QStringList &lst){
    QString fl_name = ui->ln_FlName->text();
    QRegExp exp;
    exp.setPattern(".*/("+ui->ln_FlName->text()+").*");
    QRegExp exp_2;
    exp.setPattern(".*/("+ui->ln_FlName->text()+")");
     foreach(const QString &str,lst)
      {
        // Do some work...   
      }}

And this is the code when I try to execute this method
void MainWindow::on_btn_start_clicked(){
QDir start_path(ui->ln_Dir->text());
QList<QFuture<QStringList> > future_list;
QList<QStringList> dirs_lists;
QStringList temp_dir_list;
QList<QString> lst_str;
foreach(const QFileInfo fl_inf,start_path.entryInfoList(QDir::NoDotAndDotDot|QDir::Dirs))
{
    if(fl_inf.isDir())
    {
        //Here I use QtConcurrent::run with other method and it works fine

        QFuture<QStringList>ft;
        ft=QtConcurrent::run(this,&MainWindow::File_Search,fl_inf.filePath());
        future_list.append(ft);
        num_ft+=1;
        temp_dir_list.append(fl_inf.filePath());
        lst_str.append(fl_inf.filePath());
    }


}
dirs_lists.append(temp_dir_list);
long long int sum = 0;
for(int i=0;i<future_list.count();i++)
{

    sum += future_list.at(i).result().count();
    dirs_lists.append(future_list.at(i).result());
}


//But this doesn't want to work 

QFutureWatcher<void> ft_watcher;
ft_watcher.setFuture(QtConcurrent::map(dirs_lists,&MainWindow::find_file));
}

And the compiler outputs this errors:

error: no matching function for call to 'map(QList&, )'
       QtConcurrent::map(dirs_lists,MainWindow::find_file);
                                                         ^

And

error: no match for call to '(QtConcurrent::MemberFunctionWrapper1) (QStringList&)'
           map(*it);
           ^


New answer:
[u"\nYou're treating find_file as if it was a static method, not an instance method. There are two solutions:\n\nTurn find_file into a static method.\nPass an instance to map: QtConcurrent::map(dirs_lists, &MainWindow::find_file, this).\n\nIn either case, you must design find_file to be thread-safe, of course.\n"]
Get a new question page!

I now developed a small program for linux in C++ and gtkmm for the GUI. This program list all processes on the computer. 
I'd like to have a function that allows me to have real time process, but I don't know how can I do that, use thread ? Or a function call evry x seconds to refresh my list? 
I started in multitasking 

No answers for this question!
Get a new question page!

I have two struct:
typedef struct STUDENT {
    int username;
    string nAME;
    STUDENT *next;
    struct MEAL{
        int date[2]; // data[][0] - day; data[][1] - month; data[][2] - year;
        bool lunch;
        bool dinner;
        MEAL *next1;
    };
    MEAL meal;
}; STUDENT;

I want to make a linked list of MEAL for each node of STUDENT so they can buy more than one meal
i tried this but it doesn't work: 
MEAL *alocate() {

    MEAL *nova = new meal;
    cout << "Day: ";
    cin >> nova->date[0];
    //(.....)
    system("PAUSE");
    return nova;
}


void insertMeal(MEAL *LL, ALUNO **head, int username){
    ALUNO *atual;

    for (atual = *head; atual != NULL; atual = atual->next) {

        if (atual->username == username) {

            MEAL *novo = aloca1();
            atual->meal = novo;
            novo->next1 = NULL;

            if (empty(LL))
                LL->next1 = novo;
            else {
                MEAL *atual = LL->next1;

                while (atual->next1 != NULL)
                    atual = atual->next1;

                atual->next1 = novo;
            }
        }
    }
}

i have already figured out how to insert, remove, edit the struct STUDENT but i can't figure out how to put a linked list of a struct (MEAL) inside a node of a linked list of a struct (STUDENT). Is it even possible?

New answer:
[u'\nI\'m not exactly sure what you\'re trying to accomplish. However, here\'s some sample code of a linked list I reference from time to time.\n#include <iostream>\nusing namespace std;\n\nstruct link\n{\nint data;\nlink* next;\n};\n\nclass linklist\n{\npublic:\nlinklist()\n{\n    first = NULL;\n};\n\nvoid additem(int d)\n{\n    link* newlink = new link;\n    newlink->data = d;\n    newlink->next = first;\n    first = newlink;\n}\nvoid display()\n{\n    link* current = first;\n    while (current != NULL)\n    {\n        cout << current->data << endl;\n        current = current->next;\n    }\n}\n\nprivate:\nlink* first;    //pointer to first link\n};\n\nint main()\n{\nlinklist li;\n\nli.additem(25);\nli.additem(36);\nli.additem(49);\nli.additem(64);\n\nli.display();\n\nsystem("pause");\nreturn 0;\n}\n\n']
Get a new question page!

I've got the following exception from Boost Interprocess using Windows 2012 Server: "boost::interprocess::intermodule_singleton initialization".
I've tried to fix it removing all Shared Memory and Shared Variables previously created, but doesn't work. 
This problem occurs sometimes and it is very hard to reproduce, but when happens the only solution, that I've found, is restarting the server (reboot).
The expcetion happens using this code:
//Remove shared Memory and shared variables previously created

boost::interprocess::managed_shared_memory* shmObj1;
boost::interprocess::named_mutex* mtx1;
boost::interprocess::named_condition* condition1;

boost::interprocess::named_mutex::remove("TEST.SHARED.MEMORY0000002.MTX1.0.000000000000000000000000009"); 
boost::interprocess::named_condition::remove("TEST.SHARED.MEMORY0000004.NMC1.0.000000000000000000000000050")); 
boost::interprocess::shared_memory_object::remove("TEST.SHARED.MEMORY0000001.XXX.0.000000000000000000000000021"); 

//Creating SharedMemory

boost::interprocess::permissions shared_memory_Perm; 
shared_memory_Perm.set_unrestricted();

shmObj1 = new boost::interprocess::managed_shared_memory (boost::interprocess::create_only_t(), "TEST.SHARED.MEMORY0000001.XXX.0.000000000000000000000000021", 42768, static_cast<const void*>(NULL), shared_memory_Perm );
mtx1 = new boost::interprocess::named_mutex(boost::interprocess::create_only_t(), "TEST.SHARED.MEMORY0000002.MTX1.0.000000000000000000000000009"); 
condition1 = new boost::interprocess::named_condition(boost::interprocess::create_only_t(), "TEST.SHARED.MEMORY0000004.NMC1.0.000000000000000000000000050");

Is there any solution without restaring the server for it? 
Any suggestions?
Thanks!

No answers for this question!
Get a new question page!

how do i access map of int and vectors of string in the  passed_vector function.
I just want to print them in that function.    
#include <iostream>
#include <vector>
#include <map>
#include <string>

using namespace std; 
typedef vector< map< int, vector<string> > > vmis;
typedef map< int, vector<string> > mis;
typedef vector<string> vstr;

void passing_vector(const vmis &meetings);

//return size of vector

template< typename A >  size_t n_elements( const A& a )
{
   return sizeof a / sizeof a[ 0 ];
}

int main()
{
    vmis meeting_info;
    mis meeting_members;
    vstr sw_vec;
    vstr sys_vec;
    string sw_team[] = {"Ricky", "John", "David"};
    string sys_team[] = {"Simmon", "Brad", "Schmidt", "Fizio"};

    sw_vec.insert(sw_vec.begin(), sw_team, sw_team + n_elements(sw_team) );
    sys_vec.insert(sys_vec.begin(), sys_team, sys_team + n_elements(sys_team) );

    meeting_members.insert(make_pair(520, sw_vec));
    meeting_members.insert(make_pair(440, sys_vec));

    meeting_info.push_back(meeting_members);

    passing_vector(meeting_info);

    return 0;
}

void passing_vector(const vmis &meetings)
{
    vmis::iterator itvmis = meetings.begin();

    //how do i access map of int and vectors of string.
    //I just want to print them.


}

I know how to print them in main function.
vmis::iterator itvims = meeting_info.begin();

for( int i = 0; i < meeting_info.size(); i++ )
{
    mis::iterator itm = meeting_members.begin();
    for(itm; itm != meeting_members.end(); itm++ )
    {
       cout << itm->first << " : ";
       vstr::iterator it = itm->second.begin();

       for(it; it != itm->second.end(); it++)
           cout << *it << " ";

       cout << endl;
    }
}

desired output 
440 : Simmon Brad Schmidt Fizio
520 : Ricky John David
if there is a better way of doing this suggestions are always welcome.

New answer:
[u'\nThe easiest aproach is to use auto, also since your meetings is const, you need to use const_iterator:\nvoid passing_vector(const vmis &meetings)\n{\n  vmis::const_iterator itvims = meetings.begin();\n\n  //how do i access map of int and vectors of string.\n  //I just want to print them.\n  for (;itvims != meetings.end(); ++itvims)\n  {\n    const auto& map_item = *itvims;\n    for (const auto& map_it : map_item)\n    {\n      int map_key = map_it.first;\n      const auto& str_vec = map_it.second;\n      for (const auto& str : str_vec)\n      {\n        std::cout << map_key << " - " << str << "\\n";\n      }\n    }\n  }\n\n}\n\n']
Get a new question page!

I'm trying to create a constexpr binary tree structure that can be constructed from leaf nodes and the + operator. I've found that its possible if you pre-express every element of the tree, but the + operator can not be chained, as it returns a temporary rvalue, and pointers to temporary values can not be used as input for constexpr functions.
This code illustrates the problem:
class Foo{
private:
    const Foo* childL;
    const Foo* childR;
public:
    constexpr Foo():
        childL(nullptr),childR(nullptr){}
    constexpr Foo(const Foo* lhs, const Foo* rhs):
        childL(lhs),childR(rhs){}
};

constexpr Foo operator+(const Foo& lhs, const Foo& rhs){
    return Foo(&lhs, &rhs);
}

int main(){
    static constexpr Foo f1; //leaf node
    static constexpr Foo f2; //leaf node
    static constexpr Foo f3; //leaf node

    static constexpr Foo f4(&f1, &f2); //works
    static constexpr Foo f5 = f1 + f2; //works
    static constexpr Foo f6 = (f5) + f3; //works, but requires separate declaration
    static constexpr Foo f7(&Foo(f1 + f2) , &f3); //overly verbose, and does not compile
    static constexpr Foo f8 = (f1 + f2) + f3; //desired syntax, does not compile
}

How can I correctly implement the desired syntax for constructing f8?

No answers for this question!
Get a new question page!

I have some processes connected via pipes, so stdout from one is the stdin for the other one, and viceversa. I need to pass this struct Message via stdin and stdout, but I can't manage to do it.
The struct:
strcut Task{
  bool some;
  char text[MAX_TEXT_AREA];
}

struct Stat{
  char text[MAX_TEXT_AREA];
  unsigned short id;
}

struct Message{
  int nTasks;
  int nStats;
  Task tasks[];
  Stat stats[];
} 

This is what i've tried in order to put the Message to stdout:
Message* m; //suppose it's initialized
write(STDOUT_FILENO, m, sizeof(Message));
for(int i=0; i<m->nTasks; ++i) write(STDOUT_FILENO, m->tasks[i], sizeof(Task));
for(int i=0; i<m->nStats; ++i) write(STDOUT_FILENO, m->stats[i], sizeof(Stat));

I get some compilation errors but I've no idea how to solve this. Is there a way to print the message without modifying any struct?
For reading this is what I've got:
Message* m;
while(read(STDIN_FILENO, m, sizeof(Message))){
  m->tasks = new Tarea[m->nTasks];
  m->stats = new Stat[m->nStats];
  for(int i=0; i<m->nTasks; ++i){
    m->tasks[i] = new Task;
    read(0, m->tasks[i], sizeof(Task));
  }for(int i=0; i<m->nStats; ++i){
    m->stats[i] = new Stat;
    read(0, m->stats[i], sizeof(Stat));
  }
}

One process creates the message and prints it, then the other process reads it, modifies it, and prints it again to the first process (like a ring), and so on.
Again, I need this to write/read without modifying any struct. Thanks.

New answer:
[u'\nYour errors are due to bad calls to read/write, for example you wrote:\nwrite(STDOUT_FILENO, m->tasks[i], sizeof(Task));\n\nbut 2nd args of write should be an address, while task[i] is a Task not the address of. So change to:\nwrite(STDOUT_FILENO, m->tasks+i, sizeof(Task));\n\nor\nwrite(STDOUT_FILENO, &(m->tasks[i]), sizeof(Task));\n\nSame remark for read.\nDon\'t worry about "protocols", since you are using local communications between processes, on the same machine, written in the same language, everything is ok until...\n----EDIT----\nBut you need to send (at least) the number of of tasks and stats, doing:\nwrite(STDOUT_FILENO, m, sizeof(Message))\n\nis wrong, because it is not sufficient to determine the size of the arrays at the other end. You need to send them:\nwrite(STDOUT_FILENO, m->nTasks, sizeof(m->nTasks));\nwrite(STDOUT_FILENO, m->nStats, sizeof(m->nStats));\n\nand read them accordingly.\n']
Get a new question page!

I think that the Windows service application in C++ is a little bit harder and I want to know if there is any API to automatically register my service on boot up with administrative privileges and do its function?
I have tried everything but didn't find any api in c++ for service creation?

No answers for this question!
Get a new question page!

I wrote a program where I make use of shared_ptr to the store the nodes of a graph. Each node has another object associated which keeps a shared_ptr to the node it belongs to. It seems like this is not the proper way to do it, as the child's shared_ptr to the parent is stuck (the use_count() doesn't increase when I create more shared_ptrs of the parent after construction). 
ideone demo
The parent:
struct Parent : public enable_shared_from_this<Parent>
{
    Child myChild;

    Parent() : 
        myChild(shared_ptr<Parent>(this)) // can't use getptr() here -> bad_weak_ptr
    {}


    shared_ptr<Parent> getptr()
    {
        return shared_from_this();
    }
};

The child:
struct Child
{
    shared_ptr<Parent> ptr;

    Child(shared_ptr<Parent> a) :
        ptr(a)
    {}
};

Test:
shared_ptr<Parent> p(new Parent);
cout << "UC of parent: " << p.use_count() << endl;
cout << "UC of child ptr: " << p->myChild.ptr.use_count() << endl;

shared_ptr<Parent> p2(p);
cout << "UC of parent: " << p2.use_count() << endl;
cout << "UC of child ptr: " << p2->myChild.ptr.use_count() << endl;

Output:
UC of parent: 1
UC of child ptr: 1
UC of parent: 2
UC of child ptr: 1    // expected 2!

I noticed that everything works as expected when I create the Parent through its normal ctor (no new) and get the shared_ptr via getptr(). Can someone elaborate on this? Am I doing something stupid?
Thanks in advance!

New answer:
[u'\nThe problem is you created 2 different memory control blocks. One in the child by having it create a shared_pointer to the Parent object, and then by manually creating a shared_pointer using the newed pointer instead of calling getptr() which in turn calls shared_from_this which re-uses the existing control block.\n#include <iostream>\n#include <memory>\n\nusing namespace std;\n\nstruct Parent;\n\nstruct Child\n{\n    shared_ptr<Parent> ptr;\n\n    Child(Parent* a) :\n        ptr(a)\n    {}\n};\n\nstruct Parent : public enable_shared_from_this<Parent>\n{\n    Child myChild;\n\n    Parent() : \n        myChild(this)\n    {}\n\n\n    shared_ptr<Parent> getptr()\n    {\n        return shared_from_this();\n    }\n};\n\nint main()\n{\n    shared_ptr<Parent> p = (new Parent)->getptr(); // <-- The mistake was not using shared_from_this here, this creating 2 unrelated use counts for the same object\n    cout << "UC of parent: " << p.use_count() << endl;\n    cout << "UC of child ptr: " << p->myChild.ptr.use_count() << endl;\n\n    shared_ptr<Parent> p2(p);\n    cout << "UC of parent: " << p2.use_count() << endl;\n    cout << "UC of child ptr: " << p2->myChild.ptr.use_count() << endl;\n    return 0;\n}\n\nOutput on Coliru is:\ng++ -std=c++14 main.cpp && ./a.out\nUC of parent: 2\nUC of child ptr: 2\nUC of parent: 3\nUC of child ptr: 3\n\nYour first clue for this mistake should have been that after: shared_ptr<Parent> p(new Parent); your counts were both 1 and 1, it should have been 2 since you have 2 shared pointers to 1 Parent object.\nP.S: That being said, I\'m not sure this is the best design for what you\'re trying to achieve, but that is a whole other question/debate.\n']
Get a new question page!

I'm trying to compile many .C files  using gcc but still gives me many undefined error when it liniking the objects what is the best syntax for the command >>>> some help please

No answers for this question!
Get a new question page!

I need to make a program that converts Roman numerals to its decimal numbers. I need to include a function that yields the numeric value of each of the letters, and another function that converts the Roman number string and returns its value as follows: Look at the first two characters of the string. If the first has a larger value than the second, then simply convert the first, call the conversion function again for the substring starting with the second character, and add both values. If the first one has a smaller value than the second, compute the difference and add it to the conversion of the substring starting at the third character.
This is what I did so far, and I don't know if I am doing it right.
#include<iomanip>
#include<iostream>
#include<string>
using namespace std;

void RomanInitialize();


    void RomanInitialize(){
        int M = 1000;
        int D = 500;
        int C = 100;
        int L = 50;
        int X = 10;
        int V = 5;
        int I = 1;
    }

    int main(){


        cout << " Enter the Roman Numeral Value: ";
        string roman;
        cin >> roman;
        string sub = roman.substr(0, 2);
        cout << sub << endl;
        string Num = sub.substr(0, 1);
        string Numeral = sub.substr(1, 2);


        if (Num > Numeral){
            if (Num == "M"){
                RomanInitialize();
                int M = 1000;
                int D = 500;
                int C = 100;
                int L = 50;
                int X = 10;
                int V = 5;
                int I = 1;
                cout << static_cast<int>(Num + Numeral) << endl;
            }


        else if (Numeral > Num){
                cout << "values " << Numeral + Num << endl;
            }
        }
    }

Any help would be appreciated 
Thanks

No answers for this question!
Get a new question page!

I've got a solution with a c++ executable, a c++ library and a C# library project. When I'm trying to debug the executable the symbol files for both dll's are first loaded and then unloaded: (showing one example)

'ur.exe' (Win32): Loaded 'C:\meinedateien\Dropbox\programme\urbs\ur\debug\ArchitectureCSLibrary.dll'. 
'ur.exe' (Win32): Loaded 'C:\meinedateien\Dropbox\programme\urbs\ur\debug\ArchitectureCSLibrary.dll'. 
'ur.exe' (Win32): Unloaded 'C:\meinedateien\Dropbox\programme\urbs\ur\debug\ArchitectureCSLibrary.dll'

This prevents me from debugging the Dll's. Any Ideas how I can keep VS from unloading the symbols? What am I doing wrong? (Everything is compiled from clean in debug mode and the "debug only own code"-option isn't checked)

No answers for this question!
Get a new question page!

I'm writing a program in Visual C++ and I need to test if a TextBox is empty. For example (in pseudo-code):
if ( textBox is empty ) { 
   // etc..
}

How can I test for this condition?

New answer:
[u"\nIf you're doing straight Win32 then its like this:\nif ( SendMessage( hWndTextBox, WM_GETTEXTLENGTH, 0, 0 ) == 0 )\n{\n}\n\nIf its MFC, then:\nif ( textBox.GetWindowTextLength() == 0 )\n{\n}\n\n"]
New answer:
[u"\nIf you're doing straight Win32 then its like this:\nif ( SendMessage( hWndTextBox, WM_GETTEXTLENGTH, 0, 0 ) == 0 )\n{\n}\n\nIf its MFC, then:\nif ( textBox.GetWindowTextLength() == 0 )\n{\n}\n\n", u'\nif(string.isNullOrEmpty(textbox.text)){//Your code Here}\n\nprobably something like this.\n']
Get a new question page!

I want to randomly select a word from a string array and set it equal to a variable, doing this 10 times, each time getting a different word from the array and setting it equal to a different variable. Can anyone help?
string v1, v2, v3, v4, v5, v6, v7, v8, v9, v10;

string words[] = {"WORD1", "WORD2", "WORD3", "WORD4", "WORD5", "WORD6", "WORD7", "WORD8", "WORD9", "WORD10";


No answers for this question!
Get a new question page!

I am doing an AR-Project for school and after some struggle i was able to build opencv with aruco and detect markers. Now I need to calibrate the camera for Pose Estimation. I am using this tutorial.
Now there is stated I have to "Read the Setting" from a xml-file. Where do I find this file? Or do I have to make one myself, if yes how?
Also I want to use a standard chess board for the calibration (I have no printer...). Is this possible and do I have to input the size of this board anywhere? 

No answers for this question!
Get a new question page!

Suppose I have a class which I call MyString.  And I want it to be a abstract class that looks something like this:
class MyString{
  virtual MyString* operator+(char* other) = 0;
  virtual MyString* operator+(MyString* other) = 0;
};

The operator+ is just being used as a concatenation operator.  My question is how do I force another operator like this:
MyString* operator+(char* first, MyString* other) = 0;

To be implemented by the class that derives from this class.
Note that this function would normally have to be outside of the class.
Is there any way to do that?

New answer:
[u'\nFirst, C++ is not C, and pointers are to be generally avoided.  You want this:\nclass MyString{\n  virtual MyString* operator+(char* other) = 0;\n  virtual MyString* operator+(MyString& other) = 0;\n};\n\nSecond, you forgot const and public, so you really want this:\nclass MyString{\npublic:\n  virtual MyString* operator+(const char* other) const = 0;\n  virtual MyString* operator+(const MyString& other) const = 0;\n};\n\nThird, for your task, if I understood it correctly, you need:\nclass MyString{\npublic:\n  virtual MyString* operator+(const char* other) const = 0;\n  virtual MyString* operator+(const MyString& other) const = 0;\n  virtual MyString* append_to(const char* other) const = 0; // x.append_to(y) is y+x\n};\n\ninline MyString* operator+(const char* x, const MyString& y) {return y.append_to(x);}\n\nPS: changed MyString to MyString* as a return type.\n']
Get a new question page!

I have a base class of Animal and derived class of Dog, Cat. 
I also have a DogCollection, CatCollection class to manage operations such as adding a new cat etc, reading a cat, and removing a cat from the database, searching for a specific cat using a pointer to the Dog and Cat class. 
I have been asked to use base class pointers to manage the classes in a single container. Is it better practice to perform the read of and write operations in the Dog and Cat classes instead of a separate DogCollection and CatCollection classes for this purpose?

New answer:
[u"\nIn common c++, you would typically use templated containers to hold objects, like this:\n#include <vector>\n\nclass Cat;\nclass Dog;\nclass Animal;\n\ntypedef std::vector<Cat*> CatCollection;\ntypedef std::vector<Dog*> DogCollection;\ntypedef std::vector<Animal*> AnimalCollection;\n\nI used std::vector as the container, but there are others available.\nThen you would manipulate the container as a container and perform the operations  on the items themselves, like:\nAnimalCollection coll;\n\n//add elements\nCat *cat = ...;\nDog *dog = ...;\n\ncoll.push_back(cat);\ncoll.push_back(dog);\n\n//do something with the first item of the collection\ncoll[0] -> doStuff();\n\n//do something on all items\nfor (Animal *c: coll) {\n    c -> doStuff();\n}\n\n//Don't forget to delete allocated objects one way or the other\n//std::vector<std::unique_ptr<Animal>> can for example take ownership of pointers and delete them when the collection is destroyed\n\nCreating a specific collection class for a specific type can be done in specialized cases but it's not usual.\n"]
Get a new question page!

Is it possible to get HTTP response from server using BIO_read (C++)?
When I tried to use BIO_read(bio, buffer, sizeof(buff)) for http responses - in buffer I get only some of the response, not all.
If it is possible show an example of getting full response, please

New answer:
[u'\n\nIs it possible to get HTTP response from server using BIO_read\n\nYes.\n\n\nIf it is possible show an example of getting full response, please\n\nFrom  SSL/TLS Client on the OpenSS wiki:\n#define HOST_NAME "www.random.org"\n#define HOST_PORT "443"\n#define HOST_RESOURCE "/cgi-bin/randbyte?nbytes=32&format=h"\n...\n\nBIO *web = NULL, *out = NULL;\n...\n\nBIO_puts(web, "GET " HOST_RESOURCE " HTTP/1.1\\r\\n"\n              "Host: " HOST_NAME "\\r\\n"\n              "Connection: close\\r\\n\\r\\n");\nBIO_puts(out, "\\n");\n...\n\nint len = 0;\ndo\n{\n  char buff[1536] = {};\n  len = BIO_read(web, buff, sizeof(buff));\n\n  if(len > 0)\n    BIO_write(out, buff, len);\n\n} while (len > 0 || BIO_should_retry(web));\n\nYou should notice two things. First, the return value of BIO_read is checked. Second, BIO_should_retry is used to detect if there\'s more data to read due to potential races.\nIts not a full example. What should happen in production is you perform a partial read on the BIO. You determine the length of the response from the response header. Then you add a third condition with a safety valve - the expected response length. You need a safety valve for broken web servers and broken proxies that provide the wrong response length.\nIf you remove the Connection: close from the HTTP request, then you will need to parse the HTTP response and get the expected length. The above code mostly works because the server closes the connection, and that serves as an out of band signal you can use to fully receive the response.\n']
Get a new question page!

See Object counter example here: Why it just does not inherit from non-template class counter. Why counter should be template?
template <typename T>
struct counter


New answer:
[u'\nSpecializations will give you different counters for different types.\nNote that those counters are static data members, thus shared among all instances of the given specialization.\n']
Get a new question page!

I have a C++ project which is being tested using Catch.cpp:
I compile and run the following file to run my tests: 
 #define CATCH_CONFIG_MAIN
 #include "catch.hpp"
 #include "test1.h"
 #include "test2.h"

In the near future I'll want to run more complex tests, that require command line arguments. 
In Other words, I would like to apply some logic to my tests runs, being able to run them from inside loops or conditions and pass variables to them. 
I found this page: Supply your own main.
which seems like a good direction but i could not find a more detailed explanation. 
Can this be done by catch? or maybe there is a better way to implement what i described?

No answers for this question!
Get a new question page!

I am trying to learn Quick Sort. To do so, I followed the logic for quick sort in this article where the last element is picked as the pivot and you work through the array from both ends swapping elements as needed. Now after a long time of trying to come up with my own algorithm based on this, here is what I have so far:
using namespace std;

int a[] = {10,4,3,2,8,5};
int j;

int partition(int left, int right,  int array[]){
    int pivot = array[right];


    while(1){
        while(array[left]<pivot){
            left = left+1;

        }

        while(array[right]>pivot){
            right=right-1;

        }
        if(left>=right){

            return right;
        }

        int temp1 = array[left];
        int temp2 = array[right];
        array[left] = temp2;
        array[right] = temp1;
    }
}

void quicksort(int left, int right, int array[]){
    if(left<right){
        int p = partition(left, right, array);
        quicksort(left, p-1, array);

        quicksort(p+1, right, array);
    }
}

int main(){
    quicksort(0, sizeof(a)/sizeof(a[0])-1, a);

    for(int i=0; i<(sizeof(a)/sizeof(a[0])); i++){
            cout << a[i] << endl;
        }

}

So after testing this with various arrays of different sizes and elements, it does output a correctly sorted array however in the algorithms that I have found online (ex. Hoare's) they always decrement right and increment left at the start of the partition. Also the pivot does not move in most algorithms I have found, but I move it. 
What I am wondering is, am I doing this wrong? Why does it work? It's been a lot of trial and error so that it be understandable if I did it wrong, I am also slightly new to algorithms and data structures so I wouldn't be surprised if I made some mistakes.

New answer:
[u"\nRegarding the pivot for Qsort, there's no fixed rule for selecting the pivot. Choosing the pivot really depends on which strategy you want to impose on your input data, and that largely depends on the properties of the input data - range, size etc. \nGenerally, we choose the pivot so that it splits the array into two equal halves (as much as possible). This is done so that we don't end up pushing all the elements on to one-side of the Qsort. If this happens your algorithm will become O(n^2) - think of skew trees if you're not able to see why. \n"]
Get a new question page!

I have a function that streams data into my application in a thread, in class (A).
The data is copied into a custom struct (StructStore) in the header file of another class(B):
.h
class Data:
public:
    StructStore DataStore;

.cpp
    Data dd;

    StructStore DataIn;  // data streams in

   dd.DataStore = DataIn;

When I add a breakpoint and check the values here (inside the thread), they are as i would expect, both in the DataStore, and the DataIn.
What I need, is to call these values from outside the thread, in yet another class (C). I am trying:
.cpp
   StructStore Result;
    Data d;

    Result = d.DataStore;

When I check the values here, they are always zero. What am I doing wrong here? How can I copy these values to outside the thread safely?

New answer:
[u'\nOne easy and safe (but not the 100% most efficient) way is to use a pipe.  Just have your main thread read from it (either blocking if only one worker thread, or using select() if multiple pipes to wait on).  Then have your worker thread write() the struct to it.  You can even have multiple threads writing to the pipe at the same time without locking if the size of each write is less than PIPE_BUF bytes.\n']
Get a new question page!


This question already has an answer here:


What do single quotes do in C++ when used on multiple characters?

                    4 answers
                



int i = 0, j = 6;
while (j>3)
  cout << j-- << ': ' << ++i << endl;

Output: I do not understand the numbers in between 6 and 1 in the first output line of code for example.
6148801
5148802
4148803


New answer:
[u'\nThe problem is that you used \' for the string containing the colon, hence the characters are interpreted as chars, not as a string. Use ": " instead of \': \'.\n']
New answer:
[u'\nThe problem is that you used \' for the string containing the colon, hence the characters are interpreted as chars, not as a string. Use ": " instead of \': \'.\n', u'\n14880 is \': \'\nchange \': \' to ": "\n']
Get a new question page!

I downloaded OpenCV 2.4.13 release from GitHub. Then I configured CMake project using CMake-gui for android. 
There is variable called ANDROID_ABI and I can select value for it using drop-down list. But in this list I can chose only armeabi, armeabi-v6 with VFP, armeabi-v7a, armeabi-v7a with NEON, armeabi-v7a with VFPV3.
I can use CMake console for configure and generate project for arm64 or I can modify cmake scripts and list it manually. But when I try to build generated project, I get error unknown type name '__uint128_t'__uint128_t. So I think there are reasons why I can't select this variant from drop-down list.
How can I chose arm64 variant for build and why I get such kind of error?

No answers for this question!
Get a new question page!

I would like to know if there is any difference between OpenCV types CV_32F and CV_32FC1? 
I already know that 32F stands for a "32bits floating point" and C1 for "single channel", but further explanations would be appreciated.
If yes, how are they different / which one should I use in which specific cases? As you might know that openCV types can get very tricky...
Thank you all in advance for your help!

New answer:
[u'\nThe value for both CV_32F and CV_32FC1 is 5 (see explanation below), so numerically there is no difference. \nHowever:\n\nCV_32F defines the depth of each element of the matrix, while \nCV_32FC1 defines both the depth of each element and the number of channels.\n\nA few examples...\nMany functions, e.g. Sobel or convertTo, require the destination depth (and not the number of channels), so you do:\nSobel(src, dst, CV_32F, 1, 0);\n\nsrc.convertTo(dst, CV_32F);\n\nBut, when creating a matrix for example, you must also specify the number of channels, so:\nMat m(rows, cols, CV_32FC1);\n\nBasically, every time you should also specify the number of channels, use CV_32FCx. If you just need the depth, use CV_32F\n\nCV_32F is defined as:\n #define CV_32F  5\n\nwhile CV_32FC1 is defined as:\n#define CV_CN_SHIFT   3\n#define CV_DEPTH_MAX  (1 << CV_CN_SHIFT)\n#define CV_MAT_DEPTH_MASK       (CV_DEPTH_MAX - 1)\n#define CV_MAT_DEPTH(flags)     ((flags) & CV_MAT_DEPTH_MASK)\n#define CV_MAKETYPE(depth,cn) (CV_MAT_DEPTH(depth) + (((cn)-1) << CV_CN_SHIFT))\n\n#define CV_32FC1 CV_MAKETYPE(CV_32F,1)\n\nwhich evaluates to 5.\nYou can check this with:\n#include <opencv2\\opencv.hpp>\n#include <iostream>\nint main()\n{\n    std::cout <<  CV_32F << std::endl;\n    std::cout <<  CV_32FC1 << std::endl;\n\n    return 0;\n}\n\n\n']
Get a new question page!

I used the sample code from MinGW tutorial:http://www.mingw.org/wiki/Exporting_a_class_from_a_DLL_for_multiple_instantiations
to build a dll and dynamically load it from my main program.
//-------------------------------------------------------
//1st file: testdll.h  DLL include file
//-------------------------------------------------------
#ifdef MY_COMPILE_DLL
#define MY_DECLSPEC __declspec(dllexport)
#else
#define MY_DECLSPEC __declspec(dllimport)
#endif

class MY_DECLSPEC TestInterface
{
public:
   TestInterface() ;
   virtual ~TestInterface() = 0 ;
   virtual bool Get(bool &flag, int &num) = 0 ;
} ;

typedef TestInterface* (*newtestdlltype)(const bool, const int) ;
typedef void (*deletetestdlltype)(TestInterface *) ;

TestInterface* MY_DECLSPEC newtestdll(const bool, const int) ;
void MY_DECLSPEC deletetestdll(TestInterface*) ;

//-------------------------------------------------------
//2nd file: testdll.def  DLL module definition
//-------------------------------------------------------
EXPORTS
   newtestdll = _Z10newtestdllbi
   deletetestdll = _Z13deletetestdllP13TestInterface

//-------------------------------------------------------
//3rd file: testdll.cpp  DLL class source
//-------------------------------------------------------
#define MY_COMPILE_DLL
#include "testdll.h"

TestInterface::TestInterface()
{
}

TestInterface::~TestInterface()
{
}

class MY_DECLSPEC Test : public TestInterface
{
public:
   Test(const bool, const int) ;
   virtual ~Test();
   virtual bool Get(bool &flag, int &num);
private:
   bool f_flag ;
   int f_num ;
   char f_text80[80] ;
};

Test::Test(const bool flag, const int num)
      : TestInterface(), f_flag(flag), f_num(num)
{
}

Test::~Test()
{
}

bool Test::Get(bool &flag, int &num)
{
   flag = f_flag ;
   num = f_num ;
   return true ;
}

TestInterface* newtestdll(const bool flag, const int num)
{
   return new Test(flag, num);
}

void deletetestdll(TestInterface *f)
{
   delete f;
}

Now compile the dll from MinGW:


g++ -O0 -g3 -Wall -c -fmessage-length=0 -o testdll.o testdll.cpp
g++ -shared -g -o libtestdll.dll testdll.o testdll.def


//-------------------------------------------------------
//4th file: testcall.cpp Main Program
//-------------------------------------------------------
#include <windows.h>
#include "testdll.h"

int main(void)
{
   bool bb ;
   int i, ii, numinstances=4 ;
   HMODULE testdll = LoadLibrary("libtestdll.dll") ;
   newtestdlltype ffunc_newtestdll =
            (newtestdlltype)GetProcAddress(testdll, "newtestdll") ;
   deletetestdlltype ffunc_deletetestdll =
            (deletetestdlltype)GetProcAddress(testdll, "deletetestdll") ;

   TestInterface **ftest = NULL ;
   ftest = new TestInterface*[numinstances] ;
   for (i=0; i<numinstances; i++) {
      ftest[i] = ffunc_newtestdll(i%2==0, i) ;
      ftest[i]->Get(bb, ii) ;
   }

   for (i=0; i<numinstances; i++) {
      ffunc_deletetestdll(ftest[i]) ;
      ftest[i] = NULL ;
   }
   delete [] ftest ;
   FreeLibrary(testdll) ;
   return 1 ;
}



g++ -O0 -g3 -Wall -c -fmessage-length=0 -o testcall.o testcall.cpp
g++ -g -otestcall.exe testcall.o


Run testcall.exe, everything ok so far.
Now I build the testcall.cpp on Visual Studio 2013,  it reports compile error 


...\testdll.h(18): error C2059: syntax error : '__declspec(dllimport)'


I realized the main program does not need these 2 entrance functions:
TestInterface* MY_DECLSPEC newtestdll(const bool, const int) ;
void MY_DECLSPEC deletetestdll(TestInterface*) ;

Comment off these 2 lines,now it builds in Visual Studio, but it crashed whenever I try to run it, because the following function returns null.
newtestdlltype ffunc_newtestdll =
        (newtestdlltype)GetProcAddress(testdll, "newtestdll") ;
deletetestdlltype ffunc_deletetestdll =
        (deletetestdlltype)GetProcAddress(testdll, "deletetestdll") ;

Seems the names are mangled, how can i resolve this issue?

No answers for this question!
Get a new question page!

With a std::array you can initialize it like this:
std::array<int,5> myArray = {1,2,3,4,5};

If I where trying to create my own array class how would I do something similar?

New answer:
[u'\nstd::array rely on aggregate initialization (the C way of initializing struct), basically this is valid c++:\nstruct A {\n    int values[2];\n    size_t size;\n};\n\nA a = {{42, 44}, 2U}; // No constructor involved\n//     |         |--- a.size\n//     |--- a.values\n\nNow if you remove the size attribute, you get:\nstruct A {\n    int values[2];\n};\n\nA a = {{42, 44}}; // Valid!\n\nBut c++ gives you something called brace-elision we allow you to omit the inner brackets, so:\nA a = {42, 44}; // Still valid!\n\nNow, just makes A a template:\ntemplate <typename T, size_t N>\nstruct A {\n    T data[N];\n};\n\nA<int, 2> a = {{42, 44}};\n\nNote that this does not makes use of initializer_list which are used for std::vector, std::list, and so on.\nAlso note that:\nA<int, 2> a1{42, 44}; // Not valid prior to c++14\nA<int, 2> a2{{42, 44}}; // Ok even for c++11\n\nAnd note that clang will throw warning whatever the version you use by default.\n\nA minimalist version of std::array could look like this:\ntemplate <typename T, size_t N>\nstruct my_array {\n\n    T _data[N];\n\n    T& operator[] (size_t i) { return _data[i]; }\n    const T& operator[] (size_t i) const { return _data[i]; }\n\n    constexpr size_t size () const { return N; }\n\n    T* begin () { return _data; }\n    const T* begin () const{ return _data; }\n    T* end () { return _data + size(); }\n    T* end () const { return _data + size(); }\n\n};\n\nPlease note that the standard std::array has a lot more stuff than this (a lots of typedefs, other methods, a lots of overloads, ...), but this is a small base to get you started.\nAlso note that _data has to be public so that aggregate initialization can work (it does not work if you have private / protected members!).\n']
New answer:
[u'\nstd::array rely on aggregate initialization (the C way of initializing struct), basically this is valid c++:\nstruct A {\n    int values[2];\n    size_t size;\n};\n\nA a = {{42, 44}, 2U}; // No constructor involved\n//     |         |--- a.size\n//     |--- a.values\n\nNow if you remove the size attribute, you get:\nstruct A {\n    int values[2];\n};\n\nA a = {{42, 44}}; // Valid!\n\nBut c++ gives you something called brace-elision we allow you to omit the inner brackets, so:\nA a = {42, 44}; // Still valid!\n\nNow, just makes A a template:\ntemplate <typename T, size_t N>\nstruct A {\n    T data[N];\n};\n\nA<int, 2> a = {{42, 44}};\n\nNote that this does not makes use of initializer_list which are used for std::vector, std::list, and so on.\nAlso note that:\nA<int, 2> a1{42, 44}; // Not valid prior to c++14\nA<int, 2> a2{{42, 44}}; // Ok even for c++11\n\nAnd note that clang will throw warning whatever the version you use by default.\n\nA minimalist version of std::array could look like this:\ntemplate <typename T, size_t N>\nstruct my_array {\n\n    T _data[N];\n\n    T& operator[] (size_t i) { return _data[i]; }\n    const T& operator[] (size_t i) const { return _data[i]; }\n\n    constexpr size_t size () const { return N; }\n\n    T* begin () { return _data; }\n    const T* begin () const{ return _data; }\n    T* end () { return _data + size(); }\n    T* end () const { return _data + size(); }\n\n};\n\nPlease note that the standard std::array has a lot more stuff than this (a lots of typedefs, other methods, a lots of overloads, ...), but this is a small base to get you started.\nAlso note that _data has to be public so that aggregate initialization can work (it does not work if you have private / protected members!).\n', u"\nHere is a simple implementation that supports initializing with a list of elements:\n//template class 'array' takes 'T' (the type of the array) and 'size'\ntemplate<typename T, std::size_t size>\nclass array\n{\npublic:\n    //This is the concept of initializer lists (wrapper around variadic arguments, that\n    //allows for easy access)\n    array(std::initializer_list<T> list)\n    {\n        //Loop through each value in 'list', and assign it to internal array\n        for (std::size_t i = 0; i < list.size(); ++i)\n            arr[i] = *(list.begin() + i); //list.begin() returns an iterator to the firsts\n                                          //element, which can be moved using +\n                                          //(deferenced to get the value)\n    }\n\n    //Overloads operator[] for easy access (no bounds checking!)\n    T operator[](std::size_t index)\n    {\n        return arr[index];\n    }\nprivate:\n    T arr[size]; //internal array\n};\n\nYou can then use it like so:\narray<int, 2> a = { 2, 5 };\nint b = a[0]; //'b' == '2'\n\n"]
Get a new question page!

I am developing an application for Windows in which required run three processes:_thread_EEG (acquisition), _thread_MachineLearning (processing), _thread_Interface (interface). The second process uses data by the first process, and third process requires the result of the second process.
class uMotor{
private:
    long _endTime;

    bool _busyBuffer;
    bool _busyLabel;

    Raw  _Shared_buffer;
    char _Shared_label ;

    uEEG _gtec;
    Interface _screen;

    void _EEG            (long endTime);
    void _MachineLearning(long endTime);
    void _Interface      (long endTime);

    DWORD __stdcall _Thread_EEG(LPVOID arg){
        uMotor *yc_ptr = (uMotor*)arg;
        yc_ptr->_EEG(_endTime);
        return 1;
    }

    DWORD __stdcall _Thread_MachineLearning(LPVOID arg){
        uMotor *yc_ptr = (uMotor*)arg;
        yc_ptr->_MachineLearning(_endTime);
        return 1;
    }

    DWORD __stdcall _Thread_Interface(LPVOID arg){
        uMotor *yc_ptr = (uMotor*)arg;
        yc_ptr->_Interface(_endTime);
        return 1;
    }

public:
    uMotor();
    void BCI();
    ~uMotor();
};

The threads are called in function uMotor::BCI():
void uMotor::BCI(){
    const long NUM_SECONDS_RUNNING = 9;

    long startTime = clock();
    long endTime = startTime + NUM_SECONDS_RUNNING * CLOCKS_PER_SEC;

    HANDLE Handle_Thread_EEG             = 0;
    HANDLE Handle_Thread_MachineLearning = 0;
    HANDLE Handle_Thread_Interface       = 0;

    Handle_Thread_EEG = CreateThread(NULL, 0, _Thread_EEG, &endTime, 0, NULL);
    Handle_Thread_EEG = CreateThread(NULL, 0, _Thread_MachineLearning, &endTime, 0, NULL);
    Handle_Thread_EEG = CreateThread(NULL, 0, _Thread_Interface, &endTime, 0, NULL);
}

In the function CreateThread, Visual Studio 2015 shows an error argument of type "DWORD(_stdcall uMotor::*)(LPVOID arg)" is incompatible with parameter of type "LPTHREAD_START_ROUTINE" 
What am I doing wrong?

New answer:
[u'\nThe thread function must be static, so add static before DWORD __stdcall...\nAlso, fourth parameter to CreateThread is the routine parameter. You are expecting pointer to uMotor, but passing &endTime instead. Replace &endTime with this.\n']
Get a new question page!

Is there any way in C++ to check if my program is launched by a user or from an autostart? I want to show / not to show window in these cases. 

New answer:
[u'\nMake the autostart entry set a command line flag such as /nowin.\n']
Get a new question page!

Trying to import the Crypt32.dll but its not working isn't this c++?
Am using RadStudio C++ Builder how can i import DLL like Crypt32.dll etc?
Someone show me the right way thank you.
[DllImport("Crypt32.dll", SetLastError=true, CharSet=System::Runtime::InteropServices::CharSet::Auto)]
static bool CryptData(DATA_BLOB %pDataIn, System::String ^szDataDescr, DATA_BLOB %pOptionalEntropy, IntPtr pvReserved, CRYPTPROTECT_PROMPTSTRUCT %pPromptStruct, int dwFlags, DATA_BLOB %pDataOut);


New answer:
[u"\n\n... isn't this c++?\n\nSystem::String ^szDataDescr is using Microsofts c++-cli extension syntax for managed objects. So no, it's not standard c++ syntax.\nSame for DATA_BLOB %pDataIn.\nTo cite from their documentation:\n\n\n\n"]
Get a new question page!

We are rewriting an old MFC VC++ UI component in C# .NET
there are multiple applications involved here which share data using binary serialized files created using CArchive functionality provided by MFC.
New requirements only ask us to rewrite UI component without changing anything is current business logic. As a solution for this issue, we are planning to change MFC binary serialization with boost XML serialization so that that same XML serialized data can be processes by C# XML parser and existing functionality remains as it is.
Two questions here :
1) Will there be any issues at boost end as we are using a different XML parser at C# end ?
2) How can we minimize code changes in existing application ?
I had a look at "Boost::Serialization and MFC Doc/View architecture" link and it looks like a great way to change existing binary serialized files to XML format.
We have around 20 classes derived from one base class, all of which are serialized. Any pointers to have minimum code changes will be of great help. Thanks.

No answers for this question!
Get a new question page!

I know this question has been answered in many different forms again and again, and is perhaps one of the most confusing points in C++'s design, but I'm trying to learn the language after many years doing many things in pure C that would be considered quite illegal in the C++ world (think function pointers juggling). I want to try educating myself to the C++ mindset before giving up and going to another language.
I just started a project in which the most fundamental component is a streaming class, and for that I wanted it to be generic: what kind of data it would stream would be up to its subclasses.
template <typename T>
class BasicStream {
protected:
    T *buffer;
    unsigned int bufferSize;
    unsigned int bufferPos;
    bool streamEnd=false;
public:
    virtual T read();
};

My idea was to chain objects together, as in the output of one object of certain class being directly read by another object of another class. But for this to work, all objects must be able to accept a generic read() function and return its desired type. For instance, I have a class to splice bits which accepts bytes (unsigned char) as inputs:
class BitExtractor : public BasicStream<bool> {
private:
    unsigned char bitMask;
    unsigned char byte;
    BasicStream<unsigned char> &byteSource;

public:
    BitExtractor(BasicStream<unsigned char> &source);
    virtual bool read();
};

It returns a bool type and needs any class which derives from BasicStream and has an <unsigned char> return type as input. My idea was to make the input completely agnostic from the data source; be it a file, an internet stream, or even some position in memory; all wrapped around classes derived from BasicStream<unsigned char>.
An example would be a FileReader class, to handle a/synchronous file loading:
class FileReader : public BasicStream<unsigned char> {
protected:
    FILE *file;
    bool asyncFlag;
    bool asyncOpReady;
    bool fileEnded;
    pthread_t asyncThread;
    unsigned int lastRead;
public:
    FileReader(char *fileName,int bufferSize=1024,bool asyncRead=false);
    ~FileReader();

    virtual unsigned char read();

private:
    typedef struct {
        unsigned int amount;
        unsigned int *read;
        unsigned char *buffer;
        FILE *file;
        bool *flag;
        bool *flagStreamEnd;
    } TData;
    static void AsyncRead(void *data);
};

Now, let's suppose I want to create a BitExtractor using a FileReader as data source.
BitExtractor bx=BitExtractor(FileReader("SomeFile.abc"));
bool firstBit = bx.read();

Internally, BitExtractor is calling the FileReader read() method. My assumption was that since FileReader is a class derived from BasicStream<unsigned char>, it should recognize the templated function.
BitExtractor::BitExtractor(BasicStream<UInt8> &source):bitMask(128),byteSource(source){}

bool BitExtractor::read(){
    bool bit=byte&bitMask;
    if(streamEnd==false){
        bitMask>>=1;
        if(bitMask==0){
            try {
                byte=byteSource.read();
                bitMask=128;
            } catch (...) {
                streamEnd=true;
            }
        }
    }
    else{
        throw "Bytesource has ended!\n";
    }

    return bit;
}

Even though it does compile, it fails to link due to vtable errors:
Undefined symbols for architecture x86_64:
  "BasicStream<bool>::read()", referenced from:
      vtable for BasicStream<bool> in BitIO.o
  "BasicStream<unsigned char>::read()", referenced from:
      vtable for BasicStream<unsigned char> in FileIO.o

I've already learnt though other StackOverflow questions that my code is impossible in C++, given its lack of runtime polymorphism (the compiler cannot decide which template of BasicStream the subclass invokes at runtime). My question is, given my data streaming/chaining pattern, is there any other more "C++ish" alternative to implementing my design, like using or subclassing something from the STL (of which I know almost nothing)?
Or is it simply unimplementable in C++?

New answer:
[u"\nAs it stands the problem is that you declare the template member function virtual:\nvirtual T read();\n\n... but you don't define it; that's why you get a link-time error - the vtable for the BasicStream class needs a function to point at, and there isn't one. I'm pretty sure the problem could be fixed either by making it pure virtual:\nvirtual T read() = 0;\n\n... or providing a default definition.\n"]
New answer:
[u"\nAs it stands the problem is that you declare the template member function virtual:\nvirtual T read();\n\n... but you don't define it; that's why you get a link-time error - the vtable for the BasicStream class needs a function to point at, and there isn't one. I'm pretty sure the problem could be fixed either by making it pure virtual:\nvirtual T read() = 0;\n\n... or providing a default definition.\n", u'\nOf course you should use streams from the standard library. \nThe only nontrivial feature you mention is reading a bool from a stream, which is done with the appropriate operator>> of std::basic_istream. If you have extra special needs, you can override it in an ad hoc stream subclass.\nThe code in the question has the artificial limitation of pretending that a stream is a homogeneous sequence of values of a certain type, with an highly inconvenient template parameter. \nIn reality a stream should be considered a source or sink of values of any type (you can read or write anything at any position) or a sequence of bytes (which are read, written, and transformed from and to values of other types). The standard library streams do both, with the overloaded and templated operator>> and operator<< and with the character-based low-level I/O and position accounting.\n']
Get a new question page!

I have to learn to code on UWP (it's my first steps with windows 10 and VS), so I try to do something really basic : changing a textblock from some C++ function.
Technically my project is quite simple : I opened a new visual C++ > Windows > universal > blank App
I added a textblock to MainPage.xaml :
<Page
    x:Class="App4.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:App4"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="49,46,0,0" TextWrapping="Wrap" Text="WHAT I WANT TO BIND" VerticalAlignment="Top"/>

    </Grid>
</Page>

and I try to figure how to bind the textblock. I try several ways, all failed. For example, I add a class TestBindMe :
TestBindMe.h
#pragma once
namespace App4
{

ref class TestBindMe sealed
{
public:
    TestBindMe();
    property Platform::String^ MySuperString
    {
        Platform::String^ get() {
            return this->mySuperString_;
        }
    }

private:
    Platform::String^ mySuperString_;
};

};

TestBindMe.cpp
#include "pch.h"
#include "TestBindMe.h"

namespace App4
{

TestBindMe::TestBindMe()
{
}

};

and I try to build it after editing Text="WHAT I WANT TO BIND" for Text={x:Bind TestBindMe.get}
I got that output :
1>------ Build started: Project: App4, Configuration: Debug Win32 ------
1>  App.xaml.cpp
1>  MainPage.xaml.cpp
1>  TestBindMe.cpp
1>c:\users\user\documents\visual studio 2015\projects\app4\app4\testbindme.cpp(1): fatal error C1010: unexpected end of file while looking for precompiled header. Did you forget to add '#include "pch.h"' to your source?
========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========
========== Deploy: 0 succeeded, 0 failed, 0 skipped ==========


No answers for this question!
Get a new question page!

This is the standard algorithm for printing ancestors of a particular Node in a Binary Tree and it takes O(n) time complexity.
bool print(Node *node,int target){
    if(node==NULL)
       return false;
    if(node->target==target)
       return true;
    if(print(node->left)||print(node->right)){
       cout << node->data;
       return true;
    }
return false;
}

The question is if we need to print all ancestors of all node's and also store ancestors in an array for each node. what is the time complexity? Can we do it better than O(n^2) i.e without looping through each node and find ancestors.If possible how?

New answer:
[u"\nIf you want an array corresponding to each node in the tree, then you cannot do better than O(N2) worst case, because the total size of all arrays is worst case O(N2) (in the case that every node in the tree has at most one child). If you expect the trees to be somewhat balanced, this reduces to O(N log N).\nYou can achieve O(N) construction by sharing data, using a linked list instead of an array for each node. In effect, that's equivalent to computing a parent link for each node, because the linked list is simply a traversal of parent links. But you cannot avoid the cost of printing, because you will print average O(N log N) / worst case O(N2) items when you print out all the ancestor chains.\nThe parent link construction algorithm is basically the same as the algorithm you present: recursively walk the tree setting the parent links of the children to the current node. To print the ancestor chains for each node, you can use the parent links while you walk the tree.\n"]
New answer:
[u"\nIf you want an array corresponding to each node in the tree, then you cannot do better than O(N2) worst case, because the total size of all arrays is worst case O(N2) (in the case that every node in the tree has at most one child). If you expect the trees to be somewhat balanced, this reduces to O(N log N).\nYou can achieve O(N) construction by sharing data, using a linked list instead of an array for each node. In effect, that's equivalent to computing a parent link for each node, because the linked list is simply a traversal of parent links. But you cannot avoid the cost of printing, because you will print average O(N log N) / worst case O(N2) items when you print out all the ancestor chains.\nThe parent link construction algorithm is basically the same as the algorithm you present: recursively walk the tree setting the parent links of the children to the current node. To print the ancestor chains for each node, you can use the parent links while you walk the tree.\n", u'\nIt can be done in O(n*h), where h is the tree\'s height, by implementing a DFS, that keeps track of currently open nodes.\nA simple c++ like pseudo code can be something like:\nvoid PrintAll(const Node& node) {\n  open = std::unordered_set<Node>;  // empty hash set\n  PrintAll(node, &open);\n}\nvoid PrintAll(const Node& node, std::unordered_set* open) {\n  if (node == null) \n     return;\n  for (const Node& ancestor: open)\n     cout << ancestor<< "," << node;\n  open->add(node);\n  PrintAll(node.left, open);\n  PrintAll(node.right, open);\n  open->remove(node);\n}\n\nCaveat: In here, we do not print (node, node) (each node is also an ancestor of itself). If we want to do it, it can be fixed easily by adding the addition of node to open before the printing loop.\nAlso, you can make the unordered_set store only the data, rather than the entire node.\n']
Get a new question page!

I'm currently trying to parallelize a particle swarm algorithm, and can't find an efficient way to handle a = inside a loop. I didn't do the most simple form of just putting #pragma omp parallel for at the start of the loop since i expect that will just lead to false sharing problems. The whole thing gets complicated by the variables being Matrices and Vectors.
I think this minimal example (using armadillo, a linear algebra library similar to  shows it better then i can describe it:
#include <omp.h>
#include <math.h>
#include <armadillo>

using namespace std;

int main(int argc, char** argv) {
  arma::uword dimensions = 10, particleCount = 40;
  //Matrix with dimensions-rows, and particleCount-columns. initialized with 1
  arma::Mat<double> positions = arma::ones(dimensions, particleCount);
  //same as above, but initialized with 2.   +,/,*,- are elementwise;like in matlab
  arma::Mat<double> velocities = arma::ones(dimensions, particleCount) * 2;

  for(arma::uword n = 0; n < particleCount; n++) {
    //.col(n) gets the nth column of the matrix
    arma::Col<double> newVelocity = std::rand() * velocities.col(n);
    //there is a lot more math done here, but all of it is read-only access to other variables
    positions.col(n) += newVelocity; //again elementwise
    velocities.col(n) = newVelocity;
  }

  return 0;
}

My first idea was to do something like this, but it's horribly inefficient:
#include <omp.h>
#include <math.h>
#include <armadillo>

using namespace std;

int main(int argc, char** argv) {
  arma::uword dimensions = 10, particleCount = 40;
  //these two variables cannot be moved inside the parallel region :-/
  arma::Mat<double> positions = arma::ones(dimensions, particleCount);
  arma::Mat<double> velocities = arma::ones(dimensions, particleCount) * 2;

  #pragma omp parallel
  {
    arma::Mat<double> velocity_private = arma::zeros(dimensions,particleCount);
    #pragma omp for
    for(arma::uword n = 0; n < particleCount; n++) {
      arma::Col<double> newVelocity = std::rand() * velocities.col(n);
      velocity_private.col(n) = newVelocity;
    }
    #pragma omp single
    {
      //first part of workaround for '='
      velocities = arma::zeros(dimensions, particleCount);
    }
    #pragma omp critical
    {
      for(arma::uword n = 0; n < particleCount; n++) {
        positions.col(n) += velocity_private.col(n);
        //second part of workaround for '='
        velocities.col(n) += velocity_private.col(n); 
      }
    }
  }//end omp parallel

  return 0;
}

I thought about using user-defined reductions, but i didn't find any example for assignments. All of them where for additions or multiplications, and unfortunately not very accessible.
Any suggestion(s) or advice appreciated! :)

No answers for this question!
Get a new question page!

From boost/filesystem/path.hpp:
#   ifdef BOOST_WINDOWS_API
    const std::string string() const
    {
      [...]
    }
#   else   // BOOST_POSIX_API
    //  string_type is std::string, so there is no conversion
    const std::string&  string() const { return m_pathname; }
    [...]
#   endif

For wstring() it is exactly the other way around - returning by reference on Windows and by value on POSIX. Is there an interesting reason for that?

New answer:
[u'\nOn Windows, path stores a wstring, since the only way to handle Unicode-encoded paths in Windows is with UTF-16. On other platforms, the filesystems handle Unicode via UTF-8 (or close enough), so on those platforms, path stores a string.\nSo on non-Windows platforms, path::string will return a const-reference to the actual internal data structure. On Windows, it has to generate a std::string, so it returns it by copy.\nNote that the File System TS bound for C++17 does not do this. There, path::string will always return a copy. If you want the natively stored string type, you must use path::native, whose type will be platform-dependent.\n']
New answer:
[u'\nOn Windows, path stores a wstring, since the only way to handle Unicode-encoded paths in Windows is with UTF-16. On other platforms, the filesystems handle Unicode via UTF-8 (or close enough), so on those platforms, path stores a string.\nSo on non-Windows platforms, path::string will return a const-reference to the actual internal data structure. On Windows, it has to generate a std::string, so it returns it by copy.\nNote that the File System TS bound for C++17 does not do this. There, path::string will always return a copy. If you want the natively stored string type, you must use path::native, whose type will be platform-dependent.\n', u"\nFor windows API it returns by value because the variable 'm_pathname' needs to be converted into a different format (string) as implemented by 'path_traits'. This introduces a temporary variable which of course cannot be passed by reference, though the extra copy will get elided by either NRVO or by implicit move.\nFor the posix case, the format of 'm_pathname' is already in native format (string), so no need to convert and hence can be passed as const reference.\n"]
Get a new question page!

This is a question from a past paper that I am having issues with, the question and output is displayed below but I don't understand how this is achieved. Can someone please explain.
int main ()
{
    int a[5] = { 1 }, b[] = { 3, -1, 2, 0, 4 };
    for (int i = 0; i<5; i++)
    {
        if (!(a[i] = b[i])) // note: = not ==
            break;
        cout << a[i] << endl;
    }
}

Output:
 3
-1
 2


New answer:
[u"\nThe loop runs at most five times and, each time through the loop, it copies b[i] to a[i]. If that copy resulted in a zero being placed into a[i], the condition of the if statement will be true and the loop will break. That's because the result of the expression x = y is the final value of x.\nIn your case, (a[i] = b[i]) will be zero or non-zero depending on b[i]. If the former, the ! turns that into a true value and the if body runs (the break happens). If the latter, you get false from the ! and the loop continues to run.\nThat break happens with the fourth element, which is why you only see three output lines.\n"]
New answer:
[u"\nThe loop runs at most five times and, each time through the loop, it copies b[i] to a[i]. If that copy resulted in a zero being placed into a[i], the condition of the if statement will be true and the loop will break. That's because the result of the expression x = y is the final value of x.\nIn your case, (a[i] = b[i]) will be zero or non-zero depending on b[i]. If the former, the ! turns that into a true value and the if body runs (the break happens). If the latter, you get false from the ! and the loop continues to run.\nThat break happens with the fourth element, which is why you only see three output lines.\n", u"\nI think the main thing you need to know to understand that piece of code is that (a[i] = b[i]) will be evaluated as whatever that's assigned to a[i], so the break will terminate your program when i is 3, which is when b[i] is 0. This is also supported by the output you pasted.\n"]
Get a new question page!

I have a class Object, with some standard variables, functions, constructor and destructor. I use it to store info about every element (block) of my game.
I want to:

Still have access to constructor and destructor
Use it with a range-based for loop
Every element can be created or destroyed during the game

I'm currently using std::vector <Object> v, but I think there might be a better solution.
//EDIT
This is a shortened version of my class:
class Object
{
public:
    int a;
    Object()
    {
        a=0;
    }
    ~Object()
    {
        //
    }
    void Destroy()
    {
        delete this;
    }
    void loop()
    {
        a++;
        if(a>100)
            Destroy();
    }
}

Then I initialize std::vector <Object> object, and create some objects by push_back(). Everything works, except the Destroy() function.

New answer:
[u'\nLooks like you are confused about objects and memory allocation in C++.  \nA std::vector, when using push_back, will make a copy of the instance of your class and append it to the container.  When the std::vector is destroyed, the destructor of your class will be called for each instance in the vector.  \nYou class should not delete itself.  Only in rare instances.  Primarily, because your class doesn\'t know where in memory it was created.  \nYour instance could be declared in "global" memory:  \nObject  my_global instance;\n\nYou instance could be declared locally (on the stack):\nvoid A_Function()\n{\n  Object local_instance;\n  //...\n}\n\nYour instance could be declared in dynamic memory (on the heap):  \nObject * Another_Function()\n{\n  Object * pointer = new Object;\n  return pointer;\n}\n\nAnd still, it could be statically declared in a function:  \nObject * Encapsulation()\n{\n  static Object lives_forever;\n  return &lives_forever;\n}\n\nIn summary, your Object has no clue where it will live.  Thus it doesn\'t know what technique to use when it destroys itself.  For example, if the new operator was used, then your object needs to use delete.  But other cases don\'t use new and there is no way to tell how it was allocated.  \nIn summary, your Object should only be concerned with its data members.  The Object has no clue what entity called it, nor instantiated it.  If you need a Destroy function, usually there is a flaw in your design. (Some frameworks have been known to require a destroy method, but they should fully document what is required in the destroy method.) \n']
Get a new question page!

Is there a way to know if Visual Studio is the compiler in a .pro file?
For example there are a lot of ways to detect things in the project file including OS or configuration:
CONFIG(boost_asio) {
    DEFINES += BOOST_SOCKETS
    SOURCES += asiosocket.cpp
    LIBS += -L/usr/local/lib \
        -lboost_system
}

OTHER_FILES += 

contains(QT_VERSION, ^5\\.[0-9]\\..*) {
  SOURCES += wavreader.cpp
  HEADERS += wavreader.h
  QT += multimedia
}

include(../../Shared/Common.pri)

windows: { LIBS += -L$$bin -lzip-2 }
!windows: { LIBS += -lzip }

What I want is to provide a proper linking to boost libraries on both mingw and boost. But they have names like boost_chrono-vc120-mt-1_58 which are dependent on the compiler.
Is there any way I can have something like:
visualstudio {
   LIBS += -LC:/boost/libs -lboost_system-vc120-mt-1_58
}

One way would be to have the user tell which compiler he's using in the CONFIG argument of qmake, but I don't think that's the best solution.

No answers for this question!
Get a new question page!

i need to order a set of pairs (one is int, the second one is char), and i need to have my set ordered like this:
12 G, 11 F, 10 A, 10 B, 10 C (in descending order by first, and in ascending order by second)
firstly. this is what i've tried so far, and i get some errors:
#include <iostream>
#include <fstream>
#include <algorithm>
#include <utility>
#include <set>

using namespace std;
set <pair <int,char> > s;

bool myfunction( const pair<int, char>& i, const pair<int, char>& j ) {
    if( i.first < j.first ) return false;
    if( j.first < i.first ) return true;
    return j.second < i.second;
}

void writes()
{   set <pair<int,char> >::iterator it;
    for (it = s.begin();it<= s.end();it++) /// line (18)
        cout<<(*it).second<<" "<<(*it).first<<"\n\n";
}
int main()
{   ifstream f("info.in");
    int n;
    f>>n;
    for (int i=1;i<=n;i++)
    {   pair<int,char> x;
        int st;
        char nd;
        f>>st;
        f>>nd;
        x.first=st;
        x.second=nd;
        s.insert(x);
    }
    writes();
}

first error i get is at line (18) : no match for 'operator<=' (operand types are 'std::set >::.....
your help is greatly appreciated
my input file looks like this:
5
10 B
10 A
10 C
11 F
12 G


New answer:
[u"\nfor (it = s.begin();it<= s.end();it++)\n\nIterators, generally, do not implement less/greater-than type of comparisons. Iterators, generally, implement only == and != comparisons, tests for equality. This should be:\nfor (it = s.begin();it != s.end();it++)\n\n(Only random access iterators can safely be comparison using < and > operators, and a std::sets iterators are not random access iterators)\nThis answers the question you posed: the compilation error. This question doesn't really have anything to do with your custom set comparison function; which would be a different question.\n"]
New answer:
[u"\nfor (it = s.begin();it<= s.end();it++)\n\nIterators, generally, do not implement less/greater-than type of comparisons. Iterators, generally, implement only == and != comparisons, tests for equality. This should be:\nfor (it = s.begin();it != s.end();it++)\n\n(Only random access iterators can safely be comparison using < and > operators, and a std::sets iterators are not random access iterators)\nThis answers the question you posed: the compilation error. This question doesn't really have anything to do with your custom set comparison function; which would be a different question.\n", u'\nBased on\n\nin descending order by first, and in ascending order by second\n\nThe comparison function needs to be:\nbool myfunction( const pair<int, char>& i, const pair<int, char>& j )\n{\n   if( i.first != j.first )\n   {\n      return (i.first > j.first);\n   }\n\n   return (j.second < i.second);\n}\n\n']
Get a new question page!

I´m just starting out with OpenGL. Currently I am trying to clear the whole screen with red, as seen in this code here:
#include "GLFW/glfw3.h"

#define WIDTH 1280
#define HEIGHT 720

int main(void)
{
    GLFWwindow *window;

    if(!glfwInit()) {
        return -1;
    }

    window = glfwCreateWindow(WIDTH, HEIGHT, "Test OpenGL", NULL, NULL);

    if(!window) {
        glfwTerminate();
        return -1;
    }

    glfwMakeContextCurrent(window);
    static GLfloat red[] = {1.0f, 0.0f, 0.0f, 1.0f};
    glClearBufferfv(GL_COLOR, 0, red);

    while(!glfwWindowShouldClose(window)) {
        //glEnableClientState(GL_VERTEX_ARRAY);
        //glDisableClientState(GL_VERTEX_ARRAY);

        glfwSwapBuffers(window);
        glfwPollEvents();
    }

    glfwTerminate();
    return 0;
}

But there is a problem. I am using g++ to compile the code written in Code::Blocks. Also, I am learning with the OpenGL SuperBible 7th edition, where I got the code for clearing the screen with red. Before I was using glClearColor(255, 0, 0, 0) and then glClear(GL_COLOR_BUFFER_BIT);
But in this book the screen is cleared with glClearBufferfv, which throws the following exception:
error: 'glClearBufferfv' was not declared in this scope
Of course I want to use the code in the book for learning purposes, so it would be great, if that would work. Sadly, it doesn´t. Any idea, why?

New answer:
[u"\nglClearBufferfv is a newer OpenGL function, which means it is technically possible that a graphics card that speaks OpenGL doesn't support it. This means that the function needs to be loaded, either by you or by an OpenGL loading library, before you can use it.\nThe SuperBible example code comes with the gl3w loader as part of its s7 helper library. You could either:\n\nuse s7, which the other examples in the book will likely depend on as well\nskip s7 and use gl3w or any other loader, like my personal favourite libepoxy\ndon't use a loader and load the functions you need by hand. This gets tedious very quick, but it does mean you get to see what's going on.\n\nThe GLFW documentation has some useful pointers as well.\n"]
Get a new question page!

I have a QFileDialog in Qt for saving a file.
It is not smmiting signals. I connect it via
    QFileDialog diag(this);
    ...
connect(
        dialog, SIGNAL(filterSelected(const QString&)),
        this,                 SLOT(saveAsDiagFilterSelected(const QString&)),
        Qt::QueuedConnection);

Then call it with exec(). The saveAsDiagFilterSelected is never called.
What might be wrong?

This is how I create my dialog:
dialog = new QFileDialog(this);
dialog->setFileMode(QFileDialog::AnyFile);
dialog->setNameFilters(filterList);
dialog->setAcceptMode(QFileDialog::AcceptSave);
dialog->setWindowTitle(windowTitle);


I tried implementing the new signal API (as suggested in comments):
connect(
        dialog, &QFileDialog::filterSelected,
        this,   &MainWindow::saveAsDiagFilterSelected);

but still no results.

Update
Found out that using the OS native dialog (I'm under Linux, dont know if this happens in other SO's), is creating the problem. If I do
dialog->setOption(QFileDialog::DontUseNativeDialog, true);

the signal is emmited. How can I workaround this?

New answer:
[u'\nTry setting slots/signals like this:\nconnect(\n        dialog, SIGNAL(filterSelected(QString)),\n        this, SLOT(saveAsDiagFilterSelected(QString)),\n        Qt::QueuedConnection);\n\n']
New answer:
[u'\nTry setting slots/signals like this:\nconnect(\n        dialog, SIGNAL(filterSelected(QString)),\n        this, SLOT(saveAsDiagFilterSelected(QString)),\n        Qt::QueuedConnection);\n\n', u"\nThe native dialog on your platform does not inform the user about filter changes, so there's nothing for Qt to emit signals on - it isn't possible with that particular native dialog. Or perhaps the requisite functionality isn't implemented in Qt. This behavior is platform specific. It works on Windows at least.\n"]
Get a new question page!

I'm trying to fill a vector with derived classes of animals (Dog, Cat, etc). When I take out the contents of the vector, I want to downcast them back to the derived classes.
After doing dog.setLegs(4), I am getting back the correct number of legs with getLegs(). However, after getting back the Animal object from the animals vector and casting that back to type Dog, mydog->getLegs() returns me 0 instead of 4 as I would have expected.
I think I am doing something wrong here but I am not sure what. Can anybody help me with this? Thanks!! 
class Animal{
};

class Dog : public Animal {
public:
  void setLegs(int newLegs){legs = newLegs;};
  int getLegs(){return legs;};
protected:
  int legs=0;
};


int main(int argc, char* argv[]){

  Dog dog;
  dog.setLegs(4);
  std::cout<<dog.getLegs()<<std::endl;

  std::vector<Animal> animals;
  animals.push_back(dog);

  Dog *mydog = (Dog*) &(animals[0]);
  std::cout<<mydog->getLegs()<<std::endl;

  return 0;
}


New answer:
[u'\nYour std::vector contains only Animals. Putting a subclass of an Animal into the vector "slices" off the subclass, leaving just the Animal in the vector. The subclass is gone. It\'s no more.\nWhat you want to do is store pointers to Animal\'s instead:\n std::vector<Animal *> animals;\n\nSo the relevant chunk of your code becomes:\n Dog *mydog = (Dog*)animals[0];\n std::cout<<mydog->getLegs()<<std::endl;\n\n']
Get a new question page!

//handlerfunction
void HousingRegister::printBythePrice(string *array, float max)const {
        int index = 0;
        for (int i = 0; i <nrOfHouses; i++)
        {
            if (housing[i]->getRent() <= max)
            {
                array[index] = housing[i]->toString();
                index++;
            }
        }
    }

 //mainfunction
    void printBythePrice(const HousingRegister &house){

    float max;
    string *arr = new string[house.getnrOfHouses()];
    cout << "Enter the price: ";
    cin >> max;
    house.printBythePrice(arr, max); 
    for (int i = 0; i < house.getnrOfHouses(); i++)
    {
        cout << arr[i];
    }
    delete[] arr; //Array delete
}


No answers for this question!
Get a new question page!

I try to compile a very simple dynamic library project as .dll file.
The name of the project is "Library".
I'm using Visual Studio 2015 and the project properties are these:
Debug Properties
Release Properties
In the project there are two files only: ClassA.h and ClassA.cpp.
The code in ClassA.h is:
#ifndef CLASSA_H
#define CLASSA_H

using namespace std;

#ifdef LIBRARY_EXPORTS
#define CLASSA_API __declspec(dllexport) 
#else
#define CLASSA_API __declspec(dllimport) 
#endif

class ClassA
{
public:
    static CLASSA_API void func();
};


#endif

The code in ClassA.cpp is:
#include "ClassA.h"
#include <iostream>


void ClassA::func()
{
    cout << "SUCCESS!" << endl;
}

When I try to compile this project I receive this error:

Severity  Code    Description Project File    Line Error  LNK1561 entry point
  must be defined   Library C:\Users\UX303\Documents\Visual Studio
  2015\DLLTest\Library\LINK 1


No answers for this question!
Get a new question page!

I believe that preprocessor expands the Macro as a copy text in the code before compilation wherever is it called, while the compiler writes a copy of compiled function definition in each function call. So in both cases we avoided the overhead of regular function call, but in this case which is faster and has less overhead, inline function or MACRO? 

New answer:
[u"\nThe macro will only be 'faster' insofar as it is not left to compiler heuristics whether the macro will be inlined. Given the downsides of macros, it's typically better to leave this decision to the compiler. There are also issues with debugging levels and corresponding source code. Optimization levels, 'forced' inlining, e.g., __attribute__ ((__always_inline__)) (gcc/clang). More importantly, you avoid common pitfalls such as multiple expression expansion / evaluation within the macro.\nI haven't done a S.O. question search (which you should get into the habit of doing), but I suspect this has been answered long before, in much greater detail!\n"]
Get a new question page!

I am using an object detector that has the following type: 
dlib::object_detector<dlib::scan_fhog_pyramid<dlib::pyramid_down<2>>> 
My code is like this :
dlib::object_detector<dlib::scan_fhog_pyramid<dlib::pyramid_down<2>>> d;   
dlib::deserialize(svm_path) >> d;
d.get_scanner().set_max_pyramid_levels(max_levels);

So basically what i'm doing is defining an object detector. Deserializing an already trained svm into this object detector. And in the last line, I'm trying to configure the detector by changing the number of levels of the hog pyramid.
The last line does not compile as get_scanner() returns const image_scanner_type &. So changing max_pyramid_levels won't work. I would like to know if there is a way to change that in order to scan less images (ie. The pyramid will have less images). 
My goal is to enhance the performance of the detector and in my case I'm sure that only few image scales in the pyramid are needed.
Thank you for your reply.

No answers for this question!
Get a new question page!

I have to write a program and compile it with -D_GLIBCXX_DEBUG flag, but I keep getting errors, I think, when trying to access string positions in a certain procedure:
while(aux >> saux){
   if(saux == "(" or saux == "{" or saux == "}" or saux == ")") {if(exp[exp.size()-1] == '&' or exp[exp.size()-1] == '|') exp += " "; exp += saux;}
   else if(exp[exp.size()-1] == '(' or exp[exp.size()-1] == '(') exp += saux;
   else if(exp[exp.size()-1] == ')' or exp[exp.size()-1] == '}') {exp += " "; exp += saux;}
   else if(exp[exp.size()-1] == '|' or exp[exp.size()-1] == '&'){exp += " "; exp += saux;}
   else if((exp[exp.size()-1] >= 'a' and exp[exp.size()-1] <= 'z') or (exp[exp.size()-1] >= 'A' and exp[exp.size()-1] <= 'Z')) {exp += " "; exp += saux;}
   else exp += saux;
   recorta(aux);
}

Where recorta() is an auxiliary operation to reduce the sstream.
When I execute the program on Linux I get this error:
/usr/include/c++/4.8/bits/basic_string.h:846: std::basic_string<_CharT, Traits, Alloc>::reference std::basic_string<_CharT, Traits, Alloc>::operator[](std::basic_string<_CharT, Traits, Alloc>::size_type) [with CharT = char; Traits = std::char_traits<char>; Alloc = std::allocator<char>; std::basic_string<_CharT, Traits, Alloc>::reference = char&; std::basic_string<_CharT, Traits, _Alloc>::size_type = long unsigned int]: Assertion '__pos <= size()' failed.

when I reach this code. Does anyone know how to solve the problem and why it occurs? thank you.

No answers for this question!
Get a new question page!

I would like to know which are the most efficient methods to calculate (-1)^n in terms of bit operations and code length.
The following examples assume integer n:
int a=(n%2==0?1:-1);
int b=(n&0?1:-1);

I don't care about the ease of understanding the code.

New answer:
[u'\nWith gcc 6.1 both produce the same assembly:\nint f(int n) {\n  return n % 2 ? -1 : 1;\n}\n\nint g(int n) {\n  return n & 1 ? -1 : 1;\n}\n\nAssembly:\nf(int):\n        movl    %edi, %eax\n        andl    $1, %eax\n        negl    %eax\n        orl     $1, %eax\n        ret\ng(int):\n        movl    %edi, %eax\n        andl    $1, %eax\n        negl    %eax\n        orl     $1, %eax\n        ret\n\nWhich is equivalent to function:\nint h(int n) {\n  return -(n & 1) | 1;\n}\n\nInterestingly, gcc compilers 4.4.7 to 5.3 compile into longer assembly, the same for these versions.\n']
Get a new question page!

struct CL
{
    static const int i;
};

constexpr int CL::i{};

Is there a valid replacement of const to constexpr in the definition of i? Which paragraph in the Standard can resolve it?

No answers for this question!
Get a new question page!

I have difficulties to setup a structure with 3 classes. I'm not sure about includes / forward declaration.
The code below compiles until I add the namespace and enum in inclino.h. I receive "inclino has not been declared" from InclinoMeasure.h
Inclino.h
// Inclino.h
#include "InclinoMeasure.h"
#include "InclinoReading.h"

namespace inclino {
enum a{a1, a2}
}

class Inclino
{
    list<InclinoMeasure*> m_measures;

    void f(inclino::a a);
}

InclinoMeasure.h
// InclinoMeasure.h
#include "InclinoReading.h"

class Inclino;

class InclinoMeasure
{
    Inclino *m_inclino;
    list<InclinoReading*> m_readings;

    void f(inclino::a a);
}

InclinoReading.h
// InclinoReading.h

class Inclino;
class InclinoMeasure;

class InclinoReading
{
    InclinoMeasure *m_inclino;

    void f(inclino::a a);
}

Does the structure is correct ? How can I access the enum in others class ?
Thanks in advance.
Edit : I fixed the namespace issue by putting it in a new file including by the 3 classes. But seems I misused the include / forward declaration. 

New answer:
[u'\n\nI receive "inclino has not been declared" from InclinoMeasure.h\n\nThis is because the namespace inclino and enum a are currently defined in Inclino.h, but InclinoMeasure.h does not include Inclino.h (and should not, given the current relationship between the headers, since that would introduce a circular dependency). The forward declaration of class Inclino is irrelevant to the namespace and enum.\nTo solve this problem, you can move the definition of the namespace and enum to InclinoReading.h.\nThis will make it available in all three headers where it is used, since both Inclino.h and InclinoMeasure.h include InclinoReading.h.\n']
Get a new question page!

I've noticed that some code often looks like this:
#ifdef DEBUG
assert(i == 1);
#endif //DEBUG

and that you may have several blocks of these sitting around in your raw code. Having to write out each block is tedious and messy.
Would it be plausible to have a function like this:
auto debug_assert = [](auto expr) { 
 #ifdef DEBUG
 assert(expr);
 #endif //DEBUG
};

or something like this:
#ifdef DEBUG
auto debug_assert = [](bool expr) {
  assert(expr);     
};
#else //DEBUG
void debug_assert(bool expr) {}
#endif //DEBUG

to get a zero-cost assert when the DEBUG flag is not specified? (i.e. it should have the same effect as if it was not put into the code without the lambda running, etc. and be optimized out by the g++/clang compilers).

New answer:
[u"\nAs mentioned by @KerrekSB, you can already disable asserts by defining NDEBUG before including <cassert>. The best way to ensure that it's defined before including the header file is to list it in as the argument to the compiler (with gcc it's -DNDEBUG)\nNote: the assert is removed by replacing it with a no-op expression, and there, the argument isn't evaluated at all (which is different from your suggested solution)! This is why it's of utmost importance to not call any functions that have side effects in assert.\n"]
Get a new question page!

When I try to declare a multidimensional array with:
array<array<int, 7>, 5> arrayOne = {
{1, 5, 8, 0, 0, 0, 0},
{2, 3, 8, 7, 7, 0, 0},
{3, 4, 8, 2, 9, 0, 0},
{4, 8, 7, 1, 4, 0, 0},
{5, 7, 6, 8, 3, 0, 0} };

I get:
|10|error: too many initializers for 'std::array<std::array<int, 7u>, 5u>'

But when I do the same with a standard [] array:
int arrayTwo[5][7]= {
{1, 5, 8, 0, 0, 0, 0},
{2, 3, 8, 7, 7, 0, 0},
{3, 4, 8, 2, 9, 0, 0},
{4, 8, 7, 1, 4, 0, 0},
{5, 7, 6, 8, 3, 0, 0} };

I get no errors. I am using mingw g++ on Windows 7 x64. I am new to c++ and stackoverflow, your patience is appreciated. 

New answer:
[u'\nFor initialization std::array slightly differs from raw arrays. std::array needs to see aggregate initialization.\nYou have to put extra braces that the initializer value can be deduced to a std::initializer_list:\n#include <array>\n\nint main()\n{\n    std::array<std::array<int, 7>, 5> arrayOne = {\n        { \n     // ^\n          {1, 5, 8, 0, 0, 0, 0},\n          {2, 3, 8, 7, 7, 0, 0},\n          {3, 4, 8, 2, 9, 0, 0},\n          {4, 8, 7, 1, 4, 0, 0},\n          {5, 7, 6, 8, 3, 0, 0} \n        }\n     // ^\n    };    \n}\n\nSee Live Demo\n']
Get a new question page!

I have a Visual C++ solution with multiple projects. One of the projects (let's name it Project 1) depends on both x86 and x64 versions of another Project 2. It means that when doing a rebuild of Project 1, no matter which architecture is selected I want both x86 and x64 versions of Project 2 to be compiled, prior to Project 1.
Standard Project Dependency feature doesn't allow to specify dependency on multiple architectures. Is there any way to accomplish this task?

New answer:
[u'\nVisual C++ has a command line compiler.\nYou can execute it on the project you need built, or split your code into multiple slns  and tell the command line to build the slns.\nThis dependency can be set up as a custom build step, or you could go and write a makefile that describes your project dependencies and replace your sln build with that.\n']
Get a new question page!

In a simple test CUDA application, I have a pointer pointing to a list of class instances, and I copy that data to the GPU. I then run a kernel function many times. The kernel function then calls a __device__ member function for each class instance which increments a variable, profitLoss.
For some reason, profitLoss is not incrementing. Here is the code I have:
#include <stdio.h>
#include <stdlib.h>

#define N 200000

class Strategy {
    private:
        double profitLoss;

    public:
        __device__ __host__ Strategy() {
            this->profitLoss = 0;
        }
        __device__ __host__ void backtest() {
            this->profitLoss++;
        }
        __device__ __host__ double getProfitLoss() {
            return this->profitLoss;
        }
};

__global__ void backtestStrategies(Strategy *strategies) {
    int i = blockIdx.x * blockDim.x + threadIdx.x;

    if (i < N) {
        strategies[i].backtest();
    }
}

int main() {
    int threadsPerBlock = 1024;
    int blockCount = 32;

    Strategy *devStrategies;
    Strategy *strategies = (Strategy*)malloc(N * sizeof(Strategy));
    int i = 0;

    // Allocate memory for strategies on the GPU.
    cudaMalloc((void**)&devStrategies, N * sizeof(Strategy));

    // Initialize strategies on host.
    for (i=0; i<N; i++) {
        strategies[i] = Strategy();
    }

    // Copy strategies from host to GPU.
    cudaMemcpy(devStrategies, strategies, N * sizeof(Strategy), cudaMemcpyHostToDevice);

    for (i=0; i<363598; i++) {
        backtestStrategies<<<blockCount, threadsPerBlock>>>(devStrategies);
    }

    // Copy strategies from the GPU.
    cudaMemcpy(strategies, devStrategies, N * sizeof(Strategy), cudaMemcpyDeviceToHost);

    // Display results.
    for (i=0; i<N; i++) {
        printf("%f\n", strategies[i].getProfitLoss());
    }

    // Free memory for the strategies on the GPU.
    cudaFree(devStrategies);

    return 0;
}

The output is as follows:
0.000000
0.000000
0.000000
0.000000
0.000000
0.000000
0.000000
0.000000
...

I would expect it to be:
363597.000000
363597.000000
363597.000000
363597.000000
363597.000000
363597.000000
363597.000000
363597.000000
...

I believe profitLoss is not incrementing due to the way I have initialized the objects (automatic storage duration), and I'm not sure of a better way to instantiate these objects and cudaMemcpy them over to the GPU:
strategies[i] = Strategy();

Can anyone offer any suggestions on how to fix this issue or what might be the cause? Thank you in advance!

UPDATE It appears that for the first 32768 output lines, there is data, and then after that, every line is zero. So I'm possibly hitting some kind of limit.

No answers for this question!
Get a new question page!

The following example doesn't work:
#include <iostream>

template <int index, template <typename> class Head,
        template <typename> class... Tail>
struct TemplateTupleElement {
    template <typename T>
    using Type =
            typename TemplateTupleElement<index - 1, Tail...>::template Type<T>;
};

template <template <typename> class Head, template <typename> class... Tail>
struct TemplateTupleElement<0, Head, Tail...> {
    template <typename T>
    using Type = Head<T>;
};

template <typename T>
class Dummy {
};

template <template <typename> class T>
class TemplateDummy {
public:
    static void print() {
        std::cout << "Template" << std::endl;
    }
};

template <>
class TemplateDummy<Dummy> {
public:
    static void print() {
        std::cout << "Specialization" << std::endl;
    }
};

int main(int argc, char* argv[]) {
    TemplateDummy<TemplateTupleElement<0, Dummy, Dummy>::Type>::print();
    TemplateDummy<TemplateTupleElement<1, Dummy, Dummy>::Type>::print();

    return 0;
}

The output is:
Specialization
Template

but I expected it to be:
Specialization
Specialization

I can understand that internally the compiler (g++ (Ubuntu 5.3.0-3ubuntu1~14.04) 5.3.0 20151204) represents the two template expressions differently:

Dummy
TemplateTupleElement<1, Dummy, Dummy>::Type

Why isn't the second expression "simplified" into the first expression?

No answers for this question!
Get a new question page!

I am currently trying to make a Mindstorm game, at i've stumbled upon a slight problem - An error message occurs when i try to run the program. The following is the find function, where the problem occurs:
http://i.imgur.com/bjFP4ST.png
My vectors CurrentColors and PickedColors are all vectors which contain strings.
Now here comes the tricky part - The error leads to the algorithm library. 
http://i.imgur.com/LEwtEbS.png
This is from the library. I do not know what to do, so please help.

No answers for this question!
Get a new question page!

Recently I have stumbled across user defined literals, especially the templated variadic char array kinds:
template<char... chars>
constexpr size_t operator""_size(){
  return sizeof...(chars);
}

//Later
constexpr size_t size = "this is text"_size;

Is there any way to do this with a normal constexpr function?
Something like this:
template<char... chars>
constexpr size_t size(){
  return sizeof...(chars);
}

//Later
constexpr size_t size = size("this is text");

This would allow multiple parameters and regular syntax.
So is there any way to do do the templated variadic char array as a parameter trick to normal functions (or some way to achieve a similar effect)?

No answers for this question!
Get a new question page!

I have a program which reads the file line by line and then stores each possible substring of length 50 in a hash table along with its frequency. I tried to use threads in my program so that it will read 5 lines and then use five different threads to do the processing. The processing involves reading each substring of that line and putting them into hash map with frequency. But it seems there is something wrong which I could not figure out for which the program is not faster then the serial approach. Also, for large input file it is aborted. Here is the piece of code I am using
unordered_map<string, int> m;
mutex mtx;

    void parseLine(char *line, int subLen){
        int no_substr = strlen(line) - subLen;
        for(int i = 0; i <= no_substr; i++) {
            char *subStr = (char*) malloc(sizeof(char)* subLen + 1);
            strncpy(subStr, line+i, subLen);
            subStr[subLen]='\0';
            mtx.lock();
            string s(subStr);
            if(m.find(s) != m.end()) m[s]++;
            else {
                  pair<string, int> ret(s, 1);
                  m.insert(ret);
            }
            mtx.unlock();    
        }
    }


    int main(){    

        char **Array = (char **) malloc(sizeof(char *) * num_thread +1); 
        int num = 0;

        while (NOT END OF FILE) {
            if(num < num_th) {
                 if(num == 0) 
                    for(int x = 0; x < num_th; x++) 
                       Array[x] = (char*) malloc(sizeof(char)*strlen(line)+1);
                 strcpy(Array[num], line);
                 num++;
              }
              else {
                 vector<thread> threads;
                 for(int i = 0; i < num_th; i++) {
                    threads.push_back(thread(parseLine, Array[i]);
                 }
                 for(int i = 0; i < num_th; i++){
                    if(threads[i].joinable()) {
                      threads[i].join();
                    }
                 }
                 for(int x = 0; x < num_th; x++) free(seqArray[x]);
                 num = 0;
              }
            } 
    }


New answer:
[u"\nIt's a myth that just by the virtue of using threads, the end result must be faster. In general, in order to take advantage of multithreading, two conditions must be met(*):\n1) You actually have to have sufficient physical CPU cores, that can run the threads at the same time.\n2) The threads have independent tasks to do, that they can do on their own.\nFrom a cursory examination of the shown code, it seems to fail on the second part. It seems to me that, most of the time all of these threads will be fighting each other in order to acquire the same mutex. There's little to be gained from multithreading, in this situation.\n(*) Of course, you don't always use threads for purely performance reasons. Multithreading also comes in useful in many other situations too, for example, in a program with a GUI, having a separate thread updating the GUI helps the UI working even while the main execution thread is chewing on something, for a while...\n"]
Get a new question page!

The signatures of the operator std::string::operator[] are:
char& operator[] (size_t pos);
const char& operator[] (size_t pos) const;

Why does the const version return const char&, and not just char?

New answer:
[u"\nBecause the whole purpose of a const object is that it cannot be modified. If a const class member, in this case, returns a mutable reference to a character in the string, you could modify it.\nNow, as far as operator[] goes, it's because you can use the & operator to obtain a pointer to it. After all, something like this is fairly common:\n auto *foo=&bar[baz];\n\nYou wouldn't be able to do it with a plain rvalue return type. At least you can get a const pointer, in this case.\n"]
Get a new question page!

Since I need to have scientific plotting capabilities in the project I am working on, GUI in wxWidgets and written in C++ and running under Windows environment.
I tried Gnuplot with a binding code to C++. However, when you run Gnuplot it runs in its own window therefore I could not figure out how I am going to provide user interaction with my software. 
How can I catch (is it possible) mouse events to write the code in C++ and wxWidgets, such as showing a popupmenu for options when user right clicks on the Gnuplot window?
Best regards,

No answers for this question!
Get a new question page!

#include <iostream>
using namespace std;



int main()
{
    int index = 0;
    int val;
    int x;

    while (val != 0)
    {

    cin >> val;



    for (index = 1; index < 32; index++)
    {
        x = val * index - index / index;
        cout << x << " " << val << " " << index << endl;
        cout << x % 4 << endl;
        cout << x % 3 << endl;
        cout << x % 2 << endl;

    }
    }


    return 0;
}

Why is it that when the input is <1, 2, 3, 4...> every 31st index is encoded in an algorithm similar to input 1, which is just index - 1; but the pattern is:
of twelves (1-12, 12 -24) [000, 111, 220, 301, 010, 121, 200, 311, 020, 101, 211, 321] , [000, 111, 220, 301, 010...repeating for input <1>;
of 31st index: [1]200, 111, 020, 301, 210, 121, 000, 311, 220, 101, 010, 321, 200...[13]
Why is the relation similar and is there a reason for this in binary?
Edit: To clarify question, when you take the remainder of a certain integer, and the relation becomes specific to each incrementation...is the reason for this because of binary and how the semantic is based on implementing a way to converge integer value to binary value? I know that high-level programming is using hash and communicating within programs...but the main idea is for the integer value to be binary specific...is this a binary specific operation or just some random algorithm that shows patterns in numbers?

New answer:
[u'\nImportant fact:\n12 mod 2 == 12 mod 3 == 12 mod 4 == 0\n\nAnother important fact, a little more abstract:\n(x + y) mod k == ((x mod k) + (y mod k)) mod k\n\n(Assuming x, y and k are all integers.)\nFrom the second fact, we can deduce:\n(x + 12) mod k == ((x mod k) + (12 mod k)) mod k\n\nAs it happens:\n(x mod k) mod k == x mod k\n\nAnd so now we know that\n(x + 12) mod 2 == (x mod 2) + 0 == x mod 2\n(x + 12) mod 3 == (x mod 3) + 0 == x mod 3\n(x + 12) mod 4 == (x mod 4) + 0 == x mod 4\n\nSo the pattern of mods will repeat in a cycle of 12.\nIn general, the cycle length will be the Least Common Multiple of the divisors. \n']
Get a new question page!

I'm writing a very simple TCP network code for windows and linux which I'll use later on in my projects, so I want it to be easily portable (just copy files & include the neccessary stuff)
I've done some network programming before, in fact I've done almost everything that I'm gonna do, but as a "test" program, everything written just so it worked, but needed to be rewrited.
I want to do everything "the right way", so I decided to ask you.

What is better, in terms of lower memory usage and in general, to make functions like Receive(), Send() etc. static, and just pass the pointer to the object to it? Or use normal member functions and call them directly like .Receive(), do they take more memory when creating multiple objects?
Thread safety. I've never really bothered about this, and now I feel like I need to.
I thought about making the network updating function run in a separate thread (std::thread) (there's also an option for the end user to call the update function directly in some loop if they don't want to use any threads).
That function would handle connection accepting and data receiving, I'm packetizing it so I can send commands and stuff like that, once a packet is received, it is pushed onto a std::queue (or suggest me something better?) in the server class object. To receive a packet, the end user needs to call .Receive(), which just pops one packet from the queue.
Receive() would be called from a different thread than the network updating thread, do I need to protect the queue operations in each thread, if one is only writing to the queue, and another one is reading? If so, what's the best method of making this thread safe. There are many methods i think, never really used any. I'd like to keep low CPU usage and execution speeds.

Thanks in advance, I kinda suck at naming programming related things (especially that english is not my native language) so I can try to explain it better if you'll have some troubles.

No answers for this question!
Get a new question page!

Tried almost everything. Errors:

current build on github and even old "stable" versions cause cmake errors
ZMQ Installer does not support Visual Studio v14

Instructions would be awesome, as it seems that there is no other documentation for that on the internet.

New answer:
[u'\nHad the same problem a while ago. Here is what I did to solve this:\nDownload the right ZMQ version\nThe "download link" provided on the ZMQ website seems outdated.\nTo really get the current version you would have to use Git:\ngit clone https://github.com/zeromq/libzmq.git\n\n\nBuild with Visual Studio 2015\nThe repository comes with a pre-build Visual Studio project. You can find it in ...\\libzmq\\builds\\msvc. To build for Visual Studio 2015 cd into vs2015 and open libzmq.sln.\nYou can choose if you want to compile static or dynamic libraries: DynRelease or StaticRelease for either Win32 or x64.\nAfter that, run Build > Build solution to compile everything.\n\nSetup project to use compiled libraries\nAfter you created your project, go to the project\'s properties:\nC++ > General > Additional Include Directories should point to the include path of the repository. If you want to use C++ style some additional files have to be placed in this directory. Alternatively you can take a look at https://github.com/zeromq/zmqpp.\nLinker > General > Additional Library Directories should point to the built libraries. They should be located at ...\\libzmq\\bin\\x64\\Release\\v140\\dynamic\\.\nLinker > Input > Additional Dependencies should contain the name of the library you want to use. The default should be libzmq.lib, otherwise you will find the name in the bin directory.\nThe program depends on the libzmq.dll file you just built. This file has to be placed within your project\'s build directory. To achieve this, you can add the following command to Build Events > Post-Build Event > Command Line:\ncopy /Y "...\\libzmq\\bin\\x64\\Release\\v140\\dynamic\\libzmq.dll" "$(OutDir)"\n\nThis will copy the .dll file to the destination directory on every build if it\'s missing.\n\nHope this helps =)\n']
Get a new question page!

What are undefined reference/unresolved external symbol errors? What are common causes and how to fix/prevent them?
Feel free to edit/add your own.

New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n"]
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n"]
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n"]
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n"]
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n', u"\nAlso if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries\n"]
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n', u"\nAlso if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries\n", u'\nMicrosoft offers a #pragma to reference the correct library at link time;\n#pragma comment(lib, "libname.lib")\n\nIn addition to the library path including the directory of the library, this should be the full name of the library.\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n', u"\nAlso if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries\n", u'\nMicrosoft offers a #pragma to reference the correct library at link time;\n#pragma comment(lib, "libname.lib")\n\nIn addition to the library path including the directory of the library, this should be the full name of the library.\n', u"\nVisual Studio NuGet package needs to be updated for new toolset version\nI just had this problem trying to link libpng with Visual Studio 2013.  The problem is that the package file only had libraries for Visual Studio 2010 and 2012.\nThe correct solution is to hope the developer releases an updated package and then upgrade, but it worked for me by hacking in an extra setting for VS2013, pointing at the VS2012 library files.\nI edited the package (in the packages folder inside the solution's directory) by finding packagename\\build\\native\\packagename.targets and inside that file, copying all the v110 sections.  I changed the v110 to v120 in the condition fields only being very careful to leave the filename paths all as v110.  This simply allowed Visual Studio 2013 to link to the libraries for 2012, and in this case, it worked.\n"]
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n', u"\nAlso if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries\n", u'\nMicrosoft offers a #pragma to reference the correct library at link time;\n#pragma comment(lib, "libname.lib")\n\nIn addition to the library path including the directory of the library, this should be the full name of the library.\n', u"\nVisual Studio NuGet package needs to be updated for new toolset version\nI just had this problem trying to link libpng with Visual Studio 2013.  The problem is that the package file only had libraries for Visual Studio 2010 and 2012.\nThe correct solution is to hope the developer releases an updated package and then upgrade, but it worked for me by hacking in an extra setting for VS2013, pointing at the VS2012 library files.\nI edited the package (in the packages folder inside the solution's directory) by finding packagename\\build\\native\\packagename.targets and inside that file, copying all the v110 sections.  I changed the v110 to v120 in the condition fields only being very careful to leave the filename paths all as v110.  This simply allowed Visual Studio 2013 to link to the libraries for 2012, and in this case, it worked.\n", u'\nA bug in the compiler/IDE\nI recently had this problem, and it turned out it was a bug in Visual Studio Express 2013. I had to remove a source file from the project and re-add it to overcome the bug.\nSteps to try if you believe it could be a bug in compiler/IDE:\n\nClean the project (some IDEs have an option to do this, you can also\nmanually do it by deleting the object files)\nTry start a new project,\ncopying all source code from the original one.\n\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n', u"\nAlso if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries\n", u'\nMicrosoft offers a #pragma to reference the correct library at link time;\n#pragma comment(lib, "libname.lib")\n\nIn addition to the library path including the directory of the library, this should be the full name of the library.\n', u"\nVisual Studio NuGet package needs to be updated for new toolset version\nI just had this problem trying to link libpng with Visual Studio 2013.  The problem is that the package file only had libraries for Visual Studio 2010 and 2012.\nThe correct solution is to hope the developer releases an updated package and then upgrade, but it worked for me by hacking in an extra setting for VS2013, pointing at the VS2012 library files.\nI edited the package (in the packages folder inside the solution's directory) by finding packagename\\build\\native\\packagename.targets and inside that file, copying all the v110 sections.  I changed the v110 to v120 in the condition fields only being very careful to leave the filename paths all as v110.  This simply allowed Visual Studio 2013 to link to the libraries for 2012, and in this case, it worked.\n", u'\nA bug in the compiler/IDE\nI recently had this problem, and it turned out it was a bug in Visual Studio Express 2013. I had to remove a source file from the project and re-add it to overcome the bug.\nSteps to try if you believe it could be a bug in compiler/IDE:\n\nClean the project (some IDEs have an option to do this, you can also\nmanually do it by deleting the object files)\nTry start a new project,\ncopying all source code from the original one.\n\n', u"\nLinked .lib file is associated to a .dll\nI had the same issue. Say i have projects MyProject and TestProject. I had effectively linked the lib file for MyProject to the TestProject. However, this lib file was produced as the DLL for the MyProject was built. Also, I did not contain source code for all methods in the MyProject, but only access to the DLL's entry points. \nTo solve the issue, i built the MyProject as a LIB, and linked TestProject to this .lib file (i copy paste the generated .lib file into the TestProject folder). I can then build again MyProject as a DLL. It is compiling since the lib to which TestProject is linked does contain code for all methods in classes in MyProject. \n"]
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n', u"\nAlso if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries\n", u'\nMicrosoft offers a #pragma to reference the correct library at link time;\n#pragma comment(lib, "libname.lib")\n\nIn addition to the library path including the directory of the library, this should be the full name of the library.\n', u"\nVisual Studio NuGet package needs to be updated for new toolset version\nI just had this problem trying to link libpng with Visual Studio 2013.  The problem is that the package file only had libraries for Visual Studio 2010 and 2012.\nThe correct solution is to hope the developer releases an updated package and then upgrade, but it worked for me by hacking in an extra setting for VS2013, pointing at the VS2012 library files.\nI edited the package (in the packages folder inside the solution's directory) by finding packagename\\build\\native\\packagename.targets and inside that file, copying all the v110 sections.  I changed the v110 to v120 in the condition fields only being very careful to leave the filename paths all as v110.  This simply allowed Visual Studio 2013 to link to the libraries for 2012, and in this case, it worked.\n", u'\nA bug in the compiler/IDE\nI recently had this problem, and it turned out it was a bug in Visual Studio Express 2013. I had to remove a source file from the project and re-add it to overcome the bug.\nSteps to try if you believe it could be a bug in compiler/IDE:\n\nClean the project (some IDEs have an option to do this, you can also\nmanually do it by deleting the object files)\nTry start a new project,\ncopying all source code from the original one.\n\n', u"\nLinked .lib file is associated to a .dll\nI had the same issue. Say i have projects MyProject and TestProject. I had effectively linked the lib file for MyProject to the TestProject. However, this lib file was produced as the DLL for the MyProject was built. Also, I did not contain source code for all methods in the MyProject, but only access to the DLL's entry points. \nTo solve the issue, i built the MyProject as a LIB, and linked TestProject to this .lib file (i copy paste the generated .lib file into the TestProject folder). I can then build again MyProject as a DLL. It is compiling since the lib to which TestProject is linked does contain code for all methods in classes in MyProject. \n", u'\nSuppose you have a big project written in c++ which has a thousand of .cpp files  and a thousand of .h files.And let\'s says the project also depends on ten static libraries . Let\'s says we are on Windows and we build our project in Visual Studio 20xx . When you press Ctr + F7 Visual Studio start compiling the whole solution ( suppose we have just one project in the solution )\nWhat\'s the meaning of compilation ?\n\nVisual Studio search into file .vcxproj and start compiling each file which has the extansion .cpp . Order of compilation is undefined.So you must not assume that the file main.cpp is compiled first\nIf .cpp files depends on   additional .h files  in order to find symbols\nthat may or may not be defined in the file .cpp\nIf exists one .cpp file in which the compiler could not find one symbol,a compiler time error raises with the message Symbol x could not be found\nFor each file with extension .cpp is generated an object file .o and also Visual Studio writes the output in a file named ProjectName.Cpp.Clean.txt which contains all object files that must be processed by linker.\n\nThe Second step of compilation is done by Linker.Linker should merge all the object file and build finally the output ( which may be an executable or a library)\nSteps In Linking a project \n\nParse all the object files and find the definition which was only declared in headers ( eg : The code of one method of a class as is mentioned in previous answers,or event the initialization of a static variable which is member inside a class)\nIf one symbol could not be found in object files he also is searched in Additional Libraries.For adding a new library to a project Configuration properties -> VC++ Directories  -> Library Directories and here you specified additional folder for searching libraries and Configuration properties -> Linker -> Input for specifying the name of the library. \n-If the Linker could not find the symbol which you write in one .cpp he raises an linker time error which may sounds like \nerror LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n\nObservation\n\nOnce the Linker find one symbol he doesn\'t search in other libraries for it\nThe order of linking libraries does matter.\nIf Linker find an external symbol in one static library he includes the symbol in output of the project.However if the library is shared( dynamic ) he doesn\'t includes the code ( symbols ) in output, but  Run-Time crashes may occur\n\nHow To Solve this kind of error\nCompiler Time Error : \n\nMake sure you write your c++ project syntactical correct.\n\nLinker Time Error\n\nDefine all your symbol which you declare in your header files\nUse #pragma once for allowing compiler not to include one header if it was already included by the current .cpp which is compiled\nMake sure that your external library doesn\'t contains symbols that may enter in conflict with other symbols you defined in your header files\nWhen you use template make sure you include the definition of each template function in header file for allowing the compiler to generate appropriate code for any instantiations .  \n\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n', u"\nAlso if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries\n", u'\nMicrosoft offers a #pragma to reference the correct library at link time;\n#pragma comment(lib, "libname.lib")\n\nIn addition to the library path including the directory of the library, this should be the full name of the library.\n', u"\nVisual Studio NuGet package needs to be updated for new toolset version\nI just had this problem trying to link libpng with Visual Studio 2013.  The problem is that the package file only had libraries for Visual Studio 2010 and 2012.\nThe correct solution is to hope the developer releases an updated package and then upgrade, but it worked for me by hacking in an extra setting for VS2013, pointing at the VS2012 library files.\nI edited the package (in the packages folder inside the solution's directory) by finding packagename\\build\\native\\packagename.targets and inside that file, copying all the v110 sections.  I changed the v110 to v120 in the condition fields only being very careful to leave the filename paths all as v110.  This simply allowed Visual Studio 2013 to link to the libraries for 2012, and in this case, it worked.\n", u'\nA bug in the compiler/IDE\nI recently had this problem, and it turned out it was a bug in Visual Studio Express 2013. I had to remove a source file from the project and re-add it to overcome the bug.\nSteps to try if you believe it could be a bug in compiler/IDE:\n\nClean the project (some IDEs have an option to do this, you can also\nmanually do it by deleting the object files)\nTry start a new project,\ncopying all source code from the original one.\n\n', u"\nLinked .lib file is associated to a .dll\nI had the same issue. Say i have projects MyProject and TestProject. I had effectively linked the lib file for MyProject to the TestProject. However, this lib file was produced as the DLL for the MyProject was built. Also, I did not contain source code for all methods in the MyProject, but only access to the DLL's entry points. \nTo solve the issue, i built the MyProject as a LIB, and linked TestProject to this .lib file (i copy paste the generated .lib file into the TestProject folder). I can then build again MyProject as a DLL. It is compiling since the lib to which TestProject is linked does contain code for all methods in classes in MyProject. \n", u'\nSuppose you have a big project written in c++ which has a thousand of .cpp files  and a thousand of .h files.And let\'s says the project also depends on ten static libraries . Let\'s says we are on Windows and we build our project in Visual Studio 20xx . When you press Ctr + F7 Visual Studio start compiling the whole solution ( suppose we have just one project in the solution )\nWhat\'s the meaning of compilation ?\n\nVisual Studio search into file .vcxproj and start compiling each file which has the extansion .cpp . Order of compilation is undefined.So you must not assume that the file main.cpp is compiled first\nIf .cpp files depends on   additional .h files  in order to find symbols\nthat may or may not be defined in the file .cpp\nIf exists one .cpp file in which the compiler could not find one symbol,a compiler time error raises with the message Symbol x could not be found\nFor each file with extension .cpp is generated an object file .o and also Visual Studio writes the output in a file named ProjectName.Cpp.Clean.txt which contains all object files that must be processed by linker.\n\nThe Second step of compilation is done by Linker.Linker should merge all the object file and build finally the output ( which may be an executable or a library)\nSteps In Linking a project \n\nParse all the object files and find the definition which was only declared in headers ( eg : The code of one method of a class as is mentioned in previous answers,or event the initialization of a static variable which is member inside a class)\nIf one symbol could not be found in object files he also is searched in Additional Libraries.For adding a new library to a project Configuration properties -> VC++ Directories  -> Library Directories and here you specified additional folder for searching libraries and Configuration properties -> Linker -> Input for specifying the name of the library. \n-If the Linker could not find the symbol which you write in one .cpp he raises an linker time error which may sounds like \nerror LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n\nObservation\n\nOnce the Linker find one symbol he doesn\'t search in other libraries for it\nThe order of linking libraries does matter.\nIf Linker find an external symbol in one static library he includes the symbol in output of the project.However if the library is shared( dynamic ) he doesn\'t includes the code ( symbols ) in output, but  Run-Time crashes may occur\n\nHow To Solve this kind of error\nCompiler Time Error : \n\nMake sure you write your c++ project syntactical correct.\n\nLinker Time Error\n\nDefine all your symbol which you declare in your header files\nUse #pragma once for allowing compiler not to include one header if it was already included by the current .cpp which is compiled\nMake sure that your external library doesn\'t contains symbols that may enter in conflict with other symbols you defined in your header files\nWhen you use template make sure you include the definition of each template function in header file for allowing the compiler to generate appropriate code for any instantiations .  \n\n', u"\nA wrapper around GNU ld that doesn't support linker scripts\nSome .so files are actually GNU ld linker scripts, e.g. libtbb.so file is an ASCII text file with this contents:\nINPUT (libtbb.so.2)\n\nSome more complex builds may not support this. For example, if you include -v in the compiler options, you can see that the mainwin gcc wrapper mwdip discards linker script command files in the verbose output list of libraries to link in. A simple work around is to replace the linker script input command file with a copy of the file instead (or a symlink), e.g.\ncp libtbb.so.2 libtbb.so\n\nOr you could replace the -l argument with the full path of the .so, e.g. instead of -ltbb do /home/foo/tbb-4.3/linux/lib/intel64/gcc4.4/libtbb.so.2\n"]
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n', u"\nAlso if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries\n", u'\nMicrosoft offers a #pragma to reference the correct library at link time;\n#pragma comment(lib, "libname.lib")\n\nIn addition to the library path including the directory of the library, this should be the full name of the library.\n', u"\nVisual Studio NuGet package needs to be updated for new toolset version\nI just had this problem trying to link libpng with Visual Studio 2013.  The problem is that the package file only had libraries for Visual Studio 2010 and 2012.\nThe correct solution is to hope the developer releases an updated package and then upgrade, but it worked for me by hacking in an extra setting for VS2013, pointing at the VS2012 library files.\nI edited the package (in the packages folder inside the solution's directory) by finding packagename\\build\\native\\packagename.targets and inside that file, copying all the v110 sections.  I changed the v110 to v120 in the condition fields only being very careful to leave the filename paths all as v110.  This simply allowed Visual Studio 2013 to link to the libraries for 2012, and in this case, it worked.\n", u'\nA bug in the compiler/IDE\nI recently had this problem, and it turned out it was a bug in Visual Studio Express 2013. I had to remove a source file from the project and re-add it to overcome the bug.\nSteps to try if you believe it could be a bug in compiler/IDE:\n\nClean the project (some IDEs have an option to do this, you can also\nmanually do it by deleting the object files)\nTry start a new project,\ncopying all source code from the original one.\n\n', u"\nLinked .lib file is associated to a .dll\nI had the same issue. Say i have projects MyProject and TestProject. I had effectively linked the lib file for MyProject to the TestProject. However, this lib file was produced as the DLL for the MyProject was built. Also, I did not contain source code for all methods in the MyProject, but only access to the DLL's entry points. \nTo solve the issue, i built the MyProject as a LIB, and linked TestProject to this .lib file (i copy paste the generated .lib file into the TestProject folder). I can then build again MyProject as a DLL. It is compiling since the lib to which TestProject is linked does contain code for all methods in classes in MyProject. \n", u'\nSuppose you have a big project written in c++ which has a thousand of .cpp files  and a thousand of .h files.And let\'s says the project also depends on ten static libraries . Let\'s says we are on Windows and we build our project in Visual Studio 20xx . When you press Ctr + F7 Visual Studio start compiling the whole solution ( suppose we have just one project in the solution )\nWhat\'s the meaning of compilation ?\n\nVisual Studio search into file .vcxproj and start compiling each file which has the extansion .cpp . Order of compilation is undefined.So you must not assume that the file main.cpp is compiled first\nIf .cpp files depends on   additional .h files  in order to find symbols\nthat may or may not be defined in the file .cpp\nIf exists one .cpp file in which the compiler could not find one symbol,a compiler time error raises with the message Symbol x could not be found\nFor each file with extension .cpp is generated an object file .o and also Visual Studio writes the output in a file named ProjectName.Cpp.Clean.txt which contains all object files that must be processed by linker.\n\nThe Second step of compilation is done by Linker.Linker should merge all the object file and build finally the output ( which may be an executable or a library)\nSteps In Linking a project \n\nParse all the object files and find the definition which was only declared in headers ( eg : The code of one method of a class as is mentioned in previous answers,or event the initialization of a static variable which is member inside a class)\nIf one symbol could not be found in object files he also is searched in Additional Libraries.For adding a new library to a project Configuration properties -> VC++ Directories  -> Library Directories and here you specified additional folder for searching libraries and Configuration properties -> Linker -> Input for specifying the name of the library. \n-If the Linker could not find the symbol which you write in one .cpp he raises an linker time error which may sounds like \nerror LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n\nObservation\n\nOnce the Linker find one symbol he doesn\'t search in other libraries for it\nThe order of linking libraries does matter.\nIf Linker find an external symbol in one static library he includes the symbol in output of the project.However if the library is shared( dynamic ) he doesn\'t includes the code ( symbols ) in output, but  Run-Time crashes may occur\n\nHow To Solve this kind of error\nCompiler Time Error : \n\nMake sure you write your c++ project syntactical correct.\n\nLinker Time Error\n\nDefine all your symbol which you declare in your header files\nUse #pragma once for allowing compiler not to include one header if it was already included by the current .cpp which is compiled\nMake sure that your external library doesn\'t contains symbols that may enter in conflict with other symbols you defined in your header files\nWhen you use template make sure you include the definition of each template function in header file for allowing the compiler to generate appropriate code for any instantiations .  \n\n', u"\nA wrapper around GNU ld that doesn't support linker scripts\nSome .so files are actually GNU ld linker scripts, e.g. libtbb.so file is an ASCII text file with this contents:\nINPUT (libtbb.so.2)\n\nSome more complex builds may not support this. For example, if you include -v in the compiler options, you can see that the mainwin gcc wrapper mwdip discards linker script command files in the verbose output list of libraries to link in. A simple work around is to replace the linker script input command file with a copy of the file instead (or a symlink), e.g.\ncp libtbb.so.2 libtbb.so\n\nOr you could replace the -l argument with the full path of the .so, e.g. instead of -ltbb do /home/foo/tbb-4.3/linux/lib/intel64/gcc4.4/libtbb.so.2\n", u'\nUse the linker to help diagnose the error\nMost modern linkers include a verbose option that prints out to varying degrees;\n\nLink invocation (command line),\nData on what libraries are included in the link stage,\nThe location of the libraries,\nSearch paths used.\n\nFor gcc and clang; you would typically add -v -Wl,--verbose or -v -Wl,-v to the command line. More details can be found here;\n\nLinux ld man page.\nLLVM linker page.\n"An introduction to GCC" chapter 9.\n\nFor MSVC, /VERBOSE (in particular /VERBOSE:LIB) is added to the link command line.\n\nThe MSDN page on the /VERBOSE linker option.\n\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n', u"\nAlso if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries\n", u'\nMicrosoft offers a #pragma to reference the correct library at link time;\n#pragma comment(lib, "libname.lib")\n\nIn addition to the library path including the directory of the library, this should be the full name of the library.\n', u"\nVisual Studio NuGet package needs to be updated for new toolset version\nI just had this problem trying to link libpng with Visual Studio 2013.  The problem is that the package file only had libraries for Visual Studio 2010 and 2012.\nThe correct solution is to hope the developer releases an updated package and then upgrade, but it worked for me by hacking in an extra setting for VS2013, pointing at the VS2012 library files.\nI edited the package (in the packages folder inside the solution's directory) by finding packagename\\build\\native\\packagename.targets and inside that file, copying all the v110 sections.  I changed the v110 to v120 in the condition fields only being very careful to leave the filename paths all as v110.  This simply allowed Visual Studio 2013 to link to the libraries for 2012, and in this case, it worked.\n", u'\nA bug in the compiler/IDE\nI recently had this problem, and it turned out it was a bug in Visual Studio Express 2013. I had to remove a source file from the project and re-add it to overcome the bug.\nSteps to try if you believe it could be a bug in compiler/IDE:\n\nClean the project (some IDEs have an option to do this, you can also\nmanually do it by deleting the object files)\nTry start a new project,\ncopying all source code from the original one.\n\n', u"\nLinked .lib file is associated to a .dll\nI had the same issue. Say i have projects MyProject and TestProject. I had effectively linked the lib file for MyProject to the TestProject. However, this lib file was produced as the DLL for the MyProject was built. Also, I did not contain source code for all methods in the MyProject, but only access to the DLL's entry points. \nTo solve the issue, i built the MyProject as a LIB, and linked TestProject to this .lib file (i copy paste the generated .lib file into the TestProject folder). I can then build again MyProject as a DLL. It is compiling since the lib to which TestProject is linked does contain code for all methods in classes in MyProject. \n", u'\nSuppose you have a big project written in c++ which has a thousand of .cpp files  and a thousand of .h files.And let\'s says the project also depends on ten static libraries . Let\'s says we are on Windows and we build our project in Visual Studio 20xx . When you press Ctr + F7 Visual Studio start compiling the whole solution ( suppose we have just one project in the solution )\nWhat\'s the meaning of compilation ?\n\nVisual Studio search into file .vcxproj and start compiling each file which has the extansion .cpp . Order of compilation is undefined.So you must not assume that the file main.cpp is compiled first\nIf .cpp files depends on   additional .h files  in order to find symbols\nthat may or may not be defined in the file .cpp\nIf exists one .cpp file in which the compiler could not find one symbol,a compiler time error raises with the message Symbol x could not be found\nFor each file with extension .cpp is generated an object file .o and also Visual Studio writes the output in a file named ProjectName.Cpp.Clean.txt which contains all object files that must be processed by linker.\n\nThe Second step of compilation is done by Linker.Linker should merge all the object file and build finally the output ( which may be an executable or a library)\nSteps In Linking a project \n\nParse all the object files and find the definition which was only declared in headers ( eg : The code of one method of a class as is mentioned in previous answers,or event the initialization of a static variable which is member inside a class)\nIf one symbol could not be found in object files he also is searched in Additional Libraries.For adding a new library to a project Configuration properties -> VC++ Directories  -> Library Directories and here you specified additional folder for searching libraries and Configuration properties -> Linker -> Input for specifying the name of the library. \n-If the Linker could not find the symbol which you write in one .cpp he raises an linker time error which may sounds like \nerror LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n\nObservation\n\nOnce the Linker find one symbol he doesn\'t search in other libraries for it\nThe order of linking libraries does matter.\nIf Linker find an external symbol in one static library he includes the symbol in output of the project.However if the library is shared( dynamic ) he doesn\'t includes the code ( symbols ) in output, but  Run-Time crashes may occur\n\nHow To Solve this kind of error\nCompiler Time Error : \n\nMake sure you write your c++ project syntactical correct.\n\nLinker Time Error\n\nDefine all your symbol which you declare in your header files\nUse #pragma once for allowing compiler not to include one header if it was already included by the current .cpp which is compiled\nMake sure that your external library doesn\'t contains symbols that may enter in conflict with other symbols you defined in your header files\nWhen you use template make sure you include the definition of each template function in header file for allowing the compiler to generate appropriate code for any instantiations .  \n\n', u"\nA wrapper around GNU ld that doesn't support linker scripts\nSome .so files are actually GNU ld linker scripts, e.g. libtbb.so file is an ASCII text file with this contents:\nINPUT (libtbb.so.2)\n\nSome more complex builds may not support this. For example, if you include -v in the compiler options, you can see that the mainwin gcc wrapper mwdip discards linker script command files in the verbose output list of libraries to link in. A simple work around is to replace the linker script input command file with a copy of the file instead (or a symlink), e.g.\ncp libtbb.so.2 libtbb.so\n\nOr you could replace the -l argument with the full path of the .so, e.g. instead of -ltbb do /home/foo/tbb-4.3/linux/lib/intel64/gcc4.4/libtbb.so.2\n", u'\nUse the linker to help diagnose the error\nMost modern linkers include a verbose option that prints out to varying degrees;\n\nLink invocation (command line),\nData on what libraries are included in the link stage,\nThe location of the libraries,\nSearch paths used.\n\nFor gcc and clang; you would typically add -v -Wl,--verbose or -v -Wl,-v to the command line. More details can be found here;\n\nLinux ld man page.\nLLVM linker page.\n"An introduction to GCC" chapter 9.\n\nFor MSVC, /VERBOSE (in particular /VERBOSE:LIB) is added to the link command line.\n\nThe MSDN page on the /VERBOSE linker option.\n\n', u'\nSince people seem to be directed to this question when it comes to linker errors I am going to add this here.\nOne possible reason for linker errors with GCC 5.2.0 is that a new libstdc++ library ABI is now chosen by default.\n\nIf you get linker errors about undefined references to symbols that involve types in the std::__cxx11 namespace or the tag [abi:cxx11] then it probably indicates that you are trying to link together object files that were compiled with different values for the _GLIBCXX_USE_CXX11_ABI macro. This commonly happens when linking to a third-party library that was compiled with an older version of GCC. If the third-party library cannot be rebuilt with the new ABI then you will need to recompile your code with the old ABI.\n\nSo if you suddenly get linker errors when switching to a GCC after 5.1.0 this would be a thing to check out.\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n', u"\nAlso if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries\n", u'\nMicrosoft offers a #pragma to reference the correct library at link time;\n#pragma comment(lib, "libname.lib")\n\nIn addition to the library path including the directory of the library, this should be the full name of the library.\n', u"\nVisual Studio NuGet package needs to be updated for new toolset version\nI just had this problem trying to link libpng with Visual Studio 2013.  The problem is that the package file only had libraries for Visual Studio 2010 and 2012.\nThe correct solution is to hope the developer releases an updated package and then upgrade, but it worked for me by hacking in an extra setting for VS2013, pointing at the VS2012 library files.\nI edited the package (in the packages folder inside the solution's directory) by finding packagename\\build\\native\\packagename.targets and inside that file, copying all the v110 sections.  I changed the v110 to v120 in the condition fields only being very careful to leave the filename paths all as v110.  This simply allowed Visual Studio 2013 to link to the libraries for 2012, and in this case, it worked.\n", u'\nA bug in the compiler/IDE\nI recently had this problem, and it turned out it was a bug in Visual Studio Express 2013. I had to remove a source file from the project and re-add it to overcome the bug.\nSteps to try if you believe it could be a bug in compiler/IDE:\n\nClean the project (some IDEs have an option to do this, you can also\nmanually do it by deleting the object files)\nTry start a new project,\ncopying all source code from the original one.\n\n', u"\nLinked .lib file is associated to a .dll\nI had the same issue. Say i have projects MyProject and TestProject. I had effectively linked the lib file for MyProject to the TestProject. However, this lib file was produced as the DLL for the MyProject was built. Also, I did not contain source code for all methods in the MyProject, but only access to the DLL's entry points. \nTo solve the issue, i built the MyProject as a LIB, and linked TestProject to this .lib file (i copy paste the generated .lib file into the TestProject folder). I can then build again MyProject as a DLL. It is compiling since the lib to which TestProject is linked does contain code for all methods in classes in MyProject. \n", u'\nSuppose you have a big project written in c++ which has a thousand of .cpp files  and a thousand of .h files.And let\'s says the project also depends on ten static libraries . Let\'s says we are on Windows and we build our project in Visual Studio 20xx . When you press Ctr + F7 Visual Studio start compiling the whole solution ( suppose we have just one project in the solution )\nWhat\'s the meaning of compilation ?\n\nVisual Studio search into file .vcxproj and start compiling each file which has the extansion .cpp . Order of compilation is undefined.So you must not assume that the file main.cpp is compiled first\nIf .cpp files depends on   additional .h files  in order to find symbols\nthat may or may not be defined in the file .cpp\nIf exists one .cpp file in which the compiler could not find one symbol,a compiler time error raises with the message Symbol x could not be found\nFor each file with extension .cpp is generated an object file .o and also Visual Studio writes the output in a file named ProjectName.Cpp.Clean.txt which contains all object files that must be processed by linker.\n\nThe Second step of compilation is done by Linker.Linker should merge all the object file and build finally the output ( which may be an executable or a library)\nSteps In Linking a project \n\nParse all the object files and find the definition which was only declared in headers ( eg : The code of one method of a class as is mentioned in previous answers,or event the initialization of a static variable which is member inside a class)\nIf one symbol could not be found in object files he also is searched in Additional Libraries.For adding a new library to a project Configuration properties -> VC++ Directories  -> Library Directories and here you specified additional folder for searching libraries and Configuration properties -> Linker -> Input for specifying the name of the library. \n-If the Linker could not find the symbol which you write in one .cpp he raises an linker time error which may sounds like \nerror LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n\nObservation\n\nOnce the Linker find one symbol he doesn\'t search in other libraries for it\nThe order of linking libraries does matter.\nIf Linker find an external symbol in one static library he includes the symbol in output of the project.However if the library is shared( dynamic ) he doesn\'t includes the code ( symbols ) in output, but  Run-Time crashes may occur\n\nHow To Solve this kind of error\nCompiler Time Error : \n\nMake sure you write your c++ project syntactical correct.\n\nLinker Time Error\n\nDefine all your symbol which you declare in your header files\nUse #pragma once for allowing compiler not to include one header if it was already included by the current .cpp which is compiled\nMake sure that your external library doesn\'t contains symbols that may enter in conflict with other symbols you defined in your header files\nWhen you use template make sure you include the definition of each template function in header file for allowing the compiler to generate appropriate code for any instantiations .  \n\n', u"\nA wrapper around GNU ld that doesn't support linker scripts\nSome .so files are actually GNU ld linker scripts, e.g. libtbb.so file is an ASCII text file with this contents:\nINPUT (libtbb.so.2)\n\nSome more complex builds may not support this. For example, if you include -v in the compiler options, you can see that the mainwin gcc wrapper mwdip discards linker script command files in the verbose output list of libraries to link in. A simple work around is to replace the linker script input command file with a copy of the file instead (or a symlink), e.g.\ncp libtbb.so.2 libtbb.so\n\nOr you could replace the -l argument with the full path of the .so, e.g. instead of -ltbb do /home/foo/tbb-4.3/linux/lib/intel64/gcc4.4/libtbb.so.2\n", u'\nUse the linker to help diagnose the error\nMost modern linkers include a verbose option that prints out to varying degrees;\n\nLink invocation (command line),\nData on what libraries are included in the link stage,\nThe location of the libraries,\nSearch paths used.\n\nFor gcc and clang; you would typically add -v -Wl,--verbose or -v -Wl,-v to the command line. More details can be found here;\n\nLinux ld man page.\nLLVM linker page.\n"An introduction to GCC" chapter 9.\n\nFor MSVC, /VERBOSE (in particular /VERBOSE:LIB) is added to the link command line.\n\nThe MSDN page on the /VERBOSE linker option.\n\n', u'\nSince people seem to be directed to this question when it comes to linker errors I am going to add this here.\nOne possible reason for linker errors with GCC 5.2.0 is that a new libstdc++ library ABI is now chosen by default.\n\nIf you get linker errors about undefined references to symbols that involve types in the std::__cxx11 namespace or the tag [abi:cxx11] then it probably indicates that you are trying to link together object files that were compiled with different values for the _GLIBCXX_USE_CXX11_ABI macro. This commonly happens when linking to a third-party library that was compiled with an older version of GCC. If the third-party library cannot be rebuilt with the new ABI then you will need to recompile your code with the old ABI.\n\nSo if you suddenly get linker errors when switching to a GCC after 5.1.0 this would be a thing to check out.\n', u'\nClean and rebuild\nA "clean" of the build can remove the "dead wood" that may be left lying around from previous builds, failed builds, incomplete builds and other build system related build issues.\nIn general the IDE or build will include some form of "clean" function, but this may not be correctly configured (e.g. in a manual makefile) or may fail (e.g. the intermediate or resultant binaries are read-only).\nOnce the "clean" has completed, verify that the "clean" has succeeded and all the generated intermediate file (e.g. an automated makefile) have been successfully removed.\nThis process can be seen as a final resort, but is often a good first step; especially if the code related to the error has recently been added (either locally or from the source repository).\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n', u"\nAlso if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries\n", u'\nMicrosoft offers a #pragma to reference the correct library at link time;\n#pragma comment(lib, "libname.lib")\n\nIn addition to the library path including the directory of the library, this should be the full name of the library.\n', u"\nVisual Studio NuGet package needs to be updated for new toolset version\nI just had this problem trying to link libpng with Visual Studio 2013.  The problem is that the package file only had libraries for Visual Studio 2010 and 2012.\nThe correct solution is to hope the developer releases an updated package and then upgrade, but it worked for me by hacking in an extra setting for VS2013, pointing at the VS2012 library files.\nI edited the package (in the packages folder inside the solution's directory) by finding packagename\\build\\native\\packagename.targets and inside that file, copying all the v110 sections.  I changed the v110 to v120 in the condition fields only being very careful to leave the filename paths all as v110.  This simply allowed Visual Studio 2013 to link to the libraries for 2012, and in this case, it worked.\n", u'\nA bug in the compiler/IDE\nI recently had this problem, and it turned out it was a bug in Visual Studio Express 2013. I had to remove a source file from the project and re-add it to overcome the bug.\nSteps to try if you believe it could be a bug in compiler/IDE:\n\nClean the project (some IDEs have an option to do this, you can also\nmanually do it by deleting the object files)\nTry start a new project,\ncopying all source code from the original one.\n\n', u"\nLinked .lib file is associated to a .dll\nI had the same issue. Say i have projects MyProject and TestProject. I had effectively linked the lib file for MyProject to the TestProject. However, this lib file was produced as the DLL for the MyProject was built. Also, I did not contain source code for all methods in the MyProject, but only access to the DLL's entry points. \nTo solve the issue, i built the MyProject as a LIB, and linked TestProject to this .lib file (i copy paste the generated .lib file into the TestProject folder). I can then build again MyProject as a DLL. It is compiling since the lib to which TestProject is linked does contain code for all methods in classes in MyProject. \n", u'\nSuppose you have a big project written in c++ which has a thousand of .cpp files  and a thousand of .h files.And let\'s says the project also depends on ten static libraries . Let\'s says we are on Windows and we build our project in Visual Studio 20xx . When you press Ctr + F7 Visual Studio start compiling the whole solution ( suppose we have just one project in the solution )\nWhat\'s the meaning of compilation ?\n\nVisual Studio search into file .vcxproj and start compiling each file which has the extansion .cpp . Order of compilation is undefined.So you must not assume that the file main.cpp is compiled first\nIf .cpp files depends on   additional .h files  in order to find symbols\nthat may or may not be defined in the file .cpp\nIf exists one .cpp file in which the compiler could not find one symbol,a compiler time error raises with the message Symbol x could not be found\nFor each file with extension .cpp is generated an object file .o and also Visual Studio writes the output in a file named ProjectName.Cpp.Clean.txt which contains all object files that must be processed by linker.\n\nThe Second step of compilation is done by Linker.Linker should merge all the object file and build finally the output ( which may be an executable or a library)\nSteps In Linking a project \n\nParse all the object files and find the definition which was only declared in headers ( eg : The code of one method of a class as is mentioned in previous answers,or event the initialization of a static variable which is member inside a class)\nIf one symbol could not be found in object files he also is searched in Additional Libraries.For adding a new library to a project Configuration properties -> VC++ Directories  -> Library Directories and here you specified additional folder for searching libraries and Configuration properties -> Linker -> Input for specifying the name of the library. \n-If the Linker could not find the symbol which you write in one .cpp he raises an linker time error which may sounds like \nerror LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n\nObservation\n\nOnce the Linker find one symbol he doesn\'t search in other libraries for it\nThe order of linking libraries does matter.\nIf Linker find an external symbol in one static library he includes the symbol in output of the project.However if the library is shared( dynamic ) he doesn\'t includes the code ( symbols ) in output, but  Run-Time crashes may occur\n\nHow To Solve this kind of error\nCompiler Time Error : \n\nMake sure you write your c++ project syntactical correct.\n\nLinker Time Error\n\nDefine all your symbol which you declare in your header files\nUse #pragma once for allowing compiler not to include one header if it was already included by the current .cpp which is compiled\nMake sure that your external library doesn\'t contains symbols that may enter in conflict with other symbols you defined in your header files\nWhen you use template make sure you include the definition of each template function in header file for allowing the compiler to generate appropriate code for any instantiations .  \n\n', u"\nA wrapper around GNU ld that doesn't support linker scripts\nSome .so files are actually GNU ld linker scripts, e.g. libtbb.so file is an ASCII text file with this contents:\nINPUT (libtbb.so.2)\n\nSome more complex builds may not support this. For example, if you include -v in the compiler options, you can see that the mainwin gcc wrapper mwdip discards linker script command files in the verbose output list of libraries to link in. A simple work around is to replace the linker script input command file with a copy of the file instead (or a symlink), e.g.\ncp libtbb.so.2 libtbb.so\n\nOr you could replace the -l argument with the full path of the .so, e.g. instead of -ltbb do /home/foo/tbb-4.3/linux/lib/intel64/gcc4.4/libtbb.so.2\n", u'\nUse the linker to help diagnose the error\nMost modern linkers include a verbose option that prints out to varying degrees;\n\nLink invocation (command line),\nData on what libraries are included in the link stage,\nThe location of the libraries,\nSearch paths used.\n\nFor gcc and clang; you would typically add -v -Wl,--verbose or -v -Wl,-v to the command line. More details can be found here;\n\nLinux ld man page.\nLLVM linker page.\n"An introduction to GCC" chapter 9.\n\nFor MSVC, /VERBOSE (in particular /VERBOSE:LIB) is added to the link command line.\n\nThe MSDN page on the /VERBOSE linker option.\n\n', u'\nSince people seem to be directed to this question when it comes to linker errors I am going to add this here.\nOne possible reason for linker errors with GCC 5.2.0 is that a new libstdc++ library ABI is now chosen by default.\n\nIf you get linker errors about undefined references to symbols that involve types in the std::__cxx11 namespace or the tag [abi:cxx11] then it probably indicates that you are trying to link together object files that were compiled with different values for the _GLIBCXX_USE_CXX11_ABI macro. This commonly happens when linking to a third-party library that was compiled with an older version of GCC. If the third-party library cannot be rebuilt with the new ABI then you will need to recompile your code with the old ABI.\n\nSo if you suddenly get linker errors when switching to a GCC after 5.1.0 this would be a thing to check out.\n', u'\nClean and rebuild\nA "clean" of the build can remove the "dead wood" that may be left lying around from previous builds, failed builds, incomplete builds and other build system related build issues.\nIn general the IDE or build will include some form of "clean" function, but this may not be correctly configured (e.g. in a manual makefile) or may fail (e.g. the intermediate or resultant binaries are read-only).\nOnce the "clean" has completed, verify that the "clean" has succeeded and all the generated intermediate file (e.g. an automated makefile) have been successfully removed.\nThis process can be seen as a final resort, but is often a good first step; especially if the code related to the error has recently been added (either locally or from the source repository).\n', u'\nBefriending templates...\nGiven the code snippet of a template type with a friend operator (or function);\ntemplate <typename T>\nclass Foo {\n    friend std::ostream& operator<< (std::ostream& os, const Foo<T>& a);\n};\n\nThe operator<< is being declared as a non-template function. For every type T used with Foo, there needs to be a non-templated operator<<. For example, if there is a type Foo<int> declared, then there must be an operator implementation as follows;\nstd::ostream& operator<< (std::ostream& os, const Foo<int>& a) {/*...*/}\n\nSince it is not implemented, the linker fails to find it and results in the error.\nTo correct this, you can declare a template operator before the Foo type and then declare as a friend, the appropriate instantiation. The syntax is a little awkward, but is looks as follows;\n// forward declare the Foo\ntemplate <typename>\nclass Foo;\n\n// forward declare the operator <<\ntemplate <typename T>\nstd::ostream& operator<<(std::ostream&, const Foo<T>&);\n\ntemplate <typename T>\nclass Foo {\n    friend std::ostream& operator<< <>(std::ostream& os, const Foo<T>& a);\n    // note the required <>        ^^^^\n    // ...\n};\n\ntemplate <typename T>\nstd::ostream& operator<<(std::ostream&, const Foo<T>&)\n{\n  // ... implement the operator\n}\n\nThe above code limits the friendship of the operator to the corresponding instantiation of Foo, i.e. the operator<< <int> instantiation is limited to access the private members of the instantiation of Foo<int>.\nAlternatives include allowing the friendship to extend to all instantiations of the templates;\ntemplate <typename T>\nclass Foo {\n    template <typename T1>\n    friend std::ostream& operator<<(std::ostream& os, const Foo<T1>& a);\n    // ...\n};\n\nThe implementation for the operator<< could then be done inline inside the class definition, or outside.\ntemplate <typename T>\nclass Foo {\n    friend std::ostream& operator<<(std::ostream& os, const Foo& a)\n    { /*...*/ }\n    // ...\n};\n\nNote, when the declaration of the operator (or function) only appears in the class, the name is not available for "normal" lookup, only for argument dependent lookup, from cppreference;\n\nA name first declared in a friend declaration within class or class template X becomes a member of the innermost enclosing namespace of X, but is not accessible for lookup (except argument-dependent lookup that considers X) unless a matching declaration at the namespace scope is provided...\n\nThere is further reading on template friends at cppreference and the C++ FAQ.\nCode listing showing the techniques above.\n\nAs a side note to the failing code sample; g++ warns about this as follows\n\nwarning: friend declaration \'std::ostream& operator<<(...)\' declares a non-template function [-Wnon-template-friend]\nnote: (if this is not what you intended, make sure the function template has already been declared and add <> after the function name here) \n\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n', u"\nAlso if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries\n", u'\nMicrosoft offers a #pragma to reference the correct library at link time;\n#pragma comment(lib, "libname.lib")\n\nIn addition to the library path including the directory of the library, this should be the full name of the library.\n', u"\nVisual Studio NuGet package needs to be updated for new toolset version\nI just had this problem trying to link libpng with Visual Studio 2013.  The problem is that the package file only had libraries for Visual Studio 2010 and 2012.\nThe correct solution is to hope the developer releases an updated package and then upgrade, but it worked for me by hacking in an extra setting for VS2013, pointing at the VS2012 library files.\nI edited the package (in the packages folder inside the solution's directory) by finding packagename\\build\\native\\packagename.targets and inside that file, copying all the v110 sections.  I changed the v110 to v120 in the condition fields only being very careful to leave the filename paths all as v110.  This simply allowed Visual Studio 2013 to link to the libraries for 2012, and in this case, it worked.\n", u'\nA bug in the compiler/IDE\nI recently had this problem, and it turned out it was a bug in Visual Studio Express 2013. I had to remove a source file from the project and re-add it to overcome the bug.\nSteps to try if you believe it could be a bug in compiler/IDE:\n\nClean the project (some IDEs have an option to do this, you can also\nmanually do it by deleting the object files)\nTry start a new project,\ncopying all source code from the original one.\n\n', u"\nLinked .lib file is associated to a .dll\nI had the same issue. Say i have projects MyProject and TestProject. I had effectively linked the lib file for MyProject to the TestProject. However, this lib file was produced as the DLL for the MyProject was built. Also, I did not contain source code for all methods in the MyProject, but only access to the DLL's entry points. \nTo solve the issue, i built the MyProject as a LIB, and linked TestProject to this .lib file (i copy paste the generated .lib file into the TestProject folder). I can then build again MyProject as a DLL. It is compiling since the lib to which TestProject is linked does contain code for all methods in classes in MyProject. \n", u'\nSuppose you have a big project written in c++ which has a thousand of .cpp files  and a thousand of .h files.And let\'s says the project also depends on ten static libraries . Let\'s says we are on Windows and we build our project in Visual Studio 20xx . When you press Ctr + F7 Visual Studio start compiling the whole solution ( suppose we have just one project in the solution )\nWhat\'s the meaning of compilation ?\n\nVisual Studio search into file .vcxproj and start compiling each file which has the extansion .cpp . Order of compilation is undefined.So you must not assume that the file main.cpp is compiled first\nIf .cpp files depends on   additional .h files  in order to find symbols\nthat may or may not be defined in the file .cpp\nIf exists one .cpp file in which the compiler could not find one symbol,a compiler time error raises with the message Symbol x could not be found\nFor each file with extension .cpp is generated an object file .o and also Visual Studio writes the output in a file named ProjectName.Cpp.Clean.txt which contains all object files that must be processed by linker.\n\nThe Second step of compilation is done by Linker.Linker should merge all the object file and build finally the output ( which may be an executable or a library)\nSteps In Linking a project \n\nParse all the object files and find the definition which was only declared in headers ( eg : The code of one method of a class as is mentioned in previous answers,or event the initialization of a static variable which is member inside a class)\nIf one symbol could not be found in object files he also is searched in Additional Libraries.For adding a new library to a project Configuration properties -> VC++ Directories  -> Library Directories and here you specified additional folder for searching libraries and Configuration properties -> Linker -> Input for specifying the name of the library. \n-If the Linker could not find the symbol which you write in one .cpp he raises an linker time error which may sounds like \nerror LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n\nObservation\n\nOnce the Linker find one symbol he doesn\'t search in other libraries for it\nThe order of linking libraries does matter.\nIf Linker find an external symbol in one static library he includes the symbol in output of the project.However if the library is shared( dynamic ) he doesn\'t includes the code ( symbols ) in output, but  Run-Time crashes may occur\n\nHow To Solve this kind of error\nCompiler Time Error : \n\nMake sure you write your c++ project syntactical correct.\n\nLinker Time Error\n\nDefine all your symbol which you declare in your header files\nUse #pragma once for allowing compiler not to include one header if it was already included by the current .cpp which is compiled\nMake sure that your external library doesn\'t contains symbols that may enter in conflict with other symbols you defined in your header files\nWhen you use template make sure you include the definition of each template function in header file for allowing the compiler to generate appropriate code for any instantiations .  \n\n', u"\nA wrapper around GNU ld that doesn't support linker scripts\nSome .so files are actually GNU ld linker scripts, e.g. libtbb.so file is an ASCII text file with this contents:\nINPUT (libtbb.so.2)\n\nSome more complex builds may not support this. For example, if you include -v in the compiler options, you can see that the mainwin gcc wrapper mwdip discards linker script command files in the verbose output list of libraries to link in. A simple work around is to replace the linker script input command file with a copy of the file instead (or a symlink), e.g.\ncp libtbb.so.2 libtbb.so\n\nOr you could replace the -l argument with the full path of the .so, e.g. instead of -ltbb do /home/foo/tbb-4.3/linux/lib/intel64/gcc4.4/libtbb.so.2\n", u'\nUse the linker to help diagnose the error\nMost modern linkers include a verbose option that prints out to varying degrees;\n\nLink invocation (command line),\nData on what libraries are included in the link stage,\nThe location of the libraries,\nSearch paths used.\n\nFor gcc and clang; you would typically add -v -Wl,--verbose or -v -Wl,-v to the command line. More details can be found here;\n\nLinux ld man page.\nLLVM linker page.\n"An introduction to GCC" chapter 9.\n\nFor MSVC, /VERBOSE (in particular /VERBOSE:LIB) is added to the link command line.\n\nThe MSDN page on the /VERBOSE linker option.\n\n', u'\nSince people seem to be directed to this question when it comes to linker errors I am going to add this here.\nOne possible reason for linker errors with GCC 5.2.0 is that a new libstdc++ library ABI is now chosen by default.\n\nIf you get linker errors about undefined references to symbols that involve types in the std::__cxx11 namespace or the tag [abi:cxx11] then it probably indicates that you are trying to link together object files that were compiled with different values for the _GLIBCXX_USE_CXX11_ABI macro. This commonly happens when linking to a third-party library that was compiled with an older version of GCC. If the third-party library cannot be rebuilt with the new ABI then you will need to recompile your code with the old ABI.\n\nSo if you suddenly get linker errors when switching to a GCC after 5.1.0 this would be a thing to check out.\n', u'\nClean and rebuild\nA "clean" of the build can remove the "dead wood" that may be left lying around from previous builds, failed builds, incomplete builds and other build system related build issues.\nIn general the IDE or build will include some form of "clean" function, but this may not be correctly configured (e.g. in a manual makefile) or may fail (e.g. the intermediate or resultant binaries are read-only).\nOnce the "clean" has completed, verify that the "clean" has succeeded and all the generated intermediate file (e.g. an automated makefile) have been successfully removed.\nThis process can be seen as a final resort, but is often a good first step; especially if the code related to the error has recently been added (either locally or from the source repository).\n', u'\nBefriending templates...\nGiven the code snippet of a template type with a friend operator (or function);\ntemplate <typename T>\nclass Foo {\n    friend std::ostream& operator<< (std::ostream& os, const Foo<T>& a);\n};\n\nThe operator<< is being declared as a non-template function. For every type T used with Foo, there needs to be a non-templated operator<<. For example, if there is a type Foo<int> declared, then there must be an operator implementation as follows;\nstd::ostream& operator<< (std::ostream& os, const Foo<int>& a) {/*...*/}\n\nSince it is not implemented, the linker fails to find it and results in the error.\nTo correct this, you can declare a template operator before the Foo type and then declare as a friend, the appropriate instantiation. The syntax is a little awkward, but is looks as follows;\n// forward declare the Foo\ntemplate <typename>\nclass Foo;\n\n// forward declare the operator <<\ntemplate <typename T>\nstd::ostream& operator<<(std::ostream&, const Foo<T>&);\n\ntemplate <typename T>\nclass Foo {\n    friend std::ostream& operator<< <>(std::ostream& os, const Foo<T>& a);\n    // note the required <>        ^^^^\n    // ...\n};\n\ntemplate <typename T>\nstd::ostream& operator<<(std::ostream&, const Foo<T>&)\n{\n  // ... implement the operator\n}\n\nThe above code limits the friendship of the operator to the corresponding instantiation of Foo, i.e. the operator<< <int> instantiation is limited to access the private members of the instantiation of Foo<int>.\nAlternatives include allowing the friendship to extend to all instantiations of the templates;\ntemplate <typename T>\nclass Foo {\n    template <typename T1>\n    friend std::ostream& operator<<(std::ostream& os, const Foo<T1>& a);\n    // ...\n};\n\nThe implementation for the operator<< could then be done inline inside the class definition, or outside.\ntemplate <typename T>\nclass Foo {\n    friend std::ostream& operator<<(std::ostream& os, const Foo& a)\n    { /*...*/ }\n    // ...\n};\n\nNote, when the declaration of the operator (or function) only appears in the class, the name is not available for "normal" lookup, only for argument dependent lookup, from cppreference;\n\nA name first declared in a friend declaration within class or class template X becomes a member of the innermost enclosing namespace of X, but is not accessible for lookup (except argument-dependent lookup that considers X) unless a matching declaration at the namespace scope is provided...\n\nThere is further reading on template friends at cppreference and the C++ FAQ.\nCode listing showing the techniques above.\n\nAs a side note to the failing code sample; g++ warns about this as follows\n\nwarning: friend declaration \'std::ostream& operator<<(...)\' declares a non-template function [-Wnon-template-friend]\nnote: (if this is not what you intended, make sure the function template has already been declared and add <> after the function name here) \n\n', u'\nInconsistent UNICODE definitions\nA Windows UNICODE build is built with TCHAR etc. being defined as wchar_t etc. When not building with UNICODE defined as build with TCHAR defined as char etc. These UNICODE and _UNICODE defines affect all the "T" string types; LPTSTR, LPCTSTR and their elk.\nBuilding one library with UNICODE defined and attempting to link it in a project where UNICODE is not defined will result in linker errors since there will be a mismatch in the definition of TCHAR; char vs. wchar_t.\nThe error usually includes a function a value with a char or wchar_t derived type, these could include std::basic_string<> etc. as well. When browsing through the affect function in the code, there will be a reference to TCHAR or std::basic_string<TCHAR> etc. This is a tell-tale sign that the code was originally intended for both a UNICODE and a Multi-Byte Character (or "narrow") build.\nTo correct this, build all the required libraries and projects with a consistent definition of UNICODE (and _UNICODE).\n\nThis can be done with either;\n#define UNICODE\n#define _UNICODE\n\nOr in the project settings;\n\nProject Properties > General > Project Defaults > Character Set\n\nOr on the command line;\n/DUNICODE /D_UNICODE\n\n\nThe alternative is applicable as well, if UNICODE is not intended to be used, make sure the defines are not set, and/or the multi-character setting is used in the projects and consistently applied.\nDo not forget to be consistent between the "Release" and "Debug" builds as well.\n']
New answer:
[u'\nCompiling a C++ program takes place in several steps, as specified by 2.2 (credits to Keith Thompson for the reference):\n\nThe precedence among the syntax rules of translation is specified by the following phases [see footnote].\n\nPhysical source file characters are mapped, in an implementation-defined manner, to the basic source character set\n  (introducing new-line characters for end-of-line indicators) if\n  necessary. [SNIP]\nEach instance of a backslash character (\\) immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. [SNIP]\nThe source file is decomposed into preprocessing tokens (2.5) and sequences of white-space characters (including comments). [SNIP]\nPreprocessing directives are executed, macro invocations are expanded, and _Pragma unary operator expressions are executed. [SNIP]\nEach source character set member in a character literal or a string literal, as well as each escape sequence and universal-character-name\n  in a character literal or a non-raw string literal, is converted to\n  the corresponding member of the execution character set; [SNIP]\nAdjacent string literal tokens are concatenated.\nWhite-space characters separating tokens are no longer significant. Each preprocessing token is converted into a token. (2.7). The\n  resulting tokens are syntactically and semantically analyzed and\n  translated as a translation unit. [SNIP]\nTranslated translation units and instantiation units are combined as follows: [SNIP]\nAll external entity references are resolved. Library components are linked to satisfy external references to entities not defined in the\n  current translation. All such translator output is collected into a\n  program image which contains information needed for execution in its\n  execution environment. (emphasis mine)\n\n[footnote] Implementations must behave as if these separate phases occur, although in practice different phases might be folded together.\n\nThe specified errors occur during this last stage of compilation, most commonly referred to as linking. It basically means that you compiled a bunch of implementation files into object files or libraries and now you want to get them to work together.\nSay you defined symbol a in a.cpp. Now, b.cpp declared that symbol and used it. Before linking, it simply assumes that that symbol was defined somewhere, but it doesn\'t yet care where. The linking phase is responsible for finding the symbol and correctly linking it to b.cpp (well, actually to the object or library that uses it).\nIf you\'re using MSVS, you\'ll see that projects generate .lib files. These contain a table of exported symbols, and a table of imported symbols. The imported symbols are resolved against the libraries you link against, and the exported symbols are provided for the libraries that use that .lib (if any).\nSimilar mechanism exist for other compilers/platforms.\nCommon error messages are error LNK2001, error LNK1120, error LNK2019 for MSVS and undefined reference to symbolName for gcc.\nThe code:\nstruct X\n{\n   virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nstruct A\n{\n   virtual ~A() = 0;\n};\nstruct B: A\n{\n   virtual ~B(){}\n};\nextern int x;\nvoid foo();\nint main()\n{\n   x = 0;\n   foo();\n   Y y;\n   B b;\n}\n\nwould generate the following errors with gcc:\n/home/AbiSfw/ccvvuHoX.o: In function `main\':\nprog.cpp:(.text+0x10): undefined reference to `x\'\nprog.cpp:(.text+0x19): undefined reference to `foo()\'\nprog.cpp:(.text+0x2d): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD1Ev[B::~B()]+0xb): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o: In function `B::~B()\':\nprog.cpp:(.text._ZN1BD0Ev[B::~B()]+0x12): undefined reference to `A::~A()\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1Y[typeinfo for Y]+0x8): undefined reference to `typeinfo for X\'\n/home/AbiSfw/ccvvuHoX.o:(.rodata._ZTI1B[typeinfo for B]+0x8): undefined reference to `typeinfo for A\'\ncollect2: ld returned 1 exit status\n\nand similar errors with MSVS:\n1>test2.obj : error LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n1>test2.obj : error LNK2001: unresolved external symbol "int x" (?x@@3HA)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual __thiscall A::~A(void)" (??1A@@UAE@XZ)\n1>test2.obj : error LNK2001: unresolved external symbol "public: virtual void __thiscall X::foo(void)" (?foo@X@@UAEXXZ)\n1>...\\test2.exe : fatal error LNK1120: 4 unresolved externals\n\nCommon causes include:\n\nFailure to link against appropriate libraries/object files or compile implementation files\nDeclared and undefined variable or function.\nCommon issues with class-type members\nTemplate implementations not visible.\nSymbols were defined in a C program and used in C++ code.\nIncorrectly importing/exporting methods/classes across modules/dll. (MSVS specific)\nCircular library dependency\nundefined reference to `WinMain@16\'\nInterdependent library order\nMultiple source files of the same name\nMistyping or not including the .lib extension when using the #pragma (MSVC)\nProblems with template friends\nInconsistent UNICODE definitions\n\n', u'\nClass members:\nA pure virtual destructor needs an implementation.\nDeclaring a destructor pure still requires you to define it (unlike a regular function):\nstruct X\n{\n    virtual ~X() = 0;\n};\nstruct Y : X\n{\n    ~Y() {}\n};\nint main()\n{\n    Y y;\n}\n//X::~X(){} //uncomment this line for successful definition\n\nThis happens because base class destructors are called when the object is destroyed implicitly, so a definition is required.    \nvirtual methods must either be implemented or defined as pure.\nThis is similar to non-virtual methods with no definition, with the added reasoning that \nthe pure declaration generates a dummy vtable and you might get the linker error without using the function:\nstruct X\n{\n    virtual void foo();\n};\nstruct Y : X\n{\n   void foo() {}\n};\nint main()\n{\n   Y y; //linker error although there was no call to X::foo\n}\n\nFor this to work, declare X::foo() as pure:\nstruct X\n{\n    virtual void foo() = 0;\n};\n\nNon-virtual class members\nSome members need to be defined even if not used explicitly:\nstruct A\n{ \n    ~A();\n};\n\nThe following would yield the error:\nA a;      //destructor undefined\n\nThe implementation can be inline, in the class definition itself:\nstruct A\n{ \n    ~A() {}\n};\n\nor outside:\nA::~A() {}\n\nIf the implementation is outside the class definition, but in a header, the methods have to be marked as inline to prevent a multiple definition.\nAll used member methods need to be defined if used.\nA common mistake is forgetting to qualify the name:\nstruct A\n{\n   void foo();\n};\n\nvoid foo() {}\n\nint main()\n{\n   A a;\n   a.foo();\n}\n\nThe definition should be\nvoid A::foo() {}\n\nstatic data members must be defined outside the class in a single translation unit:\nstruct X\n{\n    static int x;\n};\nint main()\n{\n    int x = X::x;\n}\n//int X::x; //uncomment this line to define X::x\n\nAn initializer can be provided for a static const data member of integral or enumeration type within the class definition; however, odr-use of this member will still require a namespace scope definition as described above. C++11 allows initialization inside the class for all static const data members.\n', u"\nDeclared but did not define a variable or function.\nA typical variable declaration is\nextern int x;\n\nAs this is only a declaration, a single definition is needed. A corresponding definition would be:\nint x;\n\nFor example, the following would generate an error:\nextern int x;\nint main()\n{\n    x = 0;\n}\n//int x; // uncomment this line for successful definition\n\nSimilar remarks apply to functions. Declaring a function without defining it leads to the error:\nvoid foo(); // declaration only\nint main()\n{\n   foo();\n}\n//void foo() {} //uncomment this line for successful definition\n\nBe careful that the function you implement exactly matches the one you declared. For example, you may have mismatched cv-qualifiers:\nvoid foo(int& x);\nint main()\n{\n   int x;\n   foo(x);\n}\nvoid foo(const int& x) {} //different function, doesn't provide a definition\n                          //for void foo(int& x)\n\nOther examples of mismatches include\n\nFunction/variable declared in one namespace, defined in another.\nFunction/variable declared as class member, defined as global (or vice versa).\nFunction return type, parameter number and types, and calling convention do not all exactly agree.\n\nThe error message from the compiler will often give you the full declaration of the variable or function that was declared but never defined. Compare it closely to the definition you provided. Make sure every detail matches.\n", u'\nFailure to link against appropriate libraries/object files or compile implementation files\nCommonly, each translation unit will generate an object file that contains the definitions of the symbols defined in that translation unit. \nTo use those symbols, you have to link against those object files.\nUnder gcc you would specify all object files that are to be linked together in the command line, or compile the implementation files together.\ng++ -o test objectFile1.o objectFile2.o -lLibraryName\n\nFor XCode:  Add the User Header Search Paths -> add the Library Search Path -> drag and drop the actual library reference into the project folder.\nUnder MSVS, files added to a project automatically have their object files linked together and a lib file would be generated (in common usage). To use the symbols in a separate project, you\'d \nneed to include the lib files in the project settings. This is done in the Linker section of the project properties, in Input -> Additional Dependencies. (the path to the lib file should be\nadded in Linker -> General -> Additional Library Directories) When using a third-party library that is provided with a lib file, failure to do so usually results in the error.\nIt can also happen that you forget to add the file to the compilation, in which case the object file won\'t be generated. In gcc you\'d add the files to the command line. In MSVS adding the file to the project will make it compile it automatically (albeit files can, manually, be individually excluded from the build).\nIn Windows programming, the tell-tale sign that you did not link a necessary library is that the name of the unresolved symbol begins with __imp_. Look up the name of the function in the documentation, and it should say which library you need to use. For example, MSDN puts the information in a box at the bottom of each function in a section called "Library".\n', u'\nSymbols were defined in a C program and used in C++ code.\nThe function (or variable) void foo() was defined in a C program and you attempt to use it in a C++ program:\nvoid foo();\nint main()\n{\n    foo();\n}\n\nThe C++ linker expects names to be mangled, so you have to declare the function as:\nextern "C" void foo();\nint main()\n{\n    foo();\n}\n\nEquivalently, instead of being defined in a C program, the function (or variable) void foo() was defined in C++ but with C linkage:\nextern "C" void foo();\n\nand you attempt to use it in a C++ program with C++ linkage.\nIf an entire library is included in a header file (and was compiled as C code); the include will need to be as follows;\nextern "C" {\n    #include "cheader.h"\n}\n\n', u"\nTemplate implementations not visible.\nUnspecialized templates must have their definitions visible to all translation units that use them. That means you can't separate the definition of a template\nto an implementation file. If you must separate the implementation, the usual workaround is to have an impl file which you include at the end of the header that\ndeclares the template. A common situation is:\ntemplate<class T>\nstruct X\n{\n    void foo();\n};\n\nint main()\n{\n    X<int> x;\n    x.foo();\n}\n\n//differentImplementationFile.cpp\ntemplate<class T>\nvoid X<T>::foo()\n{\n}\n\nTo fix this, you must move the definition of X::foo to the header file or some place visible to the translation unit that uses it.\nSpecialized templates can be implemented in an implementation file and the implementation doesn't have to be visible, but the specialization must be previously declared.\nFor further explanation and another possible solution (explicit instantiation) see this question and answer.\n", u'\nIncorrectly importing/exporting methods/classes across modules/dll (compiler specific).\nMSVS requires you to specify which symbols to export and import using __declspec(dllexport) and __declspec(dllimport).\nThis dual functionality is usually obtained through the use of a macro:\n#ifdef THIS_MODULE\n#define DLLIMPEXP __declspec(dllexport)\n#else\n#define DLLIMPEXP __declspec(dllimport)\n#endif\n\nThe macro THIS_MODULE would only be defined in the module that exports the function. That way, the declaration:\nDLLIMPEXP void foo();\n\nexpands to\n__declspec(dllexport) void foo();\n\nand tells the compiler to export the function, as the current module contains its definition. When including the declaration in a different module, it would expand to   \n__declspec(dllimport) void foo();\n\nand tells the compiler that the definition is in one of the libraries you linked against (also see 1)). \nYou can similary import/export classes:\nclass DLLIMPEXP X\n{\n};\n\n', u"\nIf all else fails, recompile.\nI was recently able to get rid of an unresolved external error in Visual Studio 2012 just by recompiling the offending file. When I re-built, the error went away. \nThis usually happens when two (or more) libraries have a cyclic dependency. Library A attempts to use symbols in B.lib and library B attempts to use symbols from A.lib. Neither exist to start off with. When you attempt to compile A, the link step will fail because it can't find B.lib. A.lib will be generated, but no dll. You then compile B, which will succeed and generate B.lib. Re-compiling A will now work because B.lib is now found.\n", u'\nThe order in which interdependent linked libraries are specified is wrong.\nThe order in which libraries are linked DOES matter if the libraries depend on each other. In general, if library A depends on library B, then libA MUST appear before libB in the linker flags.\nFor example:\n// B.h\n#ifndef B_H\n#define B_H\n\nstruct B {\n    B(int);\n    int x;\n};\n\n#endif\n\n// B.cpp\n#include "B.h"\nB::B(int xx) : x(xx) {}\n\n// A.h\n#include "B.h"\n\nstruct A {\n    A(int x);\n    B b;\n};\n\n// A.cpp\n#include "A.h"\n\nA::A(int x) : b(x) {}\n\n// main.cpp\n#include "A.h"\n\nint main() {\n    A a(5);\n    return 0;\n};\n\nCreate the libraries:\n$ g++ -c A.cpp\n$ g++ -c B.cpp\n$ ar rvs libA.a A.o \nar: creating libA.a\na - A.o\n$ ar rvs libB.a B.o \nar: creating libB.a\na - B.o\n\nCompile:\n$ g++ main.cpp -L. -lB -lA\n./libA.a(A.o): In function `A::A(int)\':\nA.cpp:(.text+0x1c): undefined reference to `B::B(int)\'\ncollect2: error: ld returned 1 exit status\n$ g++ main.cpp -L. -lA -lB\n$ ./a.out\n\nSo to repeat again, the order DOES matter!\n', u'\nwhat is an "undefined reference/unresolved external symbol"\nI\'ll try to explain what is an "undefined reference/unresolved external symbol".\n\nnote: i use g++ and Linux and all examples is for it \n\nFor example we have a code\n// src1.cpp\nvoid print();\n\nstatic int local_var_name; // \'static\' makes variable not visible for other modules\nint global_var_name = 123;\n\nint main()\n{\n    print();\n    return 0;\n}\n\nand\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\n//extern int local_var_name;\n\nvoid print ()\n{\n    // printf("%d%d\\n", global_var_name, local_var_name);\n    printf("%d\\n", global_var_name);\n}\n\nMake object files\n$ g++ -c src1.cpp -o src1.o\n$ g++ -c src2.cpp -o src2.o\n\nAfter assembler phase we have an object file, which contains any symbols to export. \nLook at the symbols\n$ readelf --symbols src1.o\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n     5: 0000000000000000     4 OBJECT  LOCAL  DEFAULT    4 _ZL14local_var_name # [1]\n     9: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 global_var_name     # [2]\n\nI\'ve rejected some lines from output, because they are not matter\nSo, we see follow symbols to export.\n[1] - this is our static (local) variable (important - Bind has a type "LOCAL")\n[2] - this is our global variable\n\nsrc2.cpp exports nothing and we have seen no its symbols\nLink our object files\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog\n123\n\nLinker sees exported sysmbols and links it. Now we try to uncomment lines in src2.cpp like here\n// src2.cpp\nextern "C" int printf (const char*, ...);\n\nextern int global_var_name;\nextern int local_var_name;\n\nvoid print ()\n{\n    printf("%d%d\\n", global_var_name, local_var_name);\n}\n\nand rebuild an object file\n$ g++ -c src2.cpp -o src2.o\n\nOK (no errors), because we only build object file, linking is not done yet.\nTry to link\n$ g++ src1.o src2.o -o prog\nsrc2.o: In function `print()\':\nsrc2.cpp:(.text+0x6): undefined reference to `local_var_name\'\ncollect2: error: ld returned 1 exit status\n\nIt is happened because our local_var_name is static, i.e. it is not visible for other modules. \nNow more deeply. Get translation phase output\n$ g++ -S src1.cpp -o src1.s\n\n// src1.s\nlook src1.s\n\n    .file   "src1.cpp"\n    .local  _ZL14local_var_name\n    .comm   _ZL14local_var_name,4,4\n    .globl  global_var_name\n    .data\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; assembler code, not interesting for us\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"\n    .section    .note.GNU-stack,"",@progbits\n\nSo, we\'ve seen there is no label for local_var_name, that\'s why linker not found it. But we are hackers :) and we can fix it. Open src1.s in your texteditor and change\n.local  _ZL14local_var_name\n.comm   _ZL14local_var_name,4,4\n\nto \n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n\ni.e. you should have like bellow\n    .file   "src1.cpp"\n    .globl  local_var_name\n    .data\n    .align 4\n    .type   local_var_name, @object\n    .size   local_var_name, 4\nlocal_var_name:\n    .long   456789\n    .globl  global_var_name\n    .align 4\n    .type   global_var_name, @object\n    .size   global_var_name, 4\nglobal_var_name:\n    .long   123\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n; ...\n\nwe have changed visibility of local_var_name and set its value to 456789\nTry to build an object file from it\n$ g++ -c src1.s -o src2.o\n\nok, see readelf output (symbols)\n$ readelf --symbols src1.o\n8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 local_var_name\n\nnow local_var_name has Bind GLOBAL (was LOCAL)\nlink\n$ g++ src1.o src2.o -o prog\n\nand run it\n$ ./prog \n123456789\n\nok, we hack it :)\nSo, as result - an "undefined reference/unresolved external symbol error" happens when linker cannot find global symbols in object files.\n', u"\nundefined reference to WinMain@16 or similar 'unusual' main() entry point reference (especially for visual-studio).\nYou may have missed to choose the right project type with your actual IDE. The IDE may want to bind e.g. Windows Application projects to such entry point function (as specified in the missing reference above), instead of the commonly used int main(int argc, char** argv); signature.\nIf your IDE supports Plain Console Projects you might want to choose this project type, instead of a windows application project.\n", u'\nThis is one of most confusion error messages that every VC++ programmers have seen time and time again. Let\u2019s make things clarity first.\nA. What is symbol?\nIn short, a symbol is a name. It can be a variable name, a function name, a class name, a typedef name, or anything except those names and signs that belong to C++ language. It is user defined or introduced by a dependency library (another user defined).\nB. What is external?\nIn VC++, every source file (.cpp,.c,etc.) is considered as a translation unit, the compiler compiles one unit at a time, and generate one object file(.obj) for current translation unit. (Note that every header file that this source file included will be preprocessed and will be considered as part of this translation unit)Everything within a translation unit is considered as internal, everything else is considered as external. In C++, you may reference an external symbol by using keywords like: extern, __declspec (dllimport) and so on.\nC. What is \u201cresolve\u201d?\nResolve is a linking-time term. In linking-time, linker attempts to find the external definition for every symbol in object files that cannot find its definition internally. The scope of this searching process including:\n\nAll object files that generated in compiling time\nAll libraries (.lib) that is either explicitly or implicitly\nspecified as additional dependencies of this building application.\n\nThis searching process is called resolve.\nD. Finally, why Unresolved External Symbol?\nIf the linker cannot find the external definition for a symbol that has no definition internally, it reports an Unresolved External Symbol error.\nE. Possible causes of LNK2019: Unresolved External Symbol error.\nWe already know that this error is due to the linker failed to find the definition of external symbols, the possible causes can be sorted as:\n\nDefinition exists\n\nFor example, if we have a function called foo defined in a.cpp:\nint foo()\n{\n    return 0;\n}\n\nIn b.cpp we want to call function foo, so we add\nvoid foo();\n\nto declare function foo(), and call it in another function body, say bar():\nvoid bar()\n{\n    foo();\n}\n\nNow when you build this code you will get a LNK2019 error complaining that foo is unresolved symbol. In this case, we know that foo() has its definition in a.cpp, but different from the one we are calling(different return value). This is the case that definition exists.\n\nDefinition does not exist\n\nIf we want to call some functions in a library, but the import library is not added into the additional dependency list (set from: Project | Properties | Configuration Properties | Linker | Input | Additional Dependency) of your project setting. Now the linker will report a LNK2019 since the definition is not exist in current searching scope.\n', u"\nAlso if you're using 3rd party libraries make sure you have the correct 32/64 bit binaries\n", u'\nMicrosoft offers a #pragma to reference the correct library at link time;\n#pragma comment(lib, "libname.lib")\n\nIn addition to the library path including the directory of the library, this should be the full name of the library.\n', u"\nVisual Studio NuGet package needs to be updated for new toolset version\nI just had this problem trying to link libpng with Visual Studio 2013.  The problem is that the package file only had libraries for Visual Studio 2010 and 2012.\nThe correct solution is to hope the developer releases an updated package and then upgrade, but it worked for me by hacking in an extra setting for VS2013, pointing at the VS2012 library files.\nI edited the package (in the packages folder inside the solution's directory) by finding packagename\\build\\native\\packagename.targets and inside that file, copying all the v110 sections.  I changed the v110 to v120 in the condition fields only being very careful to leave the filename paths all as v110.  This simply allowed Visual Studio 2013 to link to the libraries for 2012, and in this case, it worked.\n", u'\nA bug in the compiler/IDE\nI recently had this problem, and it turned out it was a bug in Visual Studio Express 2013. I had to remove a source file from the project and re-add it to overcome the bug.\nSteps to try if you believe it could be a bug in compiler/IDE:\n\nClean the project (some IDEs have an option to do this, you can also\nmanually do it by deleting the object files)\nTry start a new project,\ncopying all source code from the original one.\n\n', u"\nLinked .lib file is associated to a .dll\nI had the same issue. Say i have projects MyProject and TestProject. I had effectively linked the lib file for MyProject to the TestProject. However, this lib file was produced as the DLL for the MyProject was built. Also, I did not contain source code for all methods in the MyProject, but only access to the DLL's entry points. \nTo solve the issue, i built the MyProject as a LIB, and linked TestProject to this .lib file (i copy paste the generated .lib file into the TestProject folder). I can then build again MyProject as a DLL. It is compiling since the lib to which TestProject is linked does contain code for all methods in classes in MyProject. \n", u'\nSuppose you have a big project written in c++ which has a thousand of .cpp files  and a thousand of .h files.And let\'s says the project also depends on ten static libraries . Let\'s says we are on Windows and we build our project in Visual Studio 20xx . When you press Ctr + F7 Visual Studio start compiling the whole solution ( suppose we have just one project in the solution )\nWhat\'s the meaning of compilation ?\n\nVisual Studio search into file .vcxproj and start compiling each file which has the extansion .cpp . Order of compilation is undefined.So you must not assume that the file main.cpp is compiled first\nIf .cpp files depends on   additional .h files  in order to find symbols\nthat may or may not be defined in the file .cpp\nIf exists one .cpp file in which the compiler could not find one symbol,a compiler time error raises with the message Symbol x could not be found\nFor each file with extension .cpp is generated an object file .o and also Visual Studio writes the output in a file named ProjectName.Cpp.Clean.txt which contains all object files that must be processed by linker.\n\nThe Second step of compilation is done by Linker.Linker should merge all the object file and build finally the output ( which may be an executable or a library)\nSteps In Linking a project \n\nParse all the object files and find the definition which was only declared in headers ( eg : The code of one method of a class as is mentioned in previous answers,or event the initialization of a static variable which is member inside a class)\nIf one symbol could not be found in object files he also is searched in Additional Libraries.For adding a new library to a project Configuration properties -> VC++ Directories  -> Library Directories and here you specified additional folder for searching libraries and Configuration properties -> Linker -> Input for specifying the name of the library. \n-If the Linker could not find the symbol which you write in one .cpp he raises an linker time error which may sounds like \nerror LNK2001: unresolved external symbol "void __cdecl foo(void)" (?foo@@YAXXZ)\n\nObservation\n\nOnce the Linker find one symbol he doesn\'t search in other libraries for it\nThe order of linking libraries does matter.\nIf Linker find an external symbol in one static library he includes the symbol in output of the project.However if the library is shared( dynamic ) he doesn\'t includes the code ( symbols ) in output, but  Run-Time crashes may occur\n\nHow To Solve this kind of error\nCompiler Time Error : \n\nMake sure you write your c++ project syntactical correct.\n\nLinker Time Error\n\nDefine all your symbol which you declare in your header files\nUse #pragma once for allowing compiler not to include one header if it was already included by the current .cpp which is compiled\nMake sure that your external library doesn\'t contains symbols that may enter in conflict with other symbols you defined in your header files\nWhen you use template make sure you include the definition of each template function in header file for allowing the compiler to generate appropriate code for any instantiations .  \n\n', u"\nA wrapper around GNU ld that doesn't support linker scripts\nSome .so files are actually GNU ld linker scripts, e.g. libtbb.so file is an ASCII text file with this contents:\nINPUT (libtbb.so.2)\n\nSome more complex builds may not support this. For example, if you include -v in the compiler options, you can see that the mainwin gcc wrapper mwdip discards linker script command files in the verbose output list of libraries to link in. A simple work around is to replace the linker script input command file with a copy of the file instead (or a symlink), e.g.\ncp libtbb.so.2 libtbb.so\n\nOr you could replace the -l argument with the full path of the .so, e.g. instead of -ltbb do /home/foo/tbb-4.3/linux/lib/intel64/gcc4.4/libtbb.so.2\n", u'\nUse the linker to help diagnose the error\nMost modern linkers include a verbose option that prints out to varying degrees;\n\nLink invocation (command line),\nData on what libraries are included in the link stage,\nThe location of the libraries,\nSearch paths used.\n\nFor gcc and clang; you would typically add -v -Wl,--verbose or -v -Wl,-v to the command line. More details can be found here;\n\nLinux ld man page.\nLLVM linker page.\n"An introduction to GCC" chapter 9.\n\nFor MSVC, /VERBOSE (in particular /VERBOSE:LIB) is added to the link command line.\n\nThe MSDN page on the /VERBOSE linker option.\n\n', u'\nSince people seem to be directed to this question when it comes to linker errors I am going to add this here.\nOne possible reason for linker errors with GCC 5.2.0 is that a new libstdc++ library ABI is now chosen by default.\n\nIf you get linker errors about undefined references to symbols that involve types in the std::__cxx11 namespace or the tag [abi:cxx11] then it probably indicates that you are trying to link together object files that were compiled with different values for the _GLIBCXX_USE_CXX11_ABI macro. This commonly happens when linking to a third-party library that was compiled with an older version of GCC. If the third-party library cannot be rebuilt with the new ABI then you will need to recompile your code with the old ABI.\n\nSo if you suddenly get linker errors when switching to a GCC after 5.1.0 this would be a thing to check out.\n', u'\nClean and rebuild\nA "clean" of the build can remove the "dead wood" that may be left lying around from previous builds, failed builds, incomplete builds and other build system related build issues.\nIn general the IDE or build will include some form of "clean" function, but this may not be correctly configured (e.g. in a manual makefile) or may fail (e.g. the intermediate or resultant binaries are read-only).\nOnce the "clean" has completed, verify that the "clean" has succeeded and all the generated intermediate file (e.g. an automated makefile) have been successfully removed.\nThis process can be seen as a final resort, but is often a good first step; especially if the code related to the error has recently been added (either locally or from the source repository).\n', u'\nBefriending templates...\nGiven the code snippet of a template type with a friend operator (or function);\ntemplate <typename T>\nclass Foo {\n    friend std::ostream& operator<< (std::ostream& os, const Foo<T>& a);\n};\n\nThe operator<< is being declared as a non-template function. For every type T used with Foo, there needs to be a non-templated operator<<. For example, if there is a type Foo<int> declared, then there must be an operator implementation as follows;\nstd::ostream& operator<< (std::ostream& os, const Foo<int>& a) {/*...*/}\n\nSince it is not implemented, the linker fails to find it and results in the error.\nTo correct this, you can declare a template operator before the Foo type and then declare as a friend, the appropriate instantiation. The syntax is a little awkward, but is looks as follows;\n// forward declare the Foo\ntemplate <typename>\nclass Foo;\n\n// forward declare the operator <<\ntemplate <typename T>\nstd::ostream& operator<<(std::ostream&, const Foo<T>&);\n\ntemplate <typename T>\nclass Foo {\n    friend std::ostream& operator<< <>(std::ostream& os, const Foo<T>& a);\n    // note the required <>        ^^^^\n    // ...\n};\n\ntemplate <typename T>\nstd::ostream& operator<<(std::ostream&, const Foo<T>&)\n{\n  // ... implement the operator\n}\n\nThe above code limits the friendship of the operator to the corresponding instantiation of Foo, i.e. the operator<< <int> instantiation is limited to access the private members of the instantiation of Foo<int>.\nAlternatives include allowing the friendship to extend to all instantiations of the templates;\ntemplate <typename T>\nclass Foo {\n    template <typename T1>\n    friend std::ostream& operator<<(std::ostream& os, const Foo<T1>& a);\n    // ...\n};\n\nThe implementation for the operator<< could then be done inline inside the class definition, or outside.\ntemplate <typename T>\nclass Foo {\n    friend std::ostream& operator<<(std::ostream& os, const Foo& a)\n    { /*...*/ }\n    // ...\n};\n\nNote, when the declaration of the operator (or function) only appears in the class, the name is not available for "normal" lookup, only for argument dependent lookup, from cppreference;\n\nA name first declared in a friend declaration within class or class template X becomes a member of the innermost enclosing namespace of X, but is not accessible for lookup (except argument-dependent lookup that considers X) unless a matching declaration at the namespace scope is provided...\n\nThere is further reading on template friends at cppreference and the C++ FAQ.\nCode listing showing the techniques above.\n\nAs a side note to the failing code sample; g++ warns about this as follows\n\nwarning: friend declaration \'std::ostream& operator<<(...)\' declares a non-template function [-Wnon-template-friend]\nnote: (if this is not what you intended, make sure the function template has already been declared and add <> after the function name here) \n\n', u'\nInconsistent UNICODE definitions\nA Windows UNICODE build is built with TCHAR etc. being defined as wchar_t etc. When not building with UNICODE defined as build with TCHAR defined as char etc. These UNICODE and _UNICODE defines affect all the "T" string types; LPTSTR, LPCTSTR and their elk.\nBuilding one library with UNICODE defined and attempting to link it in a project where UNICODE is not defined will result in linker errors since there will be a mismatch in the definition of TCHAR; char vs. wchar_t.\nThe error usually includes a function a value with a char or wchar_t derived type, these could include std::basic_string<> etc. as well. When browsing through the affect function in the code, there will be a reference to TCHAR or std::basic_string<TCHAR> etc. This is a tell-tale sign that the code was originally intended for both a UNICODE and a Multi-Byte Character (or "narrow") build.\nTo correct this, build all the required libraries and projects with a consistent definition of UNICODE (and _UNICODE).\n\nThis can be done with either;\n#define UNICODE\n#define _UNICODE\n\nOr in the project settings;\n\nProject Properties > General > Project Defaults > Character Set\n\nOr on the command line;\n/DUNICODE /D_UNICODE\n\n\nThe alternative is applicable as well, if UNICODE is not intended to be used, make sure the defines are not set, and/or the multi-character setting is used in the projects and consistently applied.\nDo not forget to be consistent between the "Release" and "Debug" builds as well.\n', u'\nGetting unmanaged/native C++/CLI class in a DLL into a unmanaged unit test in Visual Studio\nProblem\nI\'m using the MS directions "Unit testing native code with Test Explorer"\nFirst I create an unmanaged DLL using the templates.  That gives me:\nWin32Project1.h\n#ifdef WIN32PROJECT1_EXPORTS\n#define WIN32PROJECT1_API __declspec(dllexport)\n#else\n#define WIN32PROJECT1_API __declspec(dllimport)\n#endif\n\n// This class is exported from the Win32Project1.dll\nclass WIN32PROJECT1_API CWin32Project1 {\npublic:\n    CWin32Project1(void);\n\n    bool Foo();\n};\n\nextern WIN32PROJECT1_API int nWin32Project1;\n\nWIN32PROJECT1_API int fnWin32Project1(void);\n\nWin32Project1.cpp\n#include "stdafx.h"\n#include "Win32Project1.h"\n\n\n// This is an example of an exported variable\nWIN32PROJECT1_API int nWin32Project1=0;\n\n// This is an example of an exported function.\nWIN32PROJECT1_API int fnWin32Project1(void)\n{\n    return 42;\n}\n\n// This is the constructor of a class that has been exported.\n// see Win32Project1.h for the class definition\nCWin32Project1::CWin32Project1()\n{\n    return;\n}\n\nbool CWin32Project1::Foo() {return true;}\n\nThen I create an unmanaged unit test project from the templates and add a unit test.\nUnitTest1.cpp\n#include "stdafx.h"\n#include "CppUnitTest.h"\n#include "..\\Win32Project1\\Win32Project1.h"\n\nusing namespace Microsoft::VisualStudio::CppUnitTestFramework;\n\nnamespace UnitTest1\n{       \n    TEST_CLASS(UnitTest1)\n    {\n    public:\n\n        TEST_METHOD(TestMethod1)\n        {\n            auto bar = new CWin32Project1();\n            Assert::AreEqual(true, bar->Foo());\n        }\n\n    };\n}\n\nWhen I compile this, I get the errors:\n1>unittest1.obj : error LNK2019: unresolved external symbol "__declspec(dllimport) public: __thiscall CWin32Project1::CWin32Project1(void)" ... referenced in function "public: void __thiscall UnitTest1::UnitTest1::TestMethod1(void)" (?TestMethod1@UnitTest1@1@QAEXXZ)\n1>unittest1.obj : error LNK2019: unresolved external symbol "__declspec(dllimport) public: bool __thiscall CWin32Project1::Foo(void)" ... referenced in function "public: void __thiscall UnitTest1::UnitTest1::TestMethod1(void)"\n\nSolution\nUnitTest1.vcxproj needs the following changes:\n<AdditionalLibraryDirectories>$(SolutionDir)Debug;$(VCInstallDir)UnitTest\\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>\n<AdditionalDependencies>Win32Project1.lib;%(AdditionalDependencies)</AdditionalDependencies>\n\n']
Get a new question page!

The program is super-simple: managing a parking lot with super-simple actions such as adding a car and displaying its properties.
There are 2 types of cars: regular (R) and sportscar (S). S has an extra property of maximum speed. I want to to show cars' properties, such that only when the car is of type S it'll show its speed. But I can't make it happen, as it displays only the regular properties regardless of user input. Below are reduced definitions for the different classes:
car.h:
#ifndef CAR_H
#define CAR_H
#include <string>

using namespace std;

class car
{
    private:
        string name;
        float price;
        int volume;
        char type;
    public:
        void show() const;
        car(string,char,float,int) ;
        car() {} ;
    friend class carpark;
} ;

#endif // CAR_H

car.cpp:
#include <iostream>
#include "car.h"
#include <string>
using namespace std ;

void car::show() const
{
    cout << "Name:" << name << ", Type:" << type << ", Price:" << price << ", Engine Volume:" << volume << endl ;
}

scar.h:
#ifndef SCAR_H
#define SCAR_H
#include <string>
#include "car.h"

using namespace std;

class scar:public car
{
    private:
        int speed;
    public:
        void show() const;
        scar(string,char,float,int,int);
    friend class carpark;
} ;

#endif // SCAR_H

scar.cpp:
#include <iostream>
#include "scar.h"
#include <string>
using namespace std ;

void scar::show() const
{
    car::show();
    cout << " Speed:" << speed << endl ;
}

carpark.h:
#ifndef CARKPARK_H
#define CARKPARK_H
#include "car.h"
#include <string>

class carpark
{
    private:
        int N;
        car** cars;
        int occupancy ;

    public:
        carpark(int occupancy);
        ~carpark();
        bool add(car* new_car);
        bool add(string,char,float,int);
        bool add(string,char,float,int,int);
        void show() const;
        car* newest_car();
};

#endif // CARKPARK_H

carpark.cpp
#include "carpark.h"
#include "scar.h"

void carpark::show() const
{
    int i = 0;
    while(i < occupancy)
    {
        cars[i]->show();
        i++;
    }
}

And main:
#include "main.h"
#include "carpark.h"
#include <fstream>
#include <iostream>
#include <string>

carpark* park;

void add();
void newest_car();

void newest_car()
{
    park->newest_car()->show();
}

newest_car is one of the functions that use "show", and is simply called upon inside main at some point. What am I missing? Thanks.

New answer:
[u'\nYou need to make show a virtual member function. Otherwise, the call will be dispatched based purely on the pointer/object type.\nSince the return type of carpark::newest_car() is of type car*,\npark->newest_car()->show();\n\nends up calling car::show regardless of the actual car type.\nChange car to:\nclass car\n{\n    private:\n        string name;\n        float price;\n        int volume;\n        char type;\n    public:\n\n        /// Change here.\n        virtual void show() const;\n        // ^^^ add virtual\n\n        car(string,char,float,int) ;\n        car() {} ;\n    friend class carpark;\n} ;\n\n']
Get a new question page!

Would anyone be able to post a simple example of how to compile code which uses libfreenect2? After installing the library, the following structure is created in my home directory:
→ tree freenect2 
freenect2
├── include
│   └── libfreenect2
│       ├── config.h
│       ├── export.h
│       ├── frame_listener.hpp
│       ├── frame_listener_impl.h
│       ├── libfreenect2.hpp
│       ├── logger.h
│       ├── packet_pipeline.h
│       └── registration.h
└── lib
    ├── cmake
    │   └── freenect2
    │       └── freenect2Config.cmake
    ├── libfreenect2.so -> libfreenect2.so.0.2
    ├── libfreenect2.so.0.2 -> libfreenect2.so.0.2.0
    ├── libfreenect2.so.0.2.0
    └── pkgconfig
        └── freenect2.pc

I attempted to compile with the .pc file using a line similar to this found on the pkg-config wikipedia page:
gcc -o test test.c $(pkg-config --libs --cflags libpng)

But came with up with this error:
./test: error while loading shared libraries: libfreenect2.so.0.2: cannot open shared object file: No such file or directory

Obviously, I messed up the compilation process somewhere, but I'm not sure where to look since this is error occurs on runtime and not at compile time. There's also a .cmake file created with the library install, which I'm sure would lead to a more robust and proper solution, but I'm not entirely sure how to use that and haven't been able to find a simple guide showing how to do so. Any links to beginner-friendly documentation are also appreciated. In the documentation for libfreenect2, it says to use this line when compiling cmake -Dfreenect2_DIR=$HOME/freenect2/lib/cmake/freenect2 -- is this something that I'd have to use when making the library or when making my application?
Another tangentially related question, would it be better to move the /include and /lib directories to /usr/local/include and /usr/local/lib respectively? I believe that would "install" the library system-wide, but I imagine there's some reason that libfreenect2 doesn't do it automatically and I'm not sure what that is.

No answers for this question!
Get a new question page!

As part of my Algorithms course in collegue, we have to design a recursive function that generates all combinations of n-digits numbers.
This is an example:
Sample input: 

3

Sample output:

111
112
113
121
122
123
211
212
213
221
222
223
311
312
313
321
322
323
331
332
333

I would like to point out that I've already solved this problem, so that people won't comment that this is homework and I must do it on my own.
Anyway, here is my code in C++ :
void S6_1(int r, int n, int p, int d)
{
    if (d == 0)
        return;
    S6_1(r, n, p, d - 1);
    r = r * 10 + d;
    if (p == 1)
        cout << r << endl;
    else
        S6_1(r, n, p - 1, n);
}

void S6(int n)
{
    S6_1(0, n, n, n);
}

The main reason I post this is the fact that I strongly believe that there must be another way to solve this problem.
I really appreciate any help you can provide 

New answer:
[u'\nThink inductively: How do you separate the problem of generating all n-digit numbers with digits in [1..n] into a smaller instance of itself plus a little more work? Perhaps the most obvious is to tack all possible digits onto the front of all (n-1)-digit numbers that are recursively generated. I\'ll use C (but C++ is similar) to accumulate the numbers in a buffer one at a time.\n// In buf[i..n-1], enumerate all numbers having n-i digits with values in [1..n]. \nvoid print_all(char *buf, int i, int n) {\n  if (i == n) {               // Here n - i == 0, so we\'re done. Print.\n    printf("%.*s\\n", n, buf);\n    return;\n  }\n  for (int digit = 1; digit <= n; ++digit) {\n    buf[i] = digit + \'0\';     // put a digit at position i\n    print_all(buf, i + 1, n); // recursively put the rest\n  }\n}\n\nTo call it:\nchar buf[n];\nprint_all(buf, 0, n);\n\nIt\'s also fine to build the number in an int as you did. The code is a bit shorter, but it leaves the job of decomposing the int into a string to printf, so in a sense it\'s double work:\nvoid print_all(int b, int i, int n) {\n  if (i == n) {\n    printf("%d\\n", b);\n    return;\n  }\n  for (int digit = 1; digit <= n; ++digit) {\n    print_all(10 * b + digit, i + 1, n);\n  }\n}\n\nAnd to call it...\nprint_all(0, 0, n);\n\n']
Get a new question page!

I am trying to create a file called "Players" a simple a.txt file and the code I am using is as follows:-
int main()
{
    ofstream theFile("Players.txt");

    cout << " Enters players ID., Name and Money" << endl;
    cout << " press Ctrl+z to quit\n" << endl;

    int idNumber;
    string name;
    int money;

    while (cin >> idNumber **>>** name >>   money) {
                 //       ^^^^^^^^          this
        theFile << idNumber << " " **<<** name << " " << money << endl;
                 //               ^^^^^^^^  and this
        }
    system("pause");

    return 0;
}

on the 'while' line and 'theFile' line - the >> marked with **>>** keep throwing up an error "no operator '<<' & '>>' supports these operands" - have tried different combinations of syntax without success - the user inputs their idNumber, name, & money the purpose of the while loop is to allow the user to make as many entries as needed and then enters Ctrl+z  to close the file.

New answer:
[u'\nSeemingly the operators "<<" and ">>" do not support the operands "**" before and after.\n']
New answer:
[u'\nSeemingly the operators "<<" and ">>" do not support the operands "**" before and after.\n', u'\nThe above code compiles if you have the correct headers.\n#include <string>\n#include <iostream>\n#include <fstream>\n\nusing namespace std;\n\nint main()\n{\n..... etc.\n}\n\n']
Get a new question page!

Can you please suggest how I could possibly reduce the complexity of this code.Here is the code I wrote in c++.There might be an algorithm for this problem, but I want to improve my coding skills.Thanks.  
Here is the sequence that I am trying to generate. 
Eg:1, 11, 21, 1211, 111221, ...
1 is read off as "one 1" or 11.
11 is read off as "two 1s" or 21.
21 is read off as "one 2, then one 1" or 1211
Here the function countAndSay takes an integer or the nth number to be generated and returns a string showing the generated nth sequence. 
#include "string"
#include "iostream"
#include "unordered_map"
using namespace std;

string countAndSay(int n) {
if (n == 1)
    return "1";
int j;
string s = "1";
string temp = "";
unordered_map<char, int> dict;
for (int i = 1; i<n; i++) {
    for (j = 0; j<s.length(); ++j) {

        if (dict.find(s[j]) == dict.end() && j == 0)
            dict[s[j]] = 1;

        else if (dict.find(s[j]) == dict.end()) {
            temp += to_string(dict[s[j - 1]]);
            temp += s[j - 1];
            dict.clear();
            dict[s[j]] = 1;
        }
        else
            dict[s[j]] += 1;
    }

    temp += to_string(dict[s[j - 1]]);
    temp += s[j - 1];
    dict.clear();
    s = temp;
    temp = "";
}

return s;
}
int main()
{
String s=countAndSay(3);
cout<<s;
return 0;
}


New answer:
[u'\nread the number and store it in array or string. loop over this and check if current element is same as previous (0 index based, start from 1 and check arr[i] == arr[i-1]) then increase counter or else print the [i-1] element with counter and reset counter to 1. \n']
Get a new question page!

I am trying to access functions's return value address inside constructor. I have a pointer to class constructor, but whatever combination I try it gives me an error. With this example I think I got on the right track:
graphics.DrawLine(&p_CustomButton->frontPen, 1, 1, objWidth - 1, objWidth - 1);

I understand how pointers work, read lot about it and I am sure this is purely about syntax. I got error Compiler Error C2276 with example above, so I took a look here but when I tried whats recommended it is not working either:
graphics.DrawLine(&CustomButton::frontPen, 1, 1, objWidth - 1, objWidth - 1);

Now the error is:

Error C2664 'Gdiplus::Status Gdiplus::Graphics::DrawLine(const Gdiplus::Pen ,const Gdiplus::Point &,const Gdiplus::Point &)': cannot convert argument 1 from 'Gdiplus::Pen (__thiscall CustomButton:: )(void)' to 'const Gdiplus::Pen *'

First of all it should not be void since it is declared (I think), and second declaring it as const is not helping either. But I see that I am on the right track as compiler is no longer complaining about invalid syntax.
During my research I took a look here, here (here they advice the same as MSDN), here, here (I tried all possible combinations with brackets with little success) and many more pages and I could not get further than this (I also tried using '*' but it makes no sense to me as I am not trying to make another pointer).
I am new to C++ so please don't downvote me, I already spent more than 2 hours on this issue and I am trying to describe the problem as clearly as possible; if I do something wrong with posting problem like this please let me know, I will avoid it in my next post.
Full code:
#include <windows.h>
#include <commctrl.h>
#include <winuser.h>
#include <gdiplus.h>
#include <string.h>
#include "CustomButton.h"

CustomButton::CustomButton()
{
    width = 0;
    height = 0;
    type = 0;
    customButton = NULL;

    Gdiplus::SolidBrush frontBrush(Gdiplus::Color(255, 160, 160, 160)); // Create a Brush object.
    Gdiplus::Pen frontPen(&frontBrush, 1);
}

CustomButton::~CustomButton()
{
    if (customButton)
        DestroyWindow(customButton);
}

/*set-get functions*/
HWND CustomButton::getButton()
{
    return customButton;
}

void CustomButton::DrawRoundRect(HDC hdc, int X, int Y, int RectWidth, int RectHeight, int CornerRadius)
{
    Gdiplus::Graphics graphics(hdc);
    graphics.SetSmoothingMode(Gdiplus::SmoothingModeHighQuality);

    Gdiplus::GraphicsPath gfxPath;

    gfxPath.AddLine(X + CornerRadius, Y, X + RectWidth - (CornerRadius * 2), Y);
    gfxPath.AddArc(X + RectWidth - (CornerRadius * 2), Y, CornerRadius * 2, CornerRadius * 2, 270, 90);
    gfxPath.AddLine(X + RectWidth, Y + CornerRadius, X + RectWidth, Y + RectHeight - (CornerRadius * 2));
    gfxPath.AddArc(X + RectWidth - (CornerRadius * 2), Y + RectHeight - (CornerRadius * 2), CornerRadius * 2, CornerRadius * 2, 0, 90);
    gfxPath.AddLine(X + RectWidth - (CornerRadius * 2), Y + RectHeight, X + CornerRadius, Y + RectHeight);
    gfxPath.AddArc(X, Y + RectHeight - (CornerRadius * 2), CornerRadius * 2, CornerRadius * 2, 90, 90);
    gfxPath.AddLine(X, Y + RectHeight - (CornerRadius * 2), X, Y + CornerRadius);
    gfxPath.AddArc(X, Y, CornerRadius * 2, CornerRadius * 2, 180, 90);
    gfxPath.CloseFigure();

    graphics.DrawPath(&frontPen, &gfxPath);
    graphics.DrawPath(&frontPen, &gfxPath);
}

CustomButton* CustomButton::CreateCustomButton(HINSTANCE hInstance, HWND hwnd, int pos_x, int pos_y, int width, int height, int type)
{
    CustomButton * p_CustomButton = new CustomButton;

    p_CustomButton->customButton = CreateWindowEx(0, L"BUTTON", L"OK", WS_VISIBLE | WS_CHILD | BS_OWNERDRAW, pos_x, pos_y, width, height, hwnd, (HMENU)1, (HINSTANCE)GetWindowLong(hwnd, GWLP_HINSTANCE), p_CustomButton); //BS_OWNERDRAW allows BN_CLICKED to be registered and specifies that DRAWITEM will create mask for the button
    if (p_CustomButton->customButton == NULL)
    {
        delete p_CustomButton;
        MessageBox(NULL, L"Problem creating the Button.", L"Error", 0);
        return 0;
    }

    p_CustomButton->width = width;
    p_CustomButton->height = height;
    p_CustomButton->type = type;

    if (!SetWindowSubclass(p_CustomButton->customButton, CustomButton::CustomButtonProc, 0, (DWORD_PTR)p_CustomButton))
    {
        delete p_CustomButton;
        MessageBox(NULL, L"Problem subclassing the Button.", L"Error", 0);
        return 0;
    }

    return p_CustomButton;
}

LRESULT CALLBACK CustomButton::CustomButtonProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam, UINT_PTR uIdSubclass, DWORD_PTR dwRefData)
{
    CustomButton *p_CustomButton = (CustomButton*)dwRefData;
    switch (uMsg)
    {
        case WM_NCDESTROY:
        {
            RemoveWindowSubclass(hwnd, CustomButton::CustomButtonProc, uIdSubclass);
            p_CustomButton->customButton = NULL;
            break;
        }
        case 0x8000: //WM_DRAWITEM
        {
            LPDRAWITEMSTRUCT lpdis = (DRAWITEMSTRUCT*)lParam; //assigning drawing structure to the control
            /* drawing the classic windows button */
            SetBkColor(lpdis->hDC, RGB(18, 18, 18)); //background color for the text, which is assigned to the whole button via ETO_OPAQUE in ExtTextOut
            ExtTextOut( //assigns graphic properties to the control
                lpdis->hDC,
                ((lpdis->rcItem.right - lpdis->rcItem.left)) / 2, //X position of the text inside, calculated as half the width
                ((lpdis->rcItem.bottom - lpdis->rcItem.top)) / 2, //Y
                ETO_OPAQUE, //ETO_OPAQUE = button will have the color from SetBkColor
                &lpdis->rcItem, //pointer to rectangle inside the drawing structure
                0, //text inside button
                0, //length of the text string
                NULL);
            lpdis->CtlType = ODT_BUTTON;
            lpdis->itemAction = ODA_DRAWENTIRE;

            int lineWidth = 2;
            int objWidth = 18;

            p_CustomButton->DrawRoundRect(lpdis->hDC, 0, 0, 18, 18, 2);

            Gdiplus::Graphics graphics(lpdis->hDC);
            graphics.SetSmoothingMode(Gdiplus::SmoothingModeHighQuality);

            switch (p_CustomButton->type)
            {
                case 1:
                {
                    graphics.DrawLine(&p_CustomButton->frontPen, 1, 1, objWidth - 1, objWidth - 1);
                    graphics.DrawLine(p_CustomButton->frontPen, 1, objWidth - 1, objWidth - 1, 1);
                    graphics.DrawLine(p_CustomButton->frontPen, 1, 1, objWidth - 1, objWidth - 1);
                    graphics.DrawLine(p_CustomButton->frontPen, 1, objWidth - 1, objWidth - 1, 1);
                    break;
                }
                case 2:
                {
                    graphics.DrawLine(p_CustomButton->frontPen, 0, 3, objWidth, 3);
                    break;
                }
                case 3:
                {
                    graphics.DrawLine(p_CustomButton->frontPen, 0, objWidth - 3, objWidth, objWidth - 3);
                    break;
                }
            }
            break;
        }
        case WM_LBUTTONUP:
        {
            switch (p_CustomButton->type)
            {
                case 1:
                {
                    SendMessage(GetParent(hwnd), WM_CLOSE, 0, 0);
                    break;
                }
                case 2:
                {
                    ShowWindow(GetParent(hwnd), SW_MAXIMIZE);
                    break;
                }
                case 3:
                {
                    ShowWindow(GetParent(hwnd), SW_MINIMIZE);
                    break;
                }
            }
            break;
        }
    }
    return DefSubclassProc(hwnd, uMsg, wParam, lParam);
}

Header:
#ifndef CUSTOMBUTTON_H
#define CUSTOMBUTTON_H

class CustomButton
{
private:
    int width;
    int height;
    int type;
    HWND customButton;
    const Gdiplus::SolidBrush frontBrush; // Create a Brush object.
    const Gdiplus::Pen frontPen;

    CustomButton();
    void DrawRoundRect(HDC hdc, int X, int Y, int RectWidth, int RectHeight, int CornerRadius);

    static LRESULT CALLBACK CustomButtonProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam, UINT_PTR uint_ptr, DWORD_PTR dwRefData);

public:
    ~CustomButton();

    static CustomButton* CreateCustomButton(HINSTANCE hInst, HWND hwnd, int pos_x, int pos_y, int width, int height, int type);
    HWND getButton();
};

#endif


New answer:
[u'\nYour constructor has this:\nGdiplus::SolidBrush frontBrush(Gdiplus::Color(255, 160, 160, 160)); // Create a Brush object.\nGdiplus::Pen frontPen(&frontBrush, 1);\n\nthis creates frontBrush and frontPen on the stack, then promptly destructs them as their scope is limited to the constructor only.  They need to be member variables (like width, height, etc) and they can be constructed in the preamble of the constructor:\nCustomButton::CustomButton()\n   : frontBrush(Gdiplus::Color(255, 160, 160, 160))\n   , frontPen(&frontBrush, 1)\n{\n.\n.\n.\n}\n\n']
Get a new question page!

I have a QAbstractListModel connected to a ListView in QML, but I'm having an issue with updating the view from C++. This is with Qt 5.6 mingw, QtQuick 2.6, and QtQuick.Controls 1.5.
Setup:
The ListView uses a custom check box delegate with a property to store the value from the model. The delegate updates the model when a user clicks on the delegate. In my QML I also have a toggle button that calls a slot in my model which toggles the data in the model and emits the dataChanged() signal for all rows (sets all checkboxes to not checked or checked). 
Issue:
The toggle button works just fine until a user interacts with any checkbox delegate. After a user does this, the dataChanged() signal no longer updates that specific delegate. I also verified that the data() function of my model is getting called for all rows before the user interaction and then it is only getting called on the rows the user didn't click after the user interaction. This leads me to believe somewhere behind the scenes the view is choosing not to update certain rows, but I can't figure out why.
Possible Solution:
Emitting layoutChanged() in the model does update the view for my toggle button regardless of user interaction, but this causes the entire view to be redrawn and is relatively slow.
This issue was created using a checkbox, but it applies to any type of user interaction. Below is all of the code necessary to recreate my issue.
main.qml
import QtQuick 2.6
import QtQuick.Controls 1.5
import QtQuick.Layouts 1.3

ApplicationWindow {
    visible: true
    width: 640
    height: 480

    ColumnLayout {
        anchors.fill: parent
        spacing: 10

        Button {
            Layout.preferredHeight: 100
            Layout.preferredWidth: 100
            text: "Test!"
            onClicked: {
                console.log("attempting to refresh qml")
                testModel.refresh()
                testModel.print()
            }
        }


        ScrollView {
            Layout.fillHeight: true
            Layout.fillWidth: true

            ListView {
                id: view
                anchors.fill: parent
                spacing: 5
                model: testModel
                delegate: Rectangle {

                    height: 50
                    width: 100
                    color: "lightgray"

                    CheckBox {
                        id: checkBox
                        anchors.fill: parent
                        checked: valueRole

                        onClicked: {
                            valueRole = checked
                        }
                    }
                }
            }
        }
    }
}

TestModel.cpp
#include "testmodel.h"

TestModel::TestModel(QObject *parent) : QAbstractListModel(parent) {

    roleVector << TaskRoles::valueRole;
    testValue = false;
}

TestModel::~TestModel() {}

void TestModel::setup(const QList<bool> &inputList) {

    // Clear view
    removeRows(0, valueList.length());

    // Update value list
    valueList = inputList;

    // Add rows
    insertRows(0, valueList.length());
}

// Emits data changed for entire model
void TestModel::refresh() {

    qDebug() << "attempting to refresh c++";

    // Toggle all values in model
    for (int i=0; i < valueList.length(); i++) {
        valueList[i] = testValue;
    }

    // Toggle test value
    testValue = !testValue;

    // Update view
    // this works but is slow
//    layoutAboutToBeChanged();
//    layoutChanged();

    // this doesn't work if the user clicked the checkbox already
    dataChanged(createIndex(0, 0), createIndex(rowCount()-1, 0), roleVector);
}

void TestModel::print() {
    qDebug() << "Model:" << valueList;
}

QHash<int, QByteArray> TestModel::roleNames() const {

    QHash<int, QByteArray> roles;
    roles[valueRole]         = "valueRole";
    return roles;
}

int TestModel::rowCount(const QModelIndex & /*parent*/) const {

    return valueList.length();
}

QVariant TestModel::headerData(int /*section*/, Qt::Orientation /*orientation*/, int /*role*/) const {

    return QVariant();
}

Qt::ItemFlags TestModel::flags(const QModelIndex & /*index*/) const {

    return static_cast<Qt::ItemFlags>(Qt::ItemIsEnabled | Qt::ItemIsSelectable | Qt::ItemIsUserCheckable |  Qt::ItemIsEditable);
}

QVariant TestModel::data(const QModelIndex &index, int role) const {

//    qDebug() << QString("Get Data - Row: %1, Col: %2, Role: %3").arg(index.row()).arg(index.column()).arg(role);

    int row = index.row();

    if (row >= 0 && row < valueList.length()) {

        switch(role) {
            case valueRole:
            qDebug() << QString("Get Data - Row: %1, Col: %2, Role: %3").arg(index.row()).arg(index.column()).arg(role);
                return valueList.at(row);
            default:
                return QVariant();
        }
    }

    return QVariant();
}

bool TestModel::setData(const QModelIndex &index, const QVariant &value, int role) {

    qDebug() << QString("Set Data - Row: %1, Col: %2, Role: %3").arg(index.row()).arg(index.column()).arg(role);

    int row = index.row();

    if (row >= 0 && row < valueList.length()) {

        switch(role) {
            case valueRole:
                valueList[row] = value.toBool();
                break;
            default:
                break;
        }

        dataChanged(index, index, QVector<int>() << role);
        print();
    }

    return true;
}

bool TestModel::insertRows(int row, int count, const QModelIndex & /*parent*/) {

    // Check bounds
    if (row < 0 || count < 0) {
        return false;
    }

    if (count == 0) {
        return true;
    }

    if (row > rowCount()) {
        row = rowCount();
    }

    beginInsertRows(QModelIndex(), row, row+count-1);
    endInsertRows();

    return true;
}

bool TestModel::removeRows(int row, int count, const QModelIndex & /*parent*/) {

    // Check bounds
    if (row < 0 || count < 0 || rowCount() <= 0) {
        return false;
    }

    if (count == 0) {
        return true;
    }

    if (row >= rowCount()) {
        row = rowCount() - 1;
    }

    beginRemoveRows(QModelIndex(), row, row+count-1);
    endRemoveRows();

    return true;
}

TestModel.h
#ifndef TESTMODEL_H
#define TESTMODEL_H

#include <QAbstractListModel>
#include <QDebug>
#include <QVector>


class TestModel : public QAbstractListModel
{
    Q_OBJECT
public:
    explicit TestModel(QObject *parent = 0);
    ~TestModel();

    // Roles
    enum TaskRoles {
        valueRole = Qt::UserRole + 1,
    };

    // Row / Column Functions
    int rowCount(const QModelIndex &parent = QModelIndex()) const ;

    // Header / Flag Functions
    QVariant headerData(int section, Qt::Orientation orientation, int role) const;
    Qt::ItemFlags flags(const QModelIndex &index) const;

    // Model Get / Set Functions
    QVariant data(const QModelIndex &index, int role = Qt::DisplayRole) const;
    bool setData(const QModelIndex &index, const QVariant &value, int role = Qt::EditRole);

    // Row Insertion / Deletion Functions
    bool insertRows(int row, int count, const QModelIndex &parent = QModelIndex());
    bool removeRows(int row, int count, const QModelIndex &parent = QModelIndex());

protected:
    // Value List
    QList<bool> valueList;
    QVector<int> roleVector;
public slots:
    QHash<int, QByteArray> roleNames() const;
    void setup(const QList<bool> &inputList);
    void refresh();
    void print();
};

#endif // TESTMODEL_H

main.cpp
#include <QGuiApplication>
#include <QQmlApplicationEngine>
#include <QtQml>
#include <QQmlContext>

#include "testmodel.h"

int main(int argc, char *argv[])
{
    QGuiApplication app(argc, argv);

    TestModel testModel;
    testModel.setup(QList<bool>() << true << false << true << false << true);

    QQmlApplicationEngine engine;
    engine.load(QUrl(QStringLiteral("qrc:/main.qml")));
    engine.rootContext()->setContextProperty("testModel", &testModel);

    return app.exec();
}

Example debug output (notice how it goes from 5 get data calls to only 4 get data calls after the checkbox in the delegate is clicked):
qml: attempting to refresh qml
attempting to refresh c++
"Get Data - Row: 0, Col: 0, Role: 257"
"Get Data - Row: 1, Col: 0, Role: 257"
"Get Data - Row: 2, Col: 0, Role: 257"
"Get Data - Row: 3, Col: 0, Role: 257"
"Get Data - Row: 4, Col: 0, Role: 257"
Model: (false, false, false, false, false)

qml: clicked checkbox
"Set Data - Row: 0, Col: 0, Role: 257"
Model: (true, false, false, false, false)

qml: attempting to refresh qml
attempting to refresh c++
"Get Data - Row: 1, Col: 0, Role: 257"
"Get Data - Row: 2, Col: 0, Role: 257"
"Get Data - Row: 3, Col: 0, Role: 257"
"Get Data - Row: 4, Col: 0, Role: 257"
Model: (true, true, true, true, true)

qml: attempting to refresh qml
attempting to refresh c++
"Get Data - Row: 1, Col: 0, Role: 257"
"Get Data - Row: 2, Col: 0, Role: 257"
"Get Data - Row: 3, Col: 0, Role: 257"
"Get Data - Row: 4, Col: 0, Role: 257"
Model: (false, false, false, false, false)


No answers for this question!
Get a new question page!

I am designing a wrapper class for a serial port communications object.  I am interfacing from my macbook pro to an arduino uno, but am observing weird behavior even though both sides are configured correctly(9600 baud rate, 1 stop bit, 8 data bits, no parity).  I observe some of the following behavior: Whenever a delay is put into the arduino program, it reads correctly after first connecting the cable, but incorrectly afterwards.  With no delay, it reads only 1 byte, even though I explicitly call boost::read_until, and store the results in a streambuf.  The two characters I constantly observe that are unwanted with a delay are an f and a ?, followed by the actual message.  Sometimes nothing is read at all.  I think this could be some sort of unwanted break condition behavior, but am not sure at all.  All writes on the serial port appear to work as intended.  I call the read operation from my macbook in a main method.
#define PORT "/dev/tty.usbmodem1411"

int main(){
    boost::asio::io_service io;
    Serial::Serial serial(PORT, &io, 9600);
    if(!serial.is_open()){
      serial.open(PORT);
    }
    std::string s = "15";
    serial.write(s);
    std::string st = "Hi";
    serial.write(st);
    serial.read("\n");
}

and the call to read is then traced to inside my serial wrapper class
std::string Serial::read(std::string delimiter){
  std::cout << "Beginning read." << std::endl;
  b_->prepare(512);
  int bufSize = boost::asio::buffer_size(b_->data());
  std::size_t bytesRead = boost::asio::read_until(*port_, *b_, delimiter);
  std::cout << "Finished read." << std::endl;
  //char charBuf[bufSize];
  //charBuf = boost::asio::buffer_cast<char[]>(readBuf_);
  b_->commit(bytesRead);
  std::size_t inputSize = b_->size();
  std::cout << "Input size: " << inputSize << std::endl;
  std::istream* instream = new std::istream(b_);
  std::string read; //= *boost::asio::buffer_cast<const std::string*>(b_->data());
  *instream >> read;
  std::cout << "Read:" << read << std::endl;
  //std::string read(charBuf, bufSize);
  boost::algorithm::trim(read);
  std::cout << "Read 2:" << read << std::endl;
  return read;
}

Can anyone explain the serial port behavior for me? Thank you very much.

No answers for this question!
Get a new question page!

I have a priority queue and an "event" class and i want to read from a file called agenda.txt where i have: priority,date,year and name of the event. But when i read from the file i get only the first element and i want to see the element with the highest priority. Can you help?

agenda.txt
  9
  12.05
  2016
  meeting
  16
  13.05
  2017
  shopping
  8
  12.09
  2056
  swimming
  60
  45.76
  2016
  work

and this is the main:
int main(){

char filename[50];
ifstream bucky;
cin.getline(filename,50);
bucky.open(filename);
if(!bucky.is_open()){
    exit(EXIT_FAILURE);
}
string nume;
int prio;
double data;
int an;
bucky>>prio>>data>>an>>nume;

while(bucky.good()){
cout<<"prioritatea este "<<prio<<"    data este "<<data<<"   anul este "<<an<<"   numele este  "<<nume<<" "<<endl;
bucky>>prio>>data>>an>>nume;



priority_queue<Event> q;

q.push(Event(prio,data,an,nume));


    cout<< q.top().getEventPriority()<<q.top().getEventData()<<" "<<q.top().getEventAn()<<" "<<q.top().getEventName()<<endl;



system("pause");}}


New answer:
[u'\nIf I am understanding correctly what you want is to have the first record in the file be the record with the highest priority; if that is the case then you should be writing records in order of priority to the file with the first record having the highest priority.  So for example\nclass Event {\npublic:\n    int priority;\n    int date;\n    int year;\n    string name;\n};\n\nbool operator<(const Event& first, const Event& second) { \n    return first.priority < second.priority;\n}\n\npriority_queue<event> pq;\n\nfor (const auto& event : events_array_from_before) {\n    pq.push(event);\n}\n\nofstream fout;\nfout.open("agenda.txt");\nif (!fout) {\n    cerr << "Could not open file to write to" << endl;\n    return 1;\n}\n\nwhile (!pq.empty()) {\n    const auto& event = pq.top();\n    pq.pop();\n    fout << event.priority << \'\\n\' << event.date << \'\\n\' \n         << event.year << \'\\n\' << event.name << \'\\n\';\n}\n\nBut if you have the file with the records in some random order you can do nothing (if using a priority queue) but to read all of the records and keep track of the one with the highest priority.  So you would do the following\nifstream fin;\nfin.open("agenda.txt");\nif (!fin) { \n    cerr << "Could not open file agenda.txt" << endl;\n    return 1;\n}\n\nEvent temp;\nEvent top_record;\nfin >> top_record.priority >> top_record.date >> top_record.year \n    >> top_record.name;\nwhile (fin >> temp.priority >> temp.date >> temp.year >> temp.name) {\n    if (temp.priority > top_record.priority) {\n        top_record = std::move(temp); // for efficient moving of string name\n    }\n}\n\nIf you want all the records from the file in sorted order you will have to read all of them into a vector and call the std::sort method on the vector\nIf you have some indication of where the element is in the file you could open the file in a ifstream object and then call the seekg method on the object to read from that point on.\n']
New answer:
[u'\nIf I am understanding correctly what you want is to have the first record in the file be the record with the highest priority; if that is the case then you should be writing records in order of priority to the file with the first record having the highest priority.  So for example\nclass Event {\npublic:\n    int priority;\n    int date;\n    int year;\n    string name;\n};\n\nbool operator<(const Event& first, const Event& second) { \n    return first.priority < second.priority;\n}\n\npriority_queue<event> pq;\n\nfor (const auto& event : events_array_from_before) {\n    pq.push(event);\n}\n\nofstream fout;\nfout.open("agenda.txt");\nif (!fout) {\n    cerr << "Could not open file to write to" << endl;\n    return 1;\n}\n\nwhile (!pq.empty()) {\n    const auto& event = pq.top();\n    pq.pop();\n    fout << event.priority << \'\\n\' << event.date << \'\\n\' \n         << event.year << \'\\n\' << event.name << \'\\n\';\n}\n\nBut if you have the file with the records in some random order you can do nothing (if using a priority queue) but to read all of the records and keep track of the one with the highest priority.  So you would do the following\nifstream fin;\nfin.open("agenda.txt");\nif (!fin) { \n    cerr << "Could not open file agenda.txt" << endl;\n    return 1;\n}\n\nEvent temp;\nEvent top_record;\nfin >> top_record.priority >> top_record.date >> top_record.year \n    >> top_record.name;\nwhile (fin >> temp.priority >> temp.date >> temp.year >> temp.name) {\n    if (temp.priority > top_record.priority) {\n        top_record = std::move(temp); // for efficient moving of string name\n    }\n}\n\nIf you want all the records from the file in sorted order you will have to read all of them into a vector and call the std::sort method on the vector\nIf you have some indication of where the element is in the file you could open the file in a ifstream object and then call the seekg method on the object to read from that point on.\n', u'\npriority_queue does not know how to sort your custom class.  You Class needs to override the less than operator so that the priority_queue can sort the items by the Priority defined in your text file: \nclass Event\n{\n   int Priority;\n};\nbool operator<(Event lhs, Event rhs) {return (lhs.Priority < rhs.Priority);}\n\n']
Get a new question page!

I've never asked a question on stackoverflow before, so if I break some rule asking this, please let me know for future reference. 
Basically, I want to connect to a MySQL database from a C++ program and have decided to use the MySQL connector/c++ API. I am trying to use the code found at:
https://dev.mysql.com/doc/connector-cpp/en/connector-cpp-examples-complete-example-2.html to insert data into the DB, but keep getting a "pointer to incomplete class type is not allowed" error on the pstmt variable as seen below:

I am using Visual Studio 2015. I have no idea why I'm getting an error since the code and files all come straight from the developers of MySQL. I have looked at Pointer to incomplete class type is not allowed and Pointer to incomplete class type is not allowed?, but have not been able to resolve my issue from them as I included all the header files in my project that the example code uses. If anyone has any suggestions, I would be extremely grateful. Also, if further information is needed, I'll add it as soon as I can.

No answers for this question!
Get a new question page!

There are no settings on my android project for C/C++ build. I tried importing the settings and its asking for an xml file. I've installed Android NDK, CDT, and I'm trying to run the OpenCV4Android library here. I also get this error in additional:
Error: Program "C:\Users\Prateek Chachra\Downloads\android-ndk-r11c-windows-x86\ndk-build.cmd" not found in PATH
Even though I've added this in the settings. I want to run the sample project and despite of having installed everything needed it still gives an error. Any help?

New answer:
[u"\nTry adding to environment variable %PATH% that path.\nShortly, this error means that the directory where ndk-build.cmd is located can't be found in the PATH env. var, in which are specified binaries directories\n"]
Get a new question page!

Is there a way for OpenMP to remove the barrier on a parallel block?
I know that nowait can be used in for or sections blocks within a parallel in order to allow threads to move ahead without having to wait for all of them to finish the relevant block. However, #pragma omp parallel nowait generates a compiler error.
I am developing a program with a UI. I call a function to load up the UI and, while that happens, I also want to get in touch with a server to send some usage data.
Each of these functions works fine, but if I don't do them in parallel it takes a while. If the server is down, then the connection attempt can take a few seconds to abort, and then simply loading the UI takes a second as well, at which point things are just taking too long. Loading the UI first and then making the connection makes the UI appear to freeze.
So I would like to do something like
// this generates a compiler error
#pragma omp parallel num_threads(2) nowait
{
  if(omp_get_thread_num() == 0)
    LoadUI();
  else
    Connect();
}

This way, the master thread (which must be the one to load the UI) will load the UI and then move on regardless of any connection problems. However, since parallel nowait is forbidden, it is my understanding that the program will still momentarily hang if there's a connection problem (which takes longer to abort than the UI takes to load) due to the implicit barrier at the end of parallel.
Is there a way around this? What I really want to do is request a new thread to do the connection while the program goes on regardless of what the thread does or how long it takes to finish (obviously, the thread doesn't touch any of the data used by the master thread).

New answer:
[u"\nI don't think what you are trying to do is compatible with the OpenMP fork-join model. The idea is that in each parallel region you spawn threads which are joined at the end of the parallel region. OK, the threads are not actually spawned because there is typically a thread pool, but this is the conceptual model.\nNote that even the following generates a compiler error:\n#pragma omp parallel for nowait\nfor (i=0; i<10; i++) {\n  ...\n}\n\nWhat you can do is to avoid the barrier after the for, inside a parallel region. For example:\n#pragma omp parallel\n{\n    #pragma omp parallel for\n    for (int i=0; i<2; i++) {\n    }\n    /* no wait here */\n    #pragma omp for\n    for (int i=0; i<2; i++) {\n    }\n}\n\nTo do what you need you will probably have to use pthreads or thread library.\nPS: You can use OpenMP sections instead of checking the thread id.\n"]
Get a new question page!

I've hit a bit of an issue and I'm not sure what to make of it.
I'm running Qt 4.8.6, Qt creator 3.3.2, environment in Ubuntu 12.04 cross compiling to a Beaglebone Black running Debian 7 kernel 3.8.13.
The issue that I'm seeing is that this code:
if (qApp->hasPendingEvents())
{
    qDebug() << "pending events";
}
qApp->processEvents(QEventLoop::AllEvents, 10);

does not function as it should according to (at least my interpretation of) the Qt documentation. I would expect the process events loop to function for AT MOST the 10 milliseconds specified.
What happens is the qDebug statement is never printed. I would then expect that there are therefore no events to be processed, and the process events statement goes in and out very quickly. Most of the time this is the case.
What happens (not every time, but often enough) the qDebug statement is skipped, and the processEvents statement executes for somewhere between 1 and 2 seconds.
Is there some way that I can dig into what is happening in the process events and find out what is causing the delay?

New answer:
[u'\n\nQt is processing events for longer than specified for QApplication::processEvents call on Linux\n  system. Is there some way that I can dig into what is happening in the\n  process events and find out what is causing the delay?\n\nYes, observing Qt source code may help. The source code is in /home/myname/software/Qt/5.5/Src/qtbase/src/corelib/kernel/qeventdispatcher_unix.cpp or maybe somewhere around that:\nbool QEventDispatcherUNIX::processEvents(QEventLoop::ProcessEventsFlags flags)\n{\n    Q_D(QEventDispatcherUNIX);\n    d->interrupt.store(0);\n\n    // we are awake, broadcast it\n    emit awake();\n\n    // This statement implies forcing events from system event queue\n    // to be processed now with doSelect below\n    QCoreApplicationPrivate::sendPostedEvents(0, 0, d->threadData);\n\n    int nevents = 0;\n    const bool canWait = (d->threadData->canWaitLocked()\n                          && !d->interrupt.load()\n                          && (flags & QEventLoop::WaitForMoreEvents));\n\n    if (canWait)\n        emit aboutToBlock();\n\n    if (!d->interrupt.load()) {\n        // return the maximum time we can wait for an event.\n        timespec *tm = 0;\n        timespec wait_tm = { 0l, 0l };\n        if (!(flags & QEventLoop::X11ExcludeTimers)) {\n            if (d->timerList.timerWait(wait_tm))\n                tm = &wait_tm;\n        }\n\n        if (!canWait) {\n            if (!tm)\n                tm = &wait_tm;\n\n            // no time to wait\n            tm->tv_sec  = 0l;\n            tm->tv_nsec = 0l;\n        }\n        // runs actual event loop with POSIX select\n        nevents = d->doSelect(flags, tm);\n\nIt seems there system posted events that are not accounted for qApp->hasPendingEvents(). And then QCoreApplicationPrivate::sendPostedEvents(0, 0, d->threadData); flushes those events to be processed by d->doSelect. If I was solving this task I would try to either flush those posted events out or maybe realize if and why flags parameter has QEventLoop::WaitForMoreEvents bit set. I usually either build Qt from source code or provide debugger with the path to its symbols/source so it is possible to dig in there.\nP.S. I glanced at Qt 5.5.1 source event processing code but that should be very similar to what you deal with. Or could that implementation actually be bool QEventDispatcherGlib::processEvents(QEventLoop::ProcessEventsFlags flags)? It is easy to find on an actual system.\n']
Get a new question page!

I am assigning values in a C++ program out of the bounds like this:
#include <iostream>
using namespace std;
int main()
{
    int array[2];
    array[0] = 1;
    array[1] = 2;
    array[3] = 3;
    array[4] = 4;
    cout << array[3] << endl;
    cout << array[4] << endl;
    return 0;
}

The program prints 3 and 4.  It should be not be possible.  I am using g++ 4.3.3
Here is compile and run command
$ g++ -W -Wall errorRange.cpp -o errorRange
$ ./errorRange
3
4

Only when assigning array[3000]=3000 does it give me a segmentation fault.
If gcc doesnt check for array bounds, how can I be sure if my program is correct, as it can lead to some serious issues later?
I replaced above code with
vector<int> vint(2);
vint[0] = 0;
vint[1] = 1;
vint[2] = 2;
vint[5] = 5;
cout << vint[2] << endl;
cout << vint[5] << endl;

and this one is also produces no error. 
Solution: to use std containers when possible instead of raw arrays, and to use .at() instead of [] for correct, well defined behavior.

New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n']
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n"]
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n", u"\ng++ does not check for array bounds, and you may be overwriting something with 3,4 but nothing really important, if you try with higher numbers you'll get a crash.\nYou are just overwriting parts of the stack that are not used, you could continue till you reach the end of the allocated space for the stack and it'd crash eventually\nEDIT:\nYou have no way of dealing with that, maybe a static code analyzer could reveal those failures, but that's too simple, you may have similar(but more complex) failures undetected even for static analyzers\n"]
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n", u"\ng++ does not check for array bounds, and you may be overwriting something with 3,4 but nothing really important, if you try with higher numbers you'll get a crash.\nYou are just overwriting parts of the stack that are not used, you could continue till you reach the end of the allocated space for the stack and it'd crash eventually\nEDIT:\nYou have no way of dealing with that, maybe a static code analyzer could reveal those failures, but that's too simple, you may have similar(but more complex) failures undetected even for static analyzers\n", u'\nIt\'s undefined behavior as far as I know. Run a larger program with that and it will crash somewhere along the way. Bounds checking is not a part of raw arrays (or even std::vector).\nUse std::vector with std::vector::iterator\'s instead so you don\'t have to worry about it.\nEdit: \nJust for fun, run this and see how long until you crash:\nint main()\n{\n   int array[1];\n\n   for (int i = 0; i != 100000; i++)\n   {\n       array[i] = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nEdit2: \nDon\'t run that.\nEdit3:\nOK, here is a quick lesson on arrays and their relationships with pointers:\nWhen you use array indexing, you are really using a pointer in disguise (called a "reference"), that is automatically dereferenced. This is why instead of *(array[1]), array[1] automatically returns the value at that value.\nWhen you have a pointer to an array, like this:\nint array[5];\nint *ptr = array;\n\nThen the "array" in the second declaration is really decaying to a pointer to the first array. This is equivalent behavior to this:\nint *ptr = &array[0];\n\nWhen you try to access beyond what you allocated, you are really just using a pointer to other memory (which C++ won\'t complain about). Taking my example program above, that is equivalent to this:\nint main()\n{\n   int array[1];\n   int *ptr = array;\n\n   for (int i = 0; i != 100000; i++, ptr++)\n   {\n       *ptr = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nThe compiler won\'t complain because in programming, you often have to communicate with other programs, especially the operating system. This is done with pointers quite a bit. \n']
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n", u"\ng++ does not check for array bounds, and you may be overwriting something with 3,4 but nothing really important, if you try with higher numbers you'll get a crash.\nYou are just overwriting parts of the stack that are not used, you could continue till you reach the end of the allocated space for the stack and it'd crash eventually\nEDIT:\nYou have no way of dealing with that, maybe a static code analyzer could reveal those failures, but that's too simple, you may have similar(but more complex) failures undetected even for static analyzers\n", u'\nIt\'s undefined behavior as far as I know. Run a larger program with that and it will crash somewhere along the way. Bounds checking is not a part of raw arrays (or even std::vector).\nUse std::vector with std::vector::iterator\'s instead so you don\'t have to worry about it.\nEdit: \nJust for fun, run this and see how long until you crash:\nint main()\n{\n   int array[1];\n\n   for (int i = 0; i != 100000; i++)\n   {\n       array[i] = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nEdit2: \nDon\'t run that.\nEdit3:\nOK, here is a quick lesson on arrays and their relationships with pointers:\nWhen you use array indexing, you are really using a pointer in disguise (called a "reference"), that is automatically dereferenced. This is why instead of *(array[1]), array[1] automatically returns the value at that value.\nWhen you have a pointer to an array, like this:\nint array[5];\nint *ptr = array;\n\nThen the "array" in the second declaration is really decaying to a pointer to the first array. This is equivalent behavior to this:\nint *ptr = &array[0];\n\nWhen you try to access beyond what you allocated, you are really just using a pointer to other memory (which C++ won\'t complain about). Taking my example program above, that is equivalent to this:\nint main()\n{\n   int array[1];\n   int *ptr = array;\n\n   for (int i = 0; i != 100000; i++, ptr++)\n   {\n       *ptr = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nThe compiler won\'t complain because in programming, you often have to communicate with other programs, especially the operating system. This is done with pointers quite a bit. \n', u'\nYou are certainly overwriting your stack, but the program is simple enough that effects of this go unnoticed.\n']
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n", u"\ng++ does not check for array bounds, and you may be overwriting something with 3,4 but nothing really important, if you try with higher numbers you'll get a crash.\nYou are just overwriting parts of the stack that are not used, you could continue till you reach the end of the allocated space for the stack and it'd crash eventually\nEDIT:\nYou have no way of dealing with that, maybe a static code analyzer could reveal those failures, but that's too simple, you may have similar(but more complex) failures undetected even for static analyzers\n", u'\nIt\'s undefined behavior as far as I know. Run a larger program with that and it will crash somewhere along the way. Bounds checking is not a part of raw arrays (or even std::vector).\nUse std::vector with std::vector::iterator\'s instead so you don\'t have to worry about it.\nEdit: \nJust for fun, run this and see how long until you crash:\nint main()\n{\n   int array[1];\n\n   for (int i = 0; i != 100000; i++)\n   {\n       array[i] = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nEdit2: \nDon\'t run that.\nEdit3:\nOK, here is a quick lesson on arrays and their relationships with pointers:\nWhen you use array indexing, you are really using a pointer in disguise (called a "reference"), that is automatically dereferenced. This is why instead of *(array[1]), array[1] automatically returns the value at that value.\nWhen you have a pointer to an array, like this:\nint array[5];\nint *ptr = array;\n\nThen the "array" in the second declaration is really decaying to a pointer to the first array. This is equivalent behavior to this:\nint *ptr = &array[0];\n\nWhen you try to access beyond what you allocated, you are really just using a pointer to other memory (which C++ won\'t complain about). Taking my example program above, that is equivalent to this:\nint main()\n{\n   int array[1];\n   int *ptr = array;\n\n   for (int i = 0; i != 100000; i++, ptr++)\n   {\n       *ptr = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nThe compiler won\'t complain because in programming, you often have to communicate with other programs, especially the operating system. This is done with pointers quite a bit. \n', u'\nYou are certainly overwriting your stack, but the program is simple enough that effects of this go unnoticed.\n', u'\nC or C++ will not check the bounds of an array access.\nYou are allocating the array on the stack.  Indexing the array via array[3] is equivalent to *(array + 3), where array is a pointer to &array[0].  This will result in undefined behavior.\nOne way to catch this sometimes in C is to use a static checker, such as splint.  If you run:\nsplint +bounds array.c\n\non,\nint main(void)\n{\n    int array[1];\n\n    array[1] = 1;\n\n    return 0;\n}\n\nthen you will get the warning:\n\narray.c: (in function main)\n  array.c:5:9: Likely out-of-bounds\n  store:\n      array[1]\n      Unable to resolve constraint:\n      requires 0 >= 1\n       needed to satisfy precondition:\n      requires maxSet(array @ array.c:5:9) >= 1   A memory write may\n  write to an address beyond the\n  allocated buffer.\n\n']
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n", u"\ng++ does not check for array bounds, and you may be overwriting something with 3,4 but nothing really important, if you try with higher numbers you'll get a crash.\nYou are just overwriting parts of the stack that are not used, you could continue till you reach the end of the allocated space for the stack and it'd crash eventually\nEDIT:\nYou have no way of dealing with that, maybe a static code analyzer could reveal those failures, but that's too simple, you may have similar(but more complex) failures undetected even for static analyzers\n", u'\nIt\'s undefined behavior as far as I know. Run a larger program with that and it will crash somewhere along the way. Bounds checking is not a part of raw arrays (or even std::vector).\nUse std::vector with std::vector::iterator\'s instead so you don\'t have to worry about it.\nEdit: \nJust for fun, run this and see how long until you crash:\nint main()\n{\n   int array[1];\n\n   for (int i = 0; i != 100000; i++)\n   {\n       array[i] = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nEdit2: \nDon\'t run that.\nEdit3:\nOK, here is a quick lesson on arrays and their relationships with pointers:\nWhen you use array indexing, you are really using a pointer in disguise (called a "reference"), that is automatically dereferenced. This is why instead of *(array[1]), array[1] automatically returns the value at that value.\nWhen you have a pointer to an array, like this:\nint array[5];\nint *ptr = array;\n\nThen the "array" in the second declaration is really decaying to a pointer to the first array. This is equivalent behavior to this:\nint *ptr = &array[0];\n\nWhen you try to access beyond what you allocated, you are really just using a pointer to other memory (which C++ won\'t complain about). Taking my example program above, that is equivalent to this:\nint main()\n{\n   int array[1];\n   int *ptr = array;\n\n   for (int i = 0; i != 100000; i++, ptr++)\n   {\n       *ptr = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nThe compiler won\'t complain because in programming, you often have to communicate with other programs, especially the operating system. This is done with pointers quite a bit. \n', u'\nYou are certainly overwriting your stack, but the program is simple enough that effects of this go unnoticed.\n', u'\nC or C++ will not check the bounds of an array access.\nYou are allocating the array on the stack.  Indexing the array via array[3] is equivalent to *(array + 3), where array is a pointer to &array[0].  This will result in undefined behavior.\nOne way to catch this sometimes in C is to use a static checker, such as splint.  If you run:\nsplint +bounds array.c\n\non,\nint main(void)\n{\n    int array[1];\n\n    array[1] = 1;\n\n    return 0;\n}\n\nthen you will get the warning:\n\narray.c: (in function main)\n  array.c:5:9: Likely out-of-bounds\n  store:\n      array[1]\n      Unable to resolve constraint:\n      requires 0 >= 1\n       needed to satisfy precondition:\n      requires maxSet(array @ array.c:5:9) >= 1   A memory write may\n  write to an address beyond the\n  allocated buffer.\n\n', u"\nUndefined behavior working in your favor.  Whatever memory you're clobbering apparently isn't holding anything important.  Note that C and C++ do not do bounds checking on arrays, so stuff like that isn't going to be caught at compile or run time.  \n"]
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n", u"\ng++ does not check for array bounds, and you may be overwriting something with 3,4 but nothing really important, if you try with higher numbers you'll get a crash.\nYou are just overwriting parts of the stack that are not used, you could continue till you reach the end of the allocated space for the stack and it'd crash eventually\nEDIT:\nYou have no way of dealing with that, maybe a static code analyzer could reveal those failures, but that's too simple, you may have similar(but more complex) failures undetected even for static analyzers\n", u'\nIt\'s undefined behavior as far as I know. Run a larger program with that and it will crash somewhere along the way. Bounds checking is not a part of raw arrays (or even std::vector).\nUse std::vector with std::vector::iterator\'s instead so you don\'t have to worry about it.\nEdit: \nJust for fun, run this and see how long until you crash:\nint main()\n{\n   int array[1];\n\n   for (int i = 0; i != 100000; i++)\n   {\n       array[i] = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nEdit2: \nDon\'t run that.\nEdit3:\nOK, here is a quick lesson on arrays and their relationships with pointers:\nWhen you use array indexing, you are really using a pointer in disguise (called a "reference"), that is automatically dereferenced. This is why instead of *(array[1]), array[1] automatically returns the value at that value.\nWhen you have a pointer to an array, like this:\nint array[5];\nint *ptr = array;\n\nThen the "array" in the second declaration is really decaying to a pointer to the first array. This is equivalent behavior to this:\nint *ptr = &array[0];\n\nWhen you try to access beyond what you allocated, you are really just using a pointer to other memory (which C++ won\'t complain about). Taking my example program above, that is equivalent to this:\nint main()\n{\n   int array[1];\n   int *ptr = array;\n\n   for (int i = 0; i != 100000; i++, ptr++)\n   {\n       *ptr = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nThe compiler won\'t complain because in programming, you often have to communicate with other programs, especially the operating system. This is done with pointers quite a bit. \n', u'\nYou are certainly overwriting your stack, but the program is simple enough that effects of this go unnoticed.\n', u'\nC or C++ will not check the bounds of an array access.\nYou are allocating the array on the stack.  Indexing the array via array[3] is equivalent to *(array + 3), where array is a pointer to &array[0].  This will result in undefined behavior.\nOne way to catch this sometimes in C is to use a static checker, such as splint.  If you run:\nsplint +bounds array.c\n\non,\nint main(void)\n{\n    int array[1];\n\n    array[1] = 1;\n\n    return 0;\n}\n\nthen you will get the warning:\n\narray.c: (in function main)\n  array.c:5:9: Likely out-of-bounds\n  store:\n      array[1]\n      Unable to resolve constraint:\n      requires 0 >= 1\n       needed to satisfy precondition:\n      requires maxSet(array @ array.c:5:9) >= 1   A memory write may\n  write to an address beyond the\n  allocated buffer.\n\n', u"\nUndefined behavior working in your favor.  Whatever memory you're clobbering apparently isn't holding anything important.  Note that C and C++ do not do bounds checking on arrays, so stuff like that isn't going to be caught at compile or run time.  \n", u"\nRun this through Valgrind and you might see an error.\nAs Falaina pointed out, valgrind does not detect many instances of stack corruption.  I just tried the sample under valgrind, and it does indeed report zero errors.  However, Valgrind can be instrumental in finding many other types of memory problems, it's just not particularly useful in this case unless you modify your bulid to include the --stack-check option.  If you build and run the sample as \ng++ --stack-check -W -Wall errorRange.cpp -o errorRange\nvalgrind ./errorRange\n\nvalgrind will report an error.\n"]
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n", u"\ng++ does not check for array bounds, and you may be overwriting something with 3,4 but nothing really important, if you try with higher numbers you'll get a crash.\nYou are just overwriting parts of the stack that are not used, you could continue till you reach the end of the allocated space for the stack and it'd crash eventually\nEDIT:\nYou have no way of dealing with that, maybe a static code analyzer could reveal those failures, but that's too simple, you may have similar(but more complex) failures undetected even for static analyzers\n", u'\nIt\'s undefined behavior as far as I know. Run a larger program with that and it will crash somewhere along the way. Bounds checking is not a part of raw arrays (or even std::vector).\nUse std::vector with std::vector::iterator\'s instead so you don\'t have to worry about it.\nEdit: \nJust for fun, run this and see how long until you crash:\nint main()\n{\n   int array[1];\n\n   for (int i = 0; i != 100000; i++)\n   {\n       array[i] = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nEdit2: \nDon\'t run that.\nEdit3:\nOK, here is a quick lesson on arrays and their relationships with pointers:\nWhen you use array indexing, you are really using a pointer in disguise (called a "reference"), that is automatically dereferenced. This is why instead of *(array[1]), array[1] automatically returns the value at that value.\nWhen you have a pointer to an array, like this:\nint array[5];\nint *ptr = array;\n\nThen the "array" in the second declaration is really decaying to a pointer to the first array. This is equivalent behavior to this:\nint *ptr = &array[0];\n\nWhen you try to access beyond what you allocated, you are really just using a pointer to other memory (which C++ won\'t complain about). Taking my example program above, that is equivalent to this:\nint main()\n{\n   int array[1];\n   int *ptr = array;\n\n   for (int i = 0; i != 100000; i++, ptr++)\n   {\n       *ptr = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nThe compiler won\'t complain because in programming, you often have to communicate with other programs, especially the operating system. This is done with pointers quite a bit. \n', u'\nYou are certainly overwriting your stack, but the program is simple enough that effects of this go unnoticed.\n', u'\nC or C++ will not check the bounds of an array access.\nYou are allocating the array on the stack.  Indexing the array via array[3] is equivalent to *(array + 3), where array is a pointer to &array[0].  This will result in undefined behavior.\nOne way to catch this sometimes in C is to use a static checker, such as splint.  If you run:\nsplint +bounds array.c\n\non,\nint main(void)\n{\n    int array[1];\n\n    array[1] = 1;\n\n    return 0;\n}\n\nthen you will get the warning:\n\narray.c: (in function main)\n  array.c:5:9: Likely out-of-bounds\n  store:\n      array[1]\n      Unable to resolve constraint:\n      requires 0 >= 1\n       needed to satisfy precondition:\n      requires maxSet(array @ array.c:5:9) >= 1   A memory write may\n  write to an address beyond the\n  allocated buffer.\n\n', u"\nUndefined behavior working in your favor.  Whatever memory you're clobbering apparently isn't holding anything important.  Note that C and C++ do not do bounds checking on arrays, so stuff like that isn't going to be caught at compile or run time.  \n", u"\nRun this through Valgrind and you might see an error.\nAs Falaina pointed out, valgrind does not detect many instances of stack corruption.  I just tried the sample under valgrind, and it does indeed report zero errors.  However, Valgrind can be instrumental in finding many other types of memory problems, it's just not particularly useful in this case unless you modify your bulid to include the --stack-check option.  If you build and run the sample as \ng++ --stack-check -W -Wall errorRange.cpp -o errorRange\nvalgrind ./errorRange\n\nvalgrind will report an error.\n", u'\nHint\nIf you want to have fast constraint size arrays with range error check, try using boost::array, (also std::tr1::array from <tr1/array> it will be standard container in next C++ specification). It\'s much faster then std::vector. It reserve memory on heap or inside class instance, just like int array[].\nThis is simple sample code:\n#include <iostream>\n#include <boost/array.hpp>\nint main()\n{\n    boost::array<int,2> array;\n    array.at(0) = 1; // checking index is inside range\n    array[1] = 2;    // no error check, as fast as int array[2];\n    try\n    {\n       // index is inside range\n       std::cout << "array.at(0) = " << array.at(0) << std::endl;\n\n       // index is outside range, throwing exception\n       std::cout << "array.at(2) = " << array.at(2) << std::endl; \n\n       // never comes here\n       std::cout << "array.at(1) = " << array.at(1) << std::endl;  \n    }\n    catch(const std::out_of_range& r)\n    {\n        std::cout << "Something goes wrong: " << r.what() << std::endl;\n    }\n    return 0;\n}\n\nThis program will print:\narray.at(0) = 1\nSomething goes wrong: array<>: index out of range\n\n']
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n", u"\ng++ does not check for array bounds, and you may be overwriting something with 3,4 but nothing really important, if you try with higher numbers you'll get a crash.\nYou are just overwriting parts of the stack that are not used, you could continue till you reach the end of the allocated space for the stack and it'd crash eventually\nEDIT:\nYou have no way of dealing with that, maybe a static code analyzer could reveal those failures, but that's too simple, you may have similar(but more complex) failures undetected even for static analyzers\n", u'\nIt\'s undefined behavior as far as I know. Run a larger program with that and it will crash somewhere along the way. Bounds checking is not a part of raw arrays (or even std::vector).\nUse std::vector with std::vector::iterator\'s instead so you don\'t have to worry about it.\nEdit: \nJust for fun, run this and see how long until you crash:\nint main()\n{\n   int array[1];\n\n   for (int i = 0; i != 100000; i++)\n   {\n       array[i] = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nEdit2: \nDon\'t run that.\nEdit3:\nOK, here is a quick lesson on arrays and their relationships with pointers:\nWhen you use array indexing, you are really using a pointer in disguise (called a "reference"), that is automatically dereferenced. This is why instead of *(array[1]), array[1] automatically returns the value at that value.\nWhen you have a pointer to an array, like this:\nint array[5];\nint *ptr = array;\n\nThen the "array" in the second declaration is really decaying to a pointer to the first array. This is equivalent behavior to this:\nint *ptr = &array[0];\n\nWhen you try to access beyond what you allocated, you are really just using a pointer to other memory (which C++ won\'t complain about). Taking my example program above, that is equivalent to this:\nint main()\n{\n   int array[1];\n   int *ptr = array;\n\n   for (int i = 0; i != 100000; i++, ptr++)\n   {\n       *ptr = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nThe compiler won\'t complain because in programming, you often have to communicate with other programs, especially the operating system. This is done with pointers quite a bit. \n', u'\nYou are certainly overwriting your stack, but the program is simple enough that effects of this go unnoticed.\n', u'\nC or C++ will not check the bounds of an array access.\nYou are allocating the array on the stack.  Indexing the array via array[3] is equivalent to *(array + 3), where array is a pointer to &array[0].  This will result in undefined behavior.\nOne way to catch this sometimes in C is to use a static checker, such as splint.  If you run:\nsplint +bounds array.c\n\non,\nint main(void)\n{\n    int array[1];\n\n    array[1] = 1;\n\n    return 0;\n}\n\nthen you will get the warning:\n\narray.c: (in function main)\n  array.c:5:9: Likely out-of-bounds\n  store:\n      array[1]\n      Unable to resolve constraint:\n      requires 0 >= 1\n       needed to satisfy precondition:\n      requires maxSet(array @ array.c:5:9) >= 1   A memory write may\n  write to an address beyond the\n  allocated buffer.\n\n', u"\nUndefined behavior working in your favor.  Whatever memory you're clobbering apparently isn't holding anything important.  Note that C and C++ do not do bounds checking on arrays, so stuff like that isn't going to be caught at compile or run time.  \n", u"\nRun this through Valgrind and you might see an error.\nAs Falaina pointed out, valgrind does not detect many instances of stack corruption.  I just tried the sample under valgrind, and it does indeed report zero errors.  However, Valgrind can be instrumental in finding many other types of memory problems, it's just not particularly useful in this case unless you modify your bulid to include the --stack-check option.  If you build and run the sample as \ng++ --stack-check -W -Wall errorRange.cpp -o errorRange\nvalgrind ./errorRange\n\nvalgrind will report an error.\n", u'\nHint\nIf you want to have fast constraint size arrays with range error check, try using boost::array, (also std::tr1::array from <tr1/array> it will be standard container in next C++ specification). It\'s much faster then std::vector. It reserve memory on heap or inside class instance, just like int array[].\nThis is simple sample code:\n#include <iostream>\n#include <boost/array.hpp>\nint main()\n{\n    boost::array<int,2> array;\n    array.at(0) = 1; // checking index is inside range\n    array[1] = 2;    // no error check, as fast as int array[2];\n    try\n    {\n       // index is inside range\n       std::cout << "array.at(0) = " << array.at(0) << std::endl;\n\n       // index is outside range, throwing exception\n       std::cout << "array.at(2) = " << array.at(2) << std::endl; \n\n       // never comes here\n       std::cout << "array.at(1) = " << array.at(1) << std::endl;  \n    }\n    catch(const std::out_of_range& r)\n    {\n        std::cout << "Something goes wrong: " << r.what() << std::endl;\n    }\n    return 0;\n}\n\nThis program will print:\narray.at(0) = 1\nSomething goes wrong: array<>: index out of range\n\n', u"\nWhen you initialize the array with int array[2], space for 2 integers is allocated; but the identifier array simply points to the beginning of that space. When you then access array[3] and array[4], the compiler then simply increments that address to point to where those values would be, if the array was long enough; try accessing something like array[42] without initializing it first, you'll end up getting whatever value happened to already be in memory at that location.\nEdit:\nMore info on pointers/arrays: http://home.netcom.com/~tjensen/ptr/pointers.htm\n"]
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n", u"\ng++ does not check for array bounds, and you may be overwriting something with 3,4 but nothing really important, if you try with higher numbers you'll get a crash.\nYou are just overwriting parts of the stack that are not used, you could continue till you reach the end of the allocated space for the stack and it'd crash eventually\nEDIT:\nYou have no way of dealing with that, maybe a static code analyzer could reveal those failures, but that's too simple, you may have similar(but more complex) failures undetected even for static analyzers\n", u'\nIt\'s undefined behavior as far as I know. Run a larger program with that and it will crash somewhere along the way. Bounds checking is not a part of raw arrays (or even std::vector).\nUse std::vector with std::vector::iterator\'s instead so you don\'t have to worry about it.\nEdit: \nJust for fun, run this and see how long until you crash:\nint main()\n{\n   int array[1];\n\n   for (int i = 0; i != 100000; i++)\n   {\n       array[i] = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nEdit2: \nDon\'t run that.\nEdit3:\nOK, here is a quick lesson on arrays and their relationships with pointers:\nWhen you use array indexing, you are really using a pointer in disguise (called a "reference"), that is automatically dereferenced. This is why instead of *(array[1]), array[1] automatically returns the value at that value.\nWhen you have a pointer to an array, like this:\nint array[5];\nint *ptr = array;\n\nThen the "array" in the second declaration is really decaying to a pointer to the first array. This is equivalent behavior to this:\nint *ptr = &array[0];\n\nWhen you try to access beyond what you allocated, you are really just using a pointer to other memory (which C++ won\'t complain about). Taking my example program above, that is equivalent to this:\nint main()\n{\n   int array[1];\n   int *ptr = array;\n\n   for (int i = 0; i != 100000; i++, ptr++)\n   {\n       *ptr = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nThe compiler won\'t complain because in programming, you often have to communicate with other programs, especially the operating system. This is done with pointers quite a bit. \n', u'\nYou are certainly overwriting your stack, but the program is simple enough that effects of this go unnoticed.\n', u'\nC or C++ will not check the bounds of an array access.\nYou are allocating the array on the stack.  Indexing the array via array[3] is equivalent to *(array + 3), where array is a pointer to &array[0].  This will result in undefined behavior.\nOne way to catch this sometimes in C is to use a static checker, such as splint.  If you run:\nsplint +bounds array.c\n\non,\nint main(void)\n{\n    int array[1];\n\n    array[1] = 1;\n\n    return 0;\n}\n\nthen you will get the warning:\n\narray.c: (in function main)\n  array.c:5:9: Likely out-of-bounds\n  store:\n      array[1]\n      Unable to resolve constraint:\n      requires 0 >= 1\n       needed to satisfy precondition:\n      requires maxSet(array @ array.c:5:9) >= 1   A memory write may\n  write to an address beyond the\n  allocated buffer.\n\n', u"\nUndefined behavior working in your favor.  Whatever memory you're clobbering apparently isn't holding anything important.  Note that C and C++ do not do bounds checking on arrays, so stuff like that isn't going to be caught at compile or run time.  \n", u"\nRun this through Valgrind and you might see an error.\nAs Falaina pointed out, valgrind does not detect many instances of stack corruption.  I just tried the sample under valgrind, and it does indeed report zero errors.  However, Valgrind can be instrumental in finding many other types of memory problems, it's just not particularly useful in this case unless you modify your bulid to include the --stack-check option.  If you build and run the sample as \ng++ --stack-check -W -Wall errorRange.cpp -o errorRange\nvalgrind ./errorRange\n\nvalgrind will report an error.\n", u'\nHint\nIf you want to have fast constraint size arrays with range error check, try using boost::array, (also std::tr1::array from <tr1/array> it will be standard container in next C++ specification). It\'s much faster then std::vector. It reserve memory on heap or inside class instance, just like int array[].\nThis is simple sample code:\n#include <iostream>\n#include <boost/array.hpp>\nint main()\n{\n    boost::array<int,2> array;\n    array.at(0) = 1; // checking index is inside range\n    array[1] = 2;    // no error check, as fast as int array[2];\n    try\n    {\n       // index is inside range\n       std::cout << "array.at(0) = " << array.at(0) << std::endl;\n\n       // index is outside range, throwing exception\n       std::cout << "array.at(2) = " << array.at(2) << std::endl; \n\n       // never comes here\n       std::cout << "array.at(1) = " << array.at(1) << std::endl;  \n    }\n    catch(const std::out_of_range& r)\n    {\n        std::cout << "Something goes wrong: " << r.what() << std::endl;\n    }\n    return 0;\n}\n\nThis program will print:\narray.at(0) = 1\nSomething goes wrong: array<>: index out of range\n\n', u"\nWhen you initialize the array with int array[2], space for 2 integers is allocated; but the identifier array simply points to the beginning of that space. When you then access array[3] and array[4], the compiler then simply increments that address to point to where those values would be, if the array was long enough; try accessing something like array[42] without initializing it first, you'll end up getting whatever value happened to already be in memory at that location.\nEdit:\nMore info on pointers/arrays: http://home.netcom.com/~tjensen/ptr/pointers.htm\n", u'\nwhen you declare int array[2]; you reserve 2 memory spaces of 4 bytes each(32bit program).\nif you type array[4] in your code it still corresponds to a valid call but only at run time will it throw an unhandled exception.  C++ uses manual memory management. This is actually a security flaw that was used for hacking programs\nthis can help understanding:\nint * somepointer;   \nsomepointer[0]=somepointer[5];\n']
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n", u"\ng++ does not check for array bounds, and you may be overwriting something with 3,4 but nothing really important, if you try with higher numbers you'll get a crash.\nYou are just overwriting parts of the stack that are not used, you could continue till you reach the end of the allocated space for the stack and it'd crash eventually\nEDIT:\nYou have no way of dealing with that, maybe a static code analyzer could reveal those failures, but that's too simple, you may have similar(but more complex) failures undetected even for static analyzers\n", u'\nIt\'s undefined behavior as far as I know. Run a larger program with that and it will crash somewhere along the way. Bounds checking is not a part of raw arrays (or even std::vector).\nUse std::vector with std::vector::iterator\'s instead so you don\'t have to worry about it.\nEdit: \nJust for fun, run this and see how long until you crash:\nint main()\n{\n   int array[1];\n\n   for (int i = 0; i != 100000; i++)\n   {\n       array[i] = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nEdit2: \nDon\'t run that.\nEdit3:\nOK, here is a quick lesson on arrays and their relationships with pointers:\nWhen you use array indexing, you are really using a pointer in disguise (called a "reference"), that is automatically dereferenced. This is why instead of *(array[1]), array[1] automatically returns the value at that value.\nWhen you have a pointer to an array, like this:\nint array[5];\nint *ptr = array;\n\nThen the "array" in the second declaration is really decaying to a pointer to the first array. This is equivalent behavior to this:\nint *ptr = &array[0];\n\nWhen you try to access beyond what you allocated, you are really just using a pointer to other memory (which C++ won\'t complain about). Taking my example program above, that is equivalent to this:\nint main()\n{\n   int array[1];\n   int *ptr = array;\n\n   for (int i = 0; i != 100000; i++, ptr++)\n   {\n       *ptr = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nThe compiler won\'t complain because in programming, you often have to communicate with other programs, especially the operating system. This is done with pointers quite a bit. \n', u'\nYou are certainly overwriting your stack, but the program is simple enough that effects of this go unnoticed.\n', u'\nC or C++ will not check the bounds of an array access.\nYou are allocating the array on the stack.  Indexing the array via array[3] is equivalent to *(array + 3), where array is a pointer to &array[0].  This will result in undefined behavior.\nOne way to catch this sometimes in C is to use a static checker, such as splint.  If you run:\nsplint +bounds array.c\n\non,\nint main(void)\n{\n    int array[1];\n\n    array[1] = 1;\n\n    return 0;\n}\n\nthen you will get the warning:\n\narray.c: (in function main)\n  array.c:5:9: Likely out-of-bounds\n  store:\n      array[1]\n      Unable to resolve constraint:\n      requires 0 >= 1\n       needed to satisfy precondition:\n      requires maxSet(array @ array.c:5:9) >= 1   A memory write may\n  write to an address beyond the\n  allocated buffer.\n\n', u"\nUndefined behavior working in your favor.  Whatever memory you're clobbering apparently isn't holding anything important.  Note that C and C++ do not do bounds checking on arrays, so stuff like that isn't going to be caught at compile or run time.  \n", u"\nRun this through Valgrind and you might see an error.\nAs Falaina pointed out, valgrind does not detect many instances of stack corruption.  I just tried the sample under valgrind, and it does indeed report zero errors.  However, Valgrind can be instrumental in finding many other types of memory problems, it's just not particularly useful in this case unless you modify your bulid to include the --stack-check option.  If you build and run the sample as \ng++ --stack-check -W -Wall errorRange.cpp -o errorRange\nvalgrind ./errorRange\n\nvalgrind will report an error.\n", u'\nHint\nIf you want to have fast constraint size arrays with range error check, try using boost::array, (also std::tr1::array from <tr1/array> it will be standard container in next C++ specification). It\'s much faster then std::vector. It reserve memory on heap or inside class instance, just like int array[].\nThis is simple sample code:\n#include <iostream>\n#include <boost/array.hpp>\nint main()\n{\n    boost::array<int,2> array;\n    array.at(0) = 1; // checking index is inside range\n    array[1] = 2;    // no error check, as fast as int array[2];\n    try\n    {\n       // index is inside range\n       std::cout << "array.at(0) = " << array.at(0) << std::endl;\n\n       // index is outside range, throwing exception\n       std::cout << "array.at(2) = " << array.at(2) << std::endl; \n\n       // never comes here\n       std::cout << "array.at(1) = " << array.at(1) << std::endl;  \n    }\n    catch(const std::out_of_range& r)\n    {\n        std::cout << "Something goes wrong: " << r.what() << std::endl;\n    }\n    return 0;\n}\n\nThis program will print:\narray.at(0) = 1\nSomething goes wrong: array<>: index out of range\n\n', u"\nWhen you initialize the array with int array[2], space for 2 integers is allocated; but the identifier array simply points to the beginning of that space. When you then access array[3] and array[4], the compiler then simply increments that address to point to where those values would be, if the array was long enough; try accessing something like array[42] without initializing it first, you'll end up getting whatever value happened to already be in memory at that location.\nEdit:\nMore info on pointers/arrays: http://home.netcom.com/~tjensen/ptr/pointers.htm\n", u'\nwhen you declare int array[2]; you reserve 2 memory spaces of 4 bytes each(32bit program).\nif you type array[4] in your code it still corresponds to a valid call but only at run time will it throw an unhandled exception.  C++ uses manual memory management. This is actually a security flaw that was used for hacking programs\nthis can help understanding:\nint * somepointer;   \nsomepointer[0]=somepointer[5];\n', u'\nAs I understand, local variables are allocated on stack, so going out of bounds on your own stack can only overwrite some other local variable, unless you go oob too much and exceed your stack size.\nSince you have no other variables declared in your function - it does not cause any side effects. Try declaring another variable/array right after your first one and see what will happen with it.\n']
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n", u"\ng++ does not check for array bounds, and you may be overwriting something with 3,4 but nothing really important, if you try with higher numbers you'll get a crash.\nYou are just overwriting parts of the stack that are not used, you could continue till you reach the end of the allocated space for the stack and it'd crash eventually\nEDIT:\nYou have no way of dealing with that, maybe a static code analyzer could reveal those failures, but that's too simple, you may have similar(but more complex) failures undetected even for static analyzers\n", u'\nIt\'s undefined behavior as far as I know. Run a larger program with that and it will crash somewhere along the way. Bounds checking is not a part of raw arrays (or even std::vector).\nUse std::vector with std::vector::iterator\'s instead so you don\'t have to worry about it.\nEdit: \nJust for fun, run this and see how long until you crash:\nint main()\n{\n   int array[1];\n\n   for (int i = 0; i != 100000; i++)\n   {\n       array[i] = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nEdit2: \nDon\'t run that.\nEdit3:\nOK, here is a quick lesson on arrays and their relationships with pointers:\nWhen you use array indexing, you are really using a pointer in disguise (called a "reference"), that is automatically dereferenced. This is why instead of *(array[1]), array[1] automatically returns the value at that value.\nWhen you have a pointer to an array, like this:\nint array[5];\nint *ptr = array;\n\nThen the "array" in the second declaration is really decaying to a pointer to the first array. This is equivalent behavior to this:\nint *ptr = &array[0];\n\nWhen you try to access beyond what you allocated, you are really just using a pointer to other memory (which C++ won\'t complain about). Taking my example program above, that is equivalent to this:\nint main()\n{\n   int array[1];\n   int *ptr = array;\n\n   for (int i = 0; i != 100000; i++, ptr++)\n   {\n       *ptr = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nThe compiler won\'t complain because in programming, you often have to communicate with other programs, especially the operating system. This is done with pointers quite a bit. \n', u'\nYou are certainly overwriting your stack, but the program is simple enough that effects of this go unnoticed.\n', u'\nC or C++ will not check the bounds of an array access.\nYou are allocating the array on the stack.  Indexing the array via array[3] is equivalent to *(array + 3), where array is a pointer to &array[0].  This will result in undefined behavior.\nOne way to catch this sometimes in C is to use a static checker, such as splint.  If you run:\nsplint +bounds array.c\n\non,\nint main(void)\n{\n    int array[1];\n\n    array[1] = 1;\n\n    return 0;\n}\n\nthen you will get the warning:\n\narray.c: (in function main)\n  array.c:5:9: Likely out-of-bounds\n  store:\n      array[1]\n      Unable to resolve constraint:\n      requires 0 >= 1\n       needed to satisfy precondition:\n      requires maxSet(array @ array.c:5:9) >= 1   A memory write may\n  write to an address beyond the\n  allocated buffer.\n\n', u"\nUndefined behavior working in your favor.  Whatever memory you're clobbering apparently isn't holding anything important.  Note that C and C++ do not do bounds checking on arrays, so stuff like that isn't going to be caught at compile or run time.  \n", u"\nRun this through Valgrind and you might see an error.\nAs Falaina pointed out, valgrind does not detect many instances of stack corruption.  I just tried the sample under valgrind, and it does indeed report zero errors.  However, Valgrind can be instrumental in finding many other types of memory problems, it's just not particularly useful in this case unless you modify your bulid to include the --stack-check option.  If you build and run the sample as \ng++ --stack-check -W -Wall errorRange.cpp -o errorRange\nvalgrind ./errorRange\n\nvalgrind will report an error.\n", u'\nHint\nIf you want to have fast constraint size arrays with range error check, try using boost::array, (also std::tr1::array from <tr1/array> it will be standard container in next C++ specification). It\'s much faster then std::vector. It reserve memory on heap or inside class instance, just like int array[].\nThis is simple sample code:\n#include <iostream>\n#include <boost/array.hpp>\nint main()\n{\n    boost::array<int,2> array;\n    array.at(0) = 1; // checking index is inside range\n    array[1] = 2;    // no error check, as fast as int array[2];\n    try\n    {\n       // index is inside range\n       std::cout << "array.at(0) = " << array.at(0) << std::endl;\n\n       // index is outside range, throwing exception\n       std::cout << "array.at(2) = " << array.at(2) << std::endl; \n\n       // never comes here\n       std::cout << "array.at(1) = " << array.at(1) << std::endl;  \n    }\n    catch(const std::out_of_range& r)\n    {\n        std::cout << "Something goes wrong: " << r.what() << std::endl;\n    }\n    return 0;\n}\n\nThis program will print:\narray.at(0) = 1\nSomething goes wrong: array<>: index out of range\n\n', u"\nWhen you initialize the array with int array[2], space for 2 integers is allocated; but the identifier array simply points to the beginning of that space. When you then access array[3] and array[4], the compiler then simply increments that address to point to where those values would be, if the array was long enough; try accessing something like array[42] without initializing it first, you'll end up getting whatever value happened to already be in memory at that location.\nEdit:\nMore info on pointers/arrays: http://home.netcom.com/~tjensen/ptr/pointers.htm\n", u'\nwhen you declare int array[2]; you reserve 2 memory spaces of 4 bytes each(32bit program).\nif you type array[4] in your code it still corresponds to a valid call but only at run time will it throw an unhandled exception.  C++ uses manual memory management. This is actually a security flaw that was used for hacking programs\nthis can help understanding:\nint * somepointer;   \nsomepointer[0]=somepointer[5];\n', u'\nAs I understand, local variables are allocated on stack, so going out of bounds on your own stack can only overwrite some other local variable, unless you go oob too much and exceed your stack size.\nSince you have no other variables declared in your function - it does not cause any side effects. Try declaring another variable/array right after your first one and see what will happen with it.\n', u"\nWhen you write 'array[index]' in C it translates it to machine instructions.\nThe translation is goes something like: \n\n'get the address of array'\n'get the size of the type of objects array is made up of'\n'multiply the size of the type by index'\n'add the result to the address of array'\n'read what's at the resulting address'\n\nThe result addresses something which may, or may not, be part of the array. In exchange for the blazing speed of machine instructions you lose the safety net of the computer checking things for you. If you're meticulous and careful it's not a problem. If you're sloppy or make a mistake you get burnt. Sometimes it might generate an invalid instruction that causes an exception, sometimes not.\n"]
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n", u"\ng++ does not check for array bounds, and you may be overwriting something with 3,4 but nothing really important, if you try with higher numbers you'll get a crash.\nYou are just overwriting parts of the stack that are not used, you could continue till you reach the end of the allocated space for the stack and it'd crash eventually\nEDIT:\nYou have no way of dealing with that, maybe a static code analyzer could reveal those failures, but that's too simple, you may have similar(but more complex) failures undetected even for static analyzers\n", u'\nIt\'s undefined behavior as far as I know. Run a larger program with that and it will crash somewhere along the way. Bounds checking is not a part of raw arrays (or even std::vector).\nUse std::vector with std::vector::iterator\'s instead so you don\'t have to worry about it.\nEdit: \nJust for fun, run this and see how long until you crash:\nint main()\n{\n   int array[1];\n\n   for (int i = 0; i != 100000; i++)\n   {\n       array[i] = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nEdit2: \nDon\'t run that.\nEdit3:\nOK, here is a quick lesson on arrays and their relationships with pointers:\nWhen you use array indexing, you are really using a pointer in disguise (called a "reference"), that is automatically dereferenced. This is why instead of *(array[1]), array[1] automatically returns the value at that value.\nWhen you have a pointer to an array, like this:\nint array[5];\nint *ptr = array;\n\nThen the "array" in the second declaration is really decaying to a pointer to the first array. This is equivalent behavior to this:\nint *ptr = &array[0];\n\nWhen you try to access beyond what you allocated, you are really just using a pointer to other memory (which C++ won\'t complain about). Taking my example program above, that is equivalent to this:\nint main()\n{\n   int array[1];\n   int *ptr = array;\n\n   for (int i = 0; i != 100000; i++, ptr++)\n   {\n       *ptr = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nThe compiler won\'t complain because in programming, you often have to communicate with other programs, especially the operating system. This is done with pointers quite a bit. \n', u'\nYou are certainly overwriting your stack, but the program is simple enough that effects of this go unnoticed.\n', u'\nC or C++ will not check the bounds of an array access.\nYou are allocating the array on the stack.  Indexing the array via array[3] is equivalent to *(array + 3), where array is a pointer to &array[0].  This will result in undefined behavior.\nOne way to catch this sometimes in C is to use a static checker, such as splint.  If you run:\nsplint +bounds array.c\n\non,\nint main(void)\n{\n    int array[1];\n\n    array[1] = 1;\n\n    return 0;\n}\n\nthen you will get the warning:\n\narray.c: (in function main)\n  array.c:5:9: Likely out-of-bounds\n  store:\n      array[1]\n      Unable to resolve constraint:\n      requires 0 >= 1\n       needed to satisfy precondition:\n      requires maxSet(array @ array.c:5:9) >= 1   A memory write may\n  write to an address beyond the\n  allocated buffer.\n\n', u"\nUndefined behavior working in your favor.  Whatever memory you're clobbering apparently isn't holding anything important.  Note that C and C++ do not do bounds checking on arrays, so stuff like that isn't going to be caught at compile or run time.  \n", u"\nRun this through Valgrind and you might see an error.\nAs Falaina pointed out, valgrind does not detect many instances of stack corruption.  I just tried the sample under valgrind, and it does indeed report zero errors.  However, Valgrind can be instrumental in finding many other types of memory problems, it's just not particularly useful in this case unless you modify your bulid to include the --stack-check option.  If you build and run the sample as \ng++ --stack-check -W -Wall errorRange.cpp -o errorRange\nvalgrind ./errorRange\n\nvalgrind will report an error.\n", u'\nHint\nIf you want to have fast constraint size arrays with range error check, try using boost::array, (also std::tr1::array from <tr1/array> it will be standard container in next C++ specification). It\'s much faster then std::vector. It reserve memory on heap or inside class instance, just like int array[].\nThis is simple sample code:\n#include <iostream>\n#include <boost/array.hpp>\nint main()\n{\n    boost::array<int,2> array;\n    array.at(0) = 1; // checking index is inside range\n    array[1] = 2;    // no error check, as fast as int array[2];\n    try\n    {\n       // index is inside range\n       std::cout << "array.at(0) = " << array.at(0) << std::endl;\n\n       // index is outside range, throwing exception\n       std::cout << "array.at(2) = " << array.at(2) << std::endl; \n\n       // never comes here\n       std::cout << "array.at(1) = " << array.at(1) << std::endl;  \n    }\n    catch(const std::out_of_range& r)\n    {\n        std::cout << "Something goes wrong: " << r.what() << std::endl;\n    }\n    return 0;\n}\n\nThis program will print:\narray.at(0) = 1\nSomething goes wrong: array<>: index out of range\n\n', u"\nWhen you initialize the array with int array[2], space for 2 integers is allocated; but the identifier array simply points to the beginning of that space. When you then access array[3] and array[4], the compiler then simply increments that address to point to where those values would be, if the array was long enough; try accessing something like array[42] without initializing it first, you'll end up getting whatever value happened to already be in memory at that location.\nEdit:\nMore info on pointers/arrays: http://home.netcom.com/~tjensen/ptr/pointers.htm\n", u'\nwhen you declare int array[2]; you reserve 2 memory spaces of 4 bytes each(32bit program).\nif you type array[4] in your code it still corresponds to a valid call but only at run time will it throw an unhandled exception.  C++ uses manual memory management. This is actually a security flaw that was used for hacking programs\nthis can help understanding:\nint * somepointer;   \nsomepointer[0]=somepointer[5];\n', u'\nAs I understand, local variables are allocated on stack, so going out of bounds on your own stack can only overwrite some other local variable, unless you go oob too much and exceed your stack size.\nSince you have no other variables declared in your function - it does not cause any side effects. Try declaring another variable/array right after your first one and see what will happen with it.\n', u"\nWhen you write 'array[index]' in C it translates it to machine instructions.\nThe translation is goes something like: \n\n'get the address of array'\n'get the size of the type of objects array is made up of'\n'multiply the size of the type by index'\n'add the result to the address of array'\n'read what's at the resulting address'\n\nThe result addresses something which may, or may not, be part of the array. In exchange for the blazing speed of machine instructions you lose the safety net of the computer checking things for you. If you're meticulous and careful it's not a problem. If you're sloppy or make a mistake you get burnt. Sometimes it might generate an invalid instruction that causes an exception, sometimes not.\n", u"\nA nice approach that i have seen often and I had been used actually is to inject some NULL type element (or a created one, like uint THIS_IS_INFINITY = 82862863263;) at end of the array.\nThen at the loop condition check, TYPE *pagesWords is some kind of pointer array:\nint pagesWordsLength = sizeof(pagesWords) / sizeof(pagesWords[0]);\n\nrealloc (pagesWords, sizeof(pagesWords[0]) * (pagesWordsLength + 1);\n\npagesWords[pagesWordsLength] = MY_NULL;\n\nfor (uint i = 0; i < 1000; i++)\n{\n  if (pagesWords[i] == MY_NULL)\n  {\n    break;\n  }\n}\n\nThis solution won't word if array is filled with struct types.\n"]
New answer:
[u'\nWelcome to every C/C++ programmers bestest friend: Undefined Behavior. \nThere is a lot that is not specified by the language standard, for a variety of reasons. This is one of them.\nIn general, whenever you encounter undefined behavior, anything might happen. The application may crash, it may freeze, it may eject your CD-ROM drive or make demons come out of your nose. It may format your harddrive or email all your porn to your grandmother.\nIt may even, if you are really unlucky, appear to work correctly.\nThe language simply says what should happen if you access the elements within the bounds of an array. It is left undefined what happens if you go out of bounds. It might seem to work today, on your compiler, but it is not legal C or C++, and there is no guarantee that it\'ll still work the next time you run the program. Or that it hasn\'t overwritten essential data even now, and you just haven\'t encountered the problems that is going to cause yet.\nAs for why there is no bounds checking, there are a couple aspects to the answer:\n\nAn array is a leftover from C. C arrays are about as primitive as you can get. Just a sequence of elements with contiguous addresses. There is no bounds checking because it is simply exposing raw memory. Implementing a robust bounds-checking mechanism would have been almost impossible in C.\nIn C++, bounds-checking is possible on class types. But an array is still the plain old C-compatible one. it is not a class. Further, C++ is also built on another rule which makes bounds-checking non-ideal. The C++ guiding principle is "you don\'t pay for what you don\'t use". If your code is correct, you don\'t need bounds-checking, and you shouldn\'t be forced to pay for the overhead of runtime bounds-checking.\nSo C++ offers the std::vector class template, which allows both. operator[] is designed to be efficient. The language standard does not require that it performs bounds checking (although it does not forbid it either). A vector also has the at() member function which is guaranteed to perform bounds-checking. So in C++, you get the best of both worlds if you use a vector. You get array-like performance without bounds-checking, and you get the ability to use bounds-checked access when you want it.\n\n', u"\nUsing g++, you can add the command line option:  -fstack-protector-all.\nOn your example it resulted in the following:\n> g++ -o t -fstack-protector-all t.cc\n> ./t\n3\n4\n/bin/bash: line 1: 15450 Segmentation fault      ./t\n\nIt doesn't really help you find or solve the problem, but at least the segfault will let you know that something is wrong.\n", u"\ng++ does not check for array bounds, and you may be overwriting something with 3,4 but nothing really important, if you try with higher numbers you'll get a crash.\nYou are just overwriting parts of the stack that are not used, you could continue till you reach the end of the allocated space for the stack and it'd crash eventually\nEDIT:\nYou have no way of dealing with that, maybe a static code analyzer could reveal those failures, but that's too simple, you may have similar(but more complex) failures undetected even for static analyzers\n", u'\nIt\'s undefined behavior as far as I know. Run a larger program with that and it will crash somewhere along the way. Bounds checking is not a part of raw arrays (or even std::vector).\nUse std::vector with std::vector::iterator\'s instead so you don\'t have to worry about it.\nEdit: \nJust for fun, run this and see how long until you crash:\nint main()\n{\n   int array[1];\n\n   for (int i = 0; i != 100000; i++)\n   {\n       array[i] = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nEdit2: \nDon\'t run that.\nEdit3:\nOK, here is a quick lesson on arrays and their relationships with pointers:\nWhen you use array indexing, you are really using a pointer in disguise (called a "reference"), that is automatically dereferenced. This is why instead of *(array[1]), array[1] automatically returns the value at that value.\nWhen you have a pointer to an array, like this:\nint array[5];\nint *ptr = array;\n\nThen the "array" in the second declaration is really decaying to a pointer to the first array. This is equivalent behavior to this:\nint *ptr = &array[0];\n\nWhen you try to access beyond what you allocated, you are really just using a pointer to other memory (which C++ won\'t complain about). Taking my example program above, that is equivalent to this:\nint main()\n{\n   int array[1];\n   int *ptr = array;\n\n   for (int i = 0; i != 100000; i++, ptr++)\n   {\n       *ptr = i;\n   }\n\n   return 0; //will be lucky to ever reach this\n}\n\nThe compiler won\'t complain because in programming, you often have to communicate with other programs, especially the operating system. This is done with pointers quite a bit. \n', u'\nYou are certainly overwriting your stack, but the program is simple enough that effects of this go unnoticed.\n', u'\nC or C++ will not check the bounds of an array access.\nYou are allocating the array on the stack.  Indexing the array via array[3] is equivalent to *(array + 3), where array is a pointer to &array[0].  This will result in undefined behavior.\nOne way to catch this sometimes in C is to use a static checker, such as splint.  If you run:\nsplint +bounds array.c\n\non,\nint main(void)\n{\n    int array[1];\n\n    array[1] = 1;\n\n    return 0;\n}\n\nthen you will get the warning:\n\narray.c: (in function main)\n  array.c:5:9: Likely out-of-bounds\n  store:\n      array[1]\n      Unable to resolve constraint:\n      requires 0 >= 1\n       needed to satisfy precondition:\n      requires maxSet(array @ array.c:5:9) >= 1   A memory write may\n  write to an address beyond the\n  allocated buffer.\n\n', u"\nUndefined behavior working in your favor.  Whatever memory you're clobbering apparently isn't holding anything important.  Note that C and C++ do not do bounds checking on arrays, so stuff like that isn't going to be caught at compile or run time.  \n", u"\nRun this through Valgrind and you might see an error.\nAs Falaina pointed out, valgrind does not detect many instances of stack corruption.  I just tried the sample under valgrind, and it does indeed report zero errors.  However, Valgrind can be instrumental in finding many other types of memory problems, it's just not particularly useful in this case unless you modify your bulid to include the --stack-check option.  If you build and run the sample as \ng++ --stack-check -W -Wall errorRange.cpp -o errorRange\nvalgrind ./errorRange\n\nvalgrind will report an error.\n", u'\nHint\nIf you want to have fast constraint size arrays with range error check, try using boost::array, (also std::tr1::array from <tr1/array> it will be standard container in next C++ specification). It\'s much faster then std::vector. It reserve memory on heap or inside class instance, just like int array[].\nThis is simple sample code:\n#include <iostream>\n#include <boost/array.hpp>\nint main()\n{\n    boost::array<int,2> array;\n    array.at(0) = 1; // checking index is inside range\n    array[1] = 2;    // no error check, as fast as int array[2];\n    try\n    {\n       // index is inside range\n       std::cout << "array.at(0) = " << array.at(0) << std::endl;\n\n       // index is outside range, throwing exception\n       std::cout << "array.at(2) = " << array.at(2) << std::endl; \n\n       // never comes here\n       std::cout << "array.at(1) = " << array.at(1) << std::endl;  \n    }\n    catch(const std::out_of_range& r)\n    {\n        std::cout << "Something goes wrong: " << r.what() << std::endl;\n    }\n    return 0;\n}\n\nThis program will print:\narray.at(0) = 1\nSomething goes wrong: array<>: index out of range\n\n', u"\nWhen you initialize the array with int array[2], space for 2 integers is allocated; but the identifier array simply points to the beginning of that space. When you then access array[3] and array[4], the compiler then simply increments that address to point to where those values would be, if the array was long enough; try accessing something like array[42] without initializing it first, you'll end up getting whatever value happened to already be in memory at that location.\nEdit:\nMore info on pointers/arrays: http://home.netcom.com/~tjensen/ptr/pointers.htm\n", u'\nwhen you declare int array[2]; you reserve 2 memory spaces of 4 bytes each(32bit program).\nif you type array[4] in your code it still corresponds to a valid call but only at run time will it throw an unhandled exception.  C++ uses manual memory management. This is actually a security flaw that was used for hacking programs\nthis can help understanding:\nint * somepointer;   \nsomepointer[0]=somepointer[5];\n', u'\nAs I understand, local variables are allocated on stack, so going out of bounds on your own stack can only overwrite some other local variable, unless you go oob too much and exceed your stack size.\nSince you have no other variables declared in your function - it does not cause any side effects. Try declaring another variable/array right after your first one and see what will happen with it.\n', u"\nWhen you write 'array[index]' in C it translates it to machine instructions.\nThe translation is goes something like: \n\n'get the address of array'\n'get the size of the type of objects array is made up of'\n'multiply the size of the type by index'\n'add the result to the address of array'\n'read what's at the resulting address'\n\nThe result addresses something which may, or may not, be part of the array. In exchange for the blazing speed of machine instructions you lose the safety net of the computer checking things for you. If you're meticulous and careful it's not a problem. If you're sloppy or make a mistake you get burnt. Sometimes it might generate an invalid instruction that causes an exception, sometimes not.\n", u"\nA nice approach that i have seen often and I had been used actually is to inject some NULL type element (or a created one, like uint THIS_IS_INFINITY = 82862863263;) at end of the array.\nThen at the loop condition check, TYPE *pagesWords is some kind of pointer array:\nint pagesWordsLength = sizeof(pagesWords) / sizeof(pagesWords[0]);\n\nrealloc (pagesWords, sizeof(pagesWords[0]) * (pagesWordsLength + 1);\n\npagesWords[pagesWordsLength] = MY_NULL;\n\nfor (uint i = 0; i < 1000; i++)\n{\n  if (pagesWords[i] == MY_NULL)\n  {\n    break;\n  }\n}\n\nThis solution won't word if array is filled with struct types.\n", u'\nAs mentioned now in the question using std::vector::at will solve the problem and make a bound check before accessing.\nIf you need a constant size array that is located on the stack as your first code use the C++11 new container std::array; as vector there is std::array::at function. In fact the function exists in all standard containers in which it have a meaning,i.e, where operator[] is defined :( deque, map, unordered_map) with the exception of std::bitset in which it is called std::bitset::test.\n']
Get a new question page!


This question already has an answer here:


Accessing an array out of bounds gives no error, why?

                    15 answers
                


No out of bounds error

                    7 answers
                



I was trying to use dynamic arrays in my project, but I can't understand why I can do this:
int *a;
a = new int[1];
a[100]=2;

cout << a[100] << endl;

I mean, I created the array 'a' which can store 1 element, so why am I able to use the 100th element of the array? It shouldn't exist, should it?

New answer:
[u"\nSome basic stuff:\nYour array is stored in memory, every cell has its own address. The name of your array a points to the place in memory where it starts. From there a[0], a[1] or just a[index] is the same thing as you'd type*(a+index) - it gets/sets value placed under (a+index) index in a memory.\nIn fact you can overwrite any of these addresses even if they aren't being used by your variables (arrays etc.). Of course you shouldnt do this, but your compilator won't be mad (you can also declare variable-length arrays, compilator might not care, but you should be aware of that).\nI tried to make it as simple as possible, there is no need to elaborate, I believe.\n"]
Get a new question page!

I have some C++ code that looks like this (simplified to the point of being useless, but I hope you get the idea). It fills a vector of functions in a loop and makes every function capture the loop counter by copy:
std::vector<std::function<int()>> v;
for(int i = 1; i < N; i++) {
   v.push_back([i]() {return i;});
}

for(auto f: v) {
   std::cout << f() << "\n";
}

I'm looking for the Rust equivalent of this. Currently, I have the following idea:
let mut v: Vec<Box<Fn() -> i32>> = vec![];
for i in 1..6 {
   v.push((|i| {Box::new(move || i)})(i));
}

for f in v {
   println!("{}", f());
}

It works correctly, but I'm not sure whether it is the preferred way. Is calling a helper function really needed to achieve this or is there a more idiomatic way?

New answer:
[u'\nHow about just:\nv.push(Box::new(move || i));\n\nA complete demo:\nfn main() {\n    let mut v: Vec<Box<Fn() -> i32>> = vec![];\n    for i in 1..6 {\n        v.push(Box::new(move || i));\n    }\n\n    for f in v {\n        println!("{}", f());\n    }\n}\n\n']
Get a new question page!

I want to debug a shared lib which is called by my program. The shared lib outputs to a separate log file: shared-lib.log. I would like to redirect the lib’s output to gdb. I tried the following:
(gdb) run myprogram shared-lib.log>1

(gdb) run myprogram shared-lib.log>/dev/stdout

But this doesn't work, also with full path name /var/log/shared-lib.log.

No answers for this question!
Get a new question page!

I'm using OpenCV 3.1 to recognition sign in number license plate. 
Problem is predict return the same value. 
My code training NU_SVM: 
svm = SVM::create();
svm->setType(SVM::NU_SVC);
svm->setKernel(SVM::RBF);
svm->setGamma(4.5);
svm->setCoef0(1);
svm->setDegree(5);
svm->setNu(0.02);
CvTermCriteria criteria = cvTermCriteria(CV_TERMCRIT_ITER + CV_TERMCRIT_EPS, 1.0e5, 1.0e-20);
svm->setTermCriteria(criteria);
svm->train(trainingDataMat, ml::ROW_SAMPLE, labelsMat);

My vector features after scaling
My vector features before scaling
Working on the same value:
When I using svmlib with parameters svm-train.exe -s 1 -t 2 -d 5 -g 4.5 -r 1 -c 1 -n 0.02 -p 0.1 -m 100 -e 0.001 -h 1 -b 0 -wi 1 -v 2 -q VFB.txt
I have Cross Validation Accuracy = 97.1429%.
But when I using OpenCV svm->predict() always return the same (maximum) value. Why? Can somebody help me?

No answers for this question!
Get a new question page!

I recently rebuilt Boost 1.59 using the compiler that comes with Microsoft Visual Studio 14.0 (2015). Before, when I compiled with MingW (gcc), I got 2 versions; debug and release. However, looking at the file list now, it looks like this:
2016-05-29  22:10             8ÿ450 libboost_atomic-vc140-mt-1_59.lib
2016-05-29  22:10            60ÿ080 libboost_atomic-vc140-mt-gd-1_59.lib
2016-05-29  22:10             8ÿ488 libboost_atomic-vc140-mt-s-1_59.lib
2016-05-29  22:08            60ÿ118 libboost_atomic-vc140-mt-sgd-1_59.lib
------
2016-05-29  22:10           320ÿ248 libboost_chrono-vc140-mt-1_59.lib
2016-05-29  22:10         2ÿ054ÿ488 libboost_chrono-vc140-mt-gd-1_59.lib
2016-05-29  22:10           321ÿ418 libboost_chrono-vc140-mt-s-1_59.lib
2016-05-29  22:10         1ÿ845ÿ708 libboost_chrono-vc140-mt-sgd-1_59.lib
2016-05-29  22:10           321ÿ322 libboost_chrono-vc140-s-1_59.lib
2016-05-29  22:10         1ÿ845ÿ612 libboost_chrono-vc140-sgd-1_59.lib
------
2016-05-29  22:10            55ÿ012 libboost_container-vc140-mt-1_59.lib
2016-05-29  22:10           192ÿ838 libboost_container-vc140-mt-gd-1_59.lib
2016-05-29  22:10            55ÿ298 libboost_container-vc140-mt-s-1_59.lib
2016-05-29  22:10           179ÿ142 libboost_container-vc140-mt-sgd-1_59.lib
2016-05-29  22:10            55ÿ266 libboost_container-vc140-s-1_59.lib
2016-05-29  22:10           179ÿ110 libboost_container-vc140-sgd-1_59.lib
------
2016-05-29  22:10           308ÿ192 libboost_context-vc140-mt-1_59.lib
2016-05-29  22:10         2ÿ178ÿ266 libboost_context-vc140-mt-gd-1_59.lib
2016-05-29  22:10           309ÿ750 libboost_context-vc140-mt-s-1_59.lib
2016-05-29  22:10         2ÿ082ÿ028 libboost_context-vc140-mt-sgd-1_59.lib
------
2016-05-29  22:10           336ÿ128 libboost_coroutine-vc140-mt-1_59.lib
2016-05-29  22:10         2ÿ591ÿ224 libboost_coroutine-vc140-mt-gd-1_59.lib
2016-05-29  22:10           337ÿ982 libboost_coroutine-vc140-mt-s-1_59.lib
2016-05-29  22:10         2ÿ425ÿ546 libboost_coroutine-vc140-mt-sgd-1_59.lib
2016-05-29  22:10           337ÿ886 libboost_coroutine-vc140-s-1_59.lib
2016-05-29  22:10         2ÿ425ÿ450 libboost_coroutine-vc140-sgd-1_59.lib
------
2016-05-29  22:10           691ÿ856 libboost_date_time-vc140-mt-1_59.lib
2016-05-29  22:10         2ÿ963ÿ132 libboost_date_time-vc140-mt-gd-1_59.lib
2016-05-29  22:10           728ÿ488 libboost_date_time-vc140-mt-s-1_59.lib
2016-05-29  22:10         2ÿ819ÿ108 libboost_date_time-vc140-mt-sgd-1_59.lib
2016-05-29  22:10           728ÿ392 libboost_date_time-vc140-s-1_59.lib
2016-05-29  22:10         2ÿ819ÿ012 libboost_date_time-vc140-sgd-1_59.lib
------
2016-05-29  22:10             1ÿ506 libboost_exception-vc140-mt-1_59.lib
2016-05-29  22:10            32ÿ214 libboost_exception-vc140-mt-gd-1_59.lib
2016-05-29  22:10             1ÿ546 libboost_exception-vc140-mt-s-1_59.lib
2016-05-29  22:10            32ÿ252 libboost_exception-vc140-mt-sgd-1_59.lib
2016-05-29  22:10             1ÿ514 libboost_exception-vc140-s-1_59.lib
2016-05-29  22:10            32ÿ220 libboost_exception-vc140-sgd-1_59.lib
------
2016-05-29  22:10           863ÿ302 libboost_filesystem-vc140-mt-1_59.lib
2016-05-29  22:10         5ÿ998ÿ290 libboost_filesystem-vc140-mt-gd-1_59.lib
2016-05-29  22:10           898ÿ982 libboost_filesystem-vc140-mt-s-1_59.lib
2016-05-29  22:10         5ÿ112ÿ310 libboost_filesystem-vc140-mt-sgd-1_59.lib
2016-05-29  22:10           898ÿ726 libboost_filesystem-vc140-s-1_59.lib
2016-05-29  22:10         5ÿ112ÿ054 libboost_filesystem-vc140-sgd-1_59.lib
------
2016-05-29  22:10         6ÿ363ÿ494 libboost_graph-vc140-mt-1_59.lib
2016-05-29  22:10        16ÿ243ÿ546 libboost_graph-vc140-mt-gd-1_59.lib
2016-05-29  22:10         6ÿ690ÿ912 libboost_graph-vc140-mt-s-1_59.lib
2016-05-29  22:10        16ÿ443ÿ534 libboost_graph-vc140-mt-sgd-1_59.lib
2016-05-29  22:10         6ÿ690ÿ848 libboost_graph-vc140-s-1_59.lib
2016-05-29  22:10        16ÿ443ÿ470 libboost_graph-vc140-sgd-1_59.lib
------
2016-05-29  22:10           473ÿ362 libboost_iostreams-vc140-mt-1_59.lib
2016-05-29  22:10         1ÿ815ÿ392 libboost_iostreams-vc140-mt-gd-1_59.lib
2016-05-29  22:10           474ÿ962 libboost_iostreams-vc140-mt-s-1_59.lib
2016-05-29  22:10         1ÿ574ÿ632 libboost_iostreams-vc140-mt-sgd-1_59.lib
2016-05-29  22:10           474ÿ898 libboost_iostreams-vc140-s-1_59.lib
2016-05-29  22:10         1ÿ574ÿ568 libboost_iostreams-vc140-sgd-1_59.lib
------
2016-05-29  22:10         7ÿ975ÿ322 libboost_locale-vc140-mt-1_59.lib
2016-05-29  22:10        28ÿ839ÿ386 libboost_locale-vc140-mt-gd-1_59.lib
2016-05-29  22:10         9ÿ119ÿ600 libboost_locale-vc140-mt-s-1_59.lib
2016-05-29  22:10        28ÿ089ÿ064 libboost_locale-vc140-mt-sgd-1_59.lib
------
2016-05-29  22:10        14ÿ657ÿ346 libboost_log-vc140-mt-1_59.lib
2016-05-29  22:10        62ÿ537ÿ226 libboost_log-vc140-mt-gd-1_59.lib
2016-05-29  22:10        16ÿ632ÿ428 libboost_log-vc140-mt-s-1_59.lib
2016-05-29  22:10        63ÿ052ÿ840 libboost_log-vc140-mt-sgd-1_59.lib
2016-05-29  22:10        14ÿ320ÿ424 libboost_log-vc140-s-1_59.lib
2016-05-29  22:10        55ÿ108ÿ712 libboost_log-vc140-sgd-1_59.lib
------
2016-05-29  22:10        23ÿ103ÿ502 libboost_log_setup-vc140-mt-1_59.lib
2016-05-29  22:10        68ÿ874ÿ134 libboost_log_setup-vc140-mt-gd-1_59.lib
2016-05-29  22:10        23ÿ895ÿ836 libboost_log_setup-vc140-mt-s-1_59.lib
2016-05-29  22:10        69ÿ148ÿ192 libboost_log_setup-vc140-mt-sgd-1_59.lib
2016-05-29  22:10        21ÿ127ÿ762 libboost_log_setup-vc140-s-1_59.lib
2016-05-29  22:10        64ÿ347ÿ312 libboost_log_setup-vc140-sgd-1_59.lib
------
2016-05-29  22:10           607ÿ640 libboost_math_c99-vc140-mt-1_59.lib
2016-05-29  22:10         3ÿ905ÿ858 libboost_math_c99-vc140-mt-gd-1_59.lib
2016-05-29  22:10           612ÿ486 libboost_math_c99-vc140-mt-s-1_59.lib
2016-05-29  22:10         3ÿ795ÿ704 libboost_math_c99-vc140-mt-sgd-1_59.lib
2016-05-29  22:10           611ÿ398 libboost_math_c99-vc140-s-1_59.lib
2016-05-29  22:10         3ÿ793ÿ528 libboost_math_c99-vc140-sgd-1_59.lib
------
2016-05-29  22:10           610ÿ896 libboost_math_c99f-vc140-mt-1_59.lib
2016-05-29  22:10         3ÿ885ÿ668 libboost_math_c99f-vc140-mt-gd-1_59.lib
2016-05-29  22:10           615ÿ886 libboost_math_c99f-vc140-mt-s-1_59.lib
2016-05-29  22:10         3ÿ775ÿ406 libboost_math_c99f-vc140-mt-sgd-1_59.lib
2016-05-29  22:10           614ÿ798 libboost_math_c99f-vc140-s-1_59.lib
2016-05-29  22:10         3ÿ773ÿ230 libboost_math_c99f-vc140-sgd-1_59.lib
2016-05-29  22:10           587ÿ958 libboost_math_c99l-vc140-mt-1_59.lib
2016-05-29  22:10         3ÿ858ÿ540 libboost_math_c99l-vc140-mt-gd-1_59.lib
2016-05-29  22:10           592ÿ840 libboost_math_c99l-vc140-mt-s-1_59.lib
2016-05-29  22:10         3ÿ749ÿ358 libboost_math_c99l-vc140-mt-sgd-1_59.lib
2016-05-29  22:10           591ÿ752 libboost_math_c99l-vc140-s-1_59.lib
2016-05-29  22:10         3ÿ747ÿ182 libboost_math_c99l-vc140-sgd-1_59.lib
------
2016-05-29  22:10        10ÿ319ÿ740 libboost_math_tr1-vc140-mt-1_59.lib
2016-05-29  22:10        25ÿ929ÿ052 libboost_math_tr1-vc140-mt-gd-1_59.lib
2016-05-29  22:10        12ÿ303ÿ908 libboost_math_tr1-vc140-mt-s-1_59.lib
2016-05-29  22:10        28ÿ854ÿ126 libboost_math_tr1-vc140-mt-sgd-1_59.lib
2016-05-29  22:10        12ÿ302ÿ820 libboost_math_tr1-vc140-s-1_59.lib
2016-05-29  22:10        28ÿ851ÿ726 libboost_math_tr1-vc140-sgd-1_59.lib
------
2016-05-29  22:10        10ÿ619ÿ472 libboost_math_tr1f-vc140-mt-1_59.lib
2016-05-29  22:10        26ÿ474ÿ838 libboost_math_tr1f-vc140-mt-gd-1_59.lib
2016-05-29  22:10        12ÿ615ÿ718 libboost_math_tr1f-vc140-mt-s-1_59.lib
2016-05-29  22:10        29ÿ412ÿ826 libboost_math_tr1f-vc140-mt-sgd-1_59.lib
2016-05-29  22:10        12ÿ614ÿ630 libboost_math_tr1f-vc140-s-1_59.lib
2016-05-29  22:10        29ÿ410ÿ426 libboost_math_tr1f-vc140-sgd-1_59.lib
2016-05-29  22:10        10ÿ257ÿ650 libboost_math_tr1l-vc140-mt-1_59.lib
2016-05-29  22:10        25ÿ784ÿ866 libboost_math_tr1l-vc140-mt-gd-1_59.lib
2016-05-29  22:10        12ÿ241ÿ884 libboost_math_tr1l-vc140-mt-s-1_59.lib
2016-05-29  22:10        28ÿ711ÿ672 libboost_math_tr1l-vc140-mt-sgd-1_59.lib
2016-05-29  22:10        12ÿ240ÿ796 libboost_math_tr1l-vc140-s-1_59.lib
2016-05-29  22:10        28ÿ709ÿ272 libboost_math_tr1l-vc140-sgd-1_59.lib
------
2016-05-29  22:10           259ÿ864 libboost_prg_exec_monitor-vc140-mt-1_59.lib
2016-05-29  22:10         1ÿ929ÿ930 libboost_prg_exec_monitor-vc140-mt-gd-1_59.lib
2016-05-29  22:10           446ÿ682 libboost_prg_exec_monitor-vc140-mt-s-1_59.lib
2016-05-29  22:10         2ÿ030ÿ032 libboost_prg_exec_monitor-vc140-mt-sgd-1_59.lib
2016-05-29  22:10           446ÿ586 libboost_prg_exec_monitor-vc140-s-1_59.lib
2016-05-29  22:10         2ÿ030ÿ032 libboost_prg_exec_monitor-vc140-sgd-1_59.lib
------
2016-05-29  22:10         7ÿ935ÿ008 libboost_program_options-vc140-mt-1_59.lib
2016-05-29  22:10        25ÿ054ÿ254 libboost_program_options-vc140-mt-gd-1_59.lib
2016-05-29  22:10         8ÿ309ÿ586 libboost_program_options-vc140-mt-s-1_59.lib
2016-05-29  22:10        24ÿ339ÿ466 libboost_program_options-vc140-mt-sgd-1_59.lib
2016-05-29  22:10         8ÿ309ÿ234 libboost_program_options-vc140-s-1_59.lib
2016-05-29  22:10        24ÿ339ÿ114 libboost_program_options-vc140-sgd-1_59.lib
------
2016-05-29  22:10         4ÿ859ÿ036 libboost_python-vc140-mt-1_59.lib
2016-05-29  22:10        25ÿ116ÿ880 libboost_python-vc140-mt-gd-1_59.lib
2016-05-29  22:10         4ÿ953ÿ686 libboost_python-vc140-mt-s-1_59.lib
2016-05-29  22:10        23ÿ404ÿ266 libboost_python-vc140-mt-sgd-1_59.lib
2016-05-29  22:10         4ÿ952ÿ790 libboost_python-vc140-s-1_59.lib
2016-05-29  22:10        23ÿ403ÿ370 libboost_python-vc140-sgd-1_59.lib
------
2016-05-29  22:10           134ÿ554 libboost_random-vc140-mt-1_59.lib
2016-05-29  22:10           701ÿ682 libboost_random-vc140-mt-gd-1_59.lib
2016-05-29  22:10           134ÿ948 libboost_random-vc140-mt-s-1_59.lib
2016-05-29  22:10           632ÿ226 libboost_random-vc140-mt-sgd-1_59.lib
2016-05-29  22:10           134ÿ916 libboost_random-vc140-s-1_59.lib
2016-05-29  22:10           632ÿ194 libboost_random-vc140-sgd-1_59.lib
------
2016-05-29  22:10        12ÿ804ÿ368 libboost_regex-vc140-mt-1_59.lib
2016-05-29  22:10        41ÿ594ÿ200 libboost_regex-vc140-mt-gd-1_59.lib
2016-05-29  22:10        12ÿ881ÿ652 libboost_regex-vc140-mt-s-1_59.lib
2016-05-29  22:10        40ÿ039ÿ890 libboost_regex-vc140-mt-sgd-1_59.lib
2016-05-29  22:10        12ÿ881ÿ108 libboost_regex-vc140-s-1_59.lib
2016-05-29  22:10        40ÿ039ÿ346 libboost_regex-vc140-sgd-1_59.lib
------
2016-05-29  22:10         9ÿ398ÿ596 libboost_serialization-vc140-mt-1_59.lib
2016-05-29  22:10        31ÿ982ÿ026 libboost_serialization-vc140-mt-gd-1_59.lib
2016-05-29  22:10        10ÿ619ÿ172 libboost_serialization-vc140-mt-s-1_59.lib
2016-05-29  22:10        32ÿ656ÿ306 libboost_serialization-vc140-mt-sgd-1_59.lib
2016-05-29  22:10        10ÿ618ÿ308 libboost_serialization-vc140-s-1_59.lib
2016-05-29  22:10        32ÿ655ÿ442 libboost_serialization-vc140-sgd-1_59.lib
------
2016-05-29  22:10         1ÿ085ÿ094 libboost_signals-vc140-mt-1_59.lib
2016-05-29  22:10         5ÿ198ÿ988 libboost_signals-vc140-mt-gd-1_59.lib
2016-05-29  22:10         1ÿ087ÿ834 libboost_signals-vc140-mt-s-1_59.lib
2016-05-29  22:10         4ÿ847ÿ364 libboost_signals-vc140-mt-sgd-1_59.lib
2016-05-29  22:10         1ÿ087ÿ674 libboost_signals-vc140-s-1_59.lib
2016-05-29  22:10         4ÿ847ÿ204 libboost_signals-vc140-sgd-1_59.lib
------
2016-05-29  22:10            80ÿ728 libboost_system-vc140-mt-1_59.lib
2016-05-29  22:10           619ÿ740 libboost_system-vc140-mt-gd-1_59.lib
2016-05-29  22:10            81ÿ136 libboost_system-vc140-mt-s-1_59.lib
2016-05-29  22:08           550ÿ276 libboost_system-vc140-mt-sgd-1_59.lib
2016-05-29  22:10            81ÿ104 libboost_system-vc140-s-1_59.lib
2016-05-29  22:10           550ÿ244 libboost_system-vc140-sgd-1_59.lib
------
2016-05-29  22:10        10ÿ409ÿ526 libboost_test_exec_monitor-vc140-mt-1_59.lib
2016-05-29  22:10        35ÿ239ÿ478 libboost_test_exec_monitor-vc140-mt-gd-1_59.lib
2016-05-29  22:10        12ÿ163ÿ864 libboost_test_exec_monitor-vc140-mt-s-1_59.lib
2016-05-29  22:10        36ÿ680ÿ558 libboost_test_exec_monitor-vc140-mt-sgd-1_59.lib
2016-05-29  22:10        12ÿ163ÿ288 libboost_test_exec_monitor-vc140-s-1_59.lib
2016-05-29  22:10        36ÿ680ÿ558 libboost_test_exec_monitor-vc140-sgd-1_59.lib
------
2016-05-29  22:10         1ÿ132ÿ450 libboost_thread-vc140-mt-1_59.lib
2016-05-29  22:10         3ÿ892ÿ092 libboost_thread-vc140-mt-gd-1_59.lib
2016-05-29  22:10         1ÿ135ÿ758 libboost_thread-vc140-mt-s-1_59.lib
2016-05-29  22:10         3ÿ723ÿ028 libboost_thread-vc140-mt-sgd-1_59.lib
------
2016-05-29  22:10           145ÿ172 libboost_timer-vc140-mt-1_59.lib
2016-05-29  22:10         1ÿ244ÿ894 libboost_timer-vc140-mt-gd-1_59.lib
2016-05-29  22:10           362ÿ702 libboost_timer-vc140-mt-s-1_59.lib
2016-05-29  22:10         1ÿ391ÿ376 libboost_timer-vc140-mt-sgd-1_59.lib
2016-05-29  22:10           362ÿ638 libboost_timer-vc140-s-1_59.lib
2016-05-29  22:10         1ÿ391ÿ408 libboost_timer-vc140-sgd-1_59.lib
------
2016-05-29  22:10        10ÿ325ÿ104 libboost_unit_test_framework-vc140-mt-1_59.lib
2016-05-29  22:10        34ÿ269ÿ392 libboost_unit_test_framework-vc140-mt-gd-1_59.lib
2016-05-29  22:10        12ÿ026ÿ400 libboost_unit_test_framework-vc140-mt-s-1_59.lib
2016-05-29  22:10        35ÿ676ÿ198 libboost_unit_test_framework-vc140-mt-sgd-1_59.lib
2016-05-29  22:10        12ÿ025ÿ856 libboost_unit_test_framework-vc140-s-1_59.lib
2016-05-29  22:10        35ÿ676ÿ198 libboost_unit_test_framework-vc140-sgd-1_59.lib
------
2016-05-29  22:10        37ÿ273ÿ334 libboost_wave-vc140-mt-1_59.lib
2016-05-29  22:10        93ÿ579ÿ450 libboost_wave-vc140-mt-gd-1_59.lib
2016-05-29  22:10        37ÿ751ÿ046 libboost_wave-vc140-mt-s-1_59.lib
2016-05-29  22:10        93ÿ491ÿ990 libboost_wave-vc140-mt-sgd-1_59.lib
------
2016-05-29  22:10         7ÿ253ÿ358 libboost_wserialization-vc140-mt-1_59.lib
2016-05-29  22:10        22ÿ272ÿ954 libboost_wserialization-vc140-mt-gd-1_59.lib
2016-05-29  22:10         8ÿ653ÿ696 libboost_wserialization-vc140-mt-s-1_59.lib
2016-05-29  22:10        23ÿ928ÿ610 libboost_wserialization-vc140-mt-sgd-1_59.lib
2016-05-29  22:10         8ÿ653ÿ408 libboost_wserialization-vc140-s-1_59.lib
2016-05-29  22:10        23ÿ928ÿ322 libboost_wserialization-vc140-sgd-1_59.lib

There's also a bunch of files beginning with just boost:
2016-05-29  22:10             9ÿ216 boost_atomic-vc140-mt-1_59.dll
2016-05-29  22:10             3ÿ442 boost_atomic-vc140-mt-1_59.lib
2016-05-29  22:10            13ÿ312 boost_atomic-vc140-mt-gd-1_59.dll
2016-05-29  22:10             3ÿ490 boost_atomic-vc140-mt-gd-1_59.lib
2016-05-29  22:10            29ÿ184 boost_chrono-vc140-mt-1_59.dll
2016-05-29  22:10            24ÿ492 boost_chrono-vc140-mt-1_59.lib
2016-05-29  22:10            46ÿ592 boost_chrono-vc140-mt-gd-1_59.dll
2016-05-29  22:10            24ÿ630 boost_chrono-vc140-mt-gd-1_59.lib
2016-05-29  22:10            28ÿ160 boost_container-vc140-mt-1_59.dll
2016-05-29  22:10             7ÿ002 boost_container-vc140-mt-1_59.lib
2016-05-29  22:10            71ÿ168 boost_container-vc140-mt-gd-1_59.dll
2016-05-29  22:10             7ÿ094 boost_container-vc140-mt-gd-1_59.lib
2016-05-29  22:10            53ÿ760 boost_context-vc140-mt-1_59.dll
2016-05-29  22:10            19ÿ644 boost_context-vc140-mt-1_59.lib
2016-05-29  22:10            98ÿ816 boost_context-vc140-mt-gd-1_59.dll
2016-05-29  22:10            19ÿ804 boost_context-vc140-mt-gd-1_59.lib
2016-05-29  22:10            52ÿ736 boost_coroutine-vc140-mt-1_59.dll
2016-05-29  22:10            19ÿ676 boost_coroutine-vc140-mt-1_59.lib
2016-05-29  22:10            97ÿ280 boost_coroutine-vc140-mt-gd-1_59.dll
2016-05-29  22:10            19ÿ830 boost_coroutine-vc140-mt-gd-1_59.lib
2016-05-29  22:10            49ÿ664 boost_date_time-vc140-mt-1_59.dll
2016-05-29  22:10            29ÿ584 boost_date_time-vc140-mt-1_59.lib
2016-05-29  22:10           107ÿ520 boost_date_time-vc140-mt-gd-1_59.dll
2016-05-29  22:10            29ÿ768 boost_date_time-vc140-mt-gd-1_59.lib
2016-05-29  22:10           113ÿ664 boost_filesystem-vc140-mt-1_59.dll
2016-05-29  22:10           100ÿ384 boost_filesystem-vc140-mt-1_59.lib
2016-05-29  22:10           164ÿ864 boost_filesystem-vc140-mt-gd-1_59.dll
2016-05-29  22:10           100ÿ990 boost_filesystem-vc140-mt-gd-1_59.lib
2016-05-29  22:10           219ÿ136 boost_graph-vc140-mt-1_59.dll
2016-05-29  22:10             3ÿ212 boost_graph-vc140-mt-1_59.lib
2016-05-29  22:10           558ÿ080 boost_graph-vc140-mt-gd-1_59.dll
2016-05-29  22:10             3ÿ258 boost_graph-vc140-mt-gd-1_59.lib
2016-05-29  22:10            48ÿ640 boost_iostreams-vc140-mt-1_59.dll
2016-05-29  22:10            45ÿ818 boost_iostreams-vc140-mt-1_59.lib
2016-05-29  22:10            76ÿ288 boost_iostreams-vc140-mt-gd-1_59.dll
2016-05-29  22:10            46ÿ160 boost_iostreams-vc140-mt-gd-1_59.lib
2016-05-29  22:10           398ÿ848 boost_locale-vc140-mt-1_59.dll
2016-05-29  22:10            89ÿ198 boost_locale-vc140-mt-1_59.lib
2016-05-29  22:10           760ÿ832 boost_locale-vc140-mt-gd-1_59.dll
2016-05-29  22:10            89ÿ810 boost_locale-vc140-mt-gd-1_59.lib
2016-05-29  22:10           553ÿ472 boost_log-vc140-mt-1_59.dll
2016-05-29  22:10           254ÿ162 boost_log-vc140-mt-1_59.lib
2016-05-29  22:10         1ÿ172ÿ992 boost_log-vc140-mt-gd-1_59.dll
2016-05-29  22:10           255ÿ350 boost_log-vc140-mt-gd-1_59.lib
2016-05-29  22:10           521ÿ728 boost_log_setup-vc140-mt-1_59.dll
2016-05-29  22:10            24ÿ240 boost_log_setup-vc140-mt-1_59.lib
2016-05-29  22:10         1ÿ294ÿ336 boost_log_setup-vc140-mt-gd-1_59.dll
2016-05-29  22:10            24ÿ402 boost_log_setup-vc140-mt-gd-1_59.lib
2016-05-29  22:10            34ÿ304 boost_math_c99-vc140-mt-1_59.dll
2016-05-29  22:10             7ÿ996 boost_math_c99-vc140-mt-1_59.lib
2016-05-29  22:10            67ÿ584 boost_math_c99-vc140-mt-gd-1_59.dll
2016-05-29  22:10             8ÿ112 boost_math_c99-vc140-mt-gd-1_59.lib
2016-05-29  22:10            34ÿ816 boost_math_c99f-vc140-mt-1_59.dll
2016-05-29  22:10             8ÿ134 boost_math_c99f-vc140-mt-1_59.lib
2016-05-29  22:10            69ÿ120 boost_math_c99f-vc140-mt-gd-1_59.dll
2016-05-29  22:10             8ÿ250 boost_math_c99f-vc140-mt-gd-1_59.lib
2016-05-29  22:10            32ÿ768 boost_math_c99l-vc140-mt-1_59.dll
2016-05-29  22:10             8ÿ134 boost_math_c99l-vc140-mt-1_59.lib
2016-05-29  22:10            62ÿ976 boost_math_c99l-vc140-mt-gd-1_59.dll
2016-05-29  22:10             8ÿ250 boost_math_c99l-vc140-mt-gd-1_59.lib
2016-05-29  22:10           179ÿ200 boost_math_tr1-vc140-mt-1_59.dll
2016-05-29  22:10             6ÿ750 boost_math_tr1-vc140-mt-1_59.lib
2016-05-29  22:10           439ÿ296 boost_math_tr1-vc140-mt-gd-1_59.dll
2016-05-29  22:10             6ÿ838 boost_math_tr1-vc140-mt-gd-1_59.lib
2016-05-29  22:10           189ÿ952 boost_math_tr1f-vc140-mt-1_59.dll
2016-05-29  22:10             6ÿ886 boost_math_tr1f-vc140-mt-1_59.lib
2016-05-29  22:10           473ÿ600 boost_math_tr1f-vc140-mt-gd-1_59.dll
2016-05-29  22:10             6ÿ978 boost_math_tr1f-vc140-mt-gd-1_59.lib
2016-05-29  22:10           179ÿ200 boost_math_tr1l-vc140-mt-1_59.dll
2016-05-29  22:10             6ÿ886 boost_math_tr1l-vc140-mt-1_59.lib
2016-05-29  22:10           438ÿ272 boost_math_tr1l-vc140-mt-gd-1_59.dll
2016-05-29  22:10             6ÿ978 boost_math_tr1l-vc140-mt-gd-1_59.lib
2016-05-29  22:10            40ÿ448 boost_prg_exec_monitor-vc140-mt-1_59.dll
2016-05-29  22:10            16ÿ402 boost_prg_exec_monitor-vc140-mt-1_59.lib
2016-05-29  22:10            66ÿ048 boost_prg_exec_monitor-vc140-mt-gd-1_59.dll
2016-05-29  22:10            16ÿ536 boost_prg_exec_monitor-vc140-mt-gd-1_59.lib
2016-05-29  22:10           381ÿ952 boost_program_options-vc140-mt-1_59.dll
2016-05-29  22:10           514ÿ820 boost_program_options-vc140-mt-1_59.lib
2016-05-29  22:10           704ÿ512 boost_program_options-vc140-mt-gd-1_59.dll
2016-05-29  22:10           529ÿ526 boost_program_options-vc140-mt-gd-1_59.lib
2016-05-29  22:10            22ÿ528 boost_random-vc140-mt-1_59.dll
2016-05-29  22:10             3ÿ830 boost_random-vc140-mt-1_59.lib
2016-05-29  22:10            35ÿ840 boost_random-vc140-mt-gd-1_59.dll
2016-05-29  22:10             3ÿ874 boost_random-vc140-mt-gd-1_59.lib
2016-05-29  22:10           638ÿ976 boost_regex-vc140-mt-1_59.dll
2016-05-29  22:10         1ÿ089ÿ018 boost_regex-vc140-mt-1_59.lib
2016-05-29  22:10         1ÿ899ÿ520 boost_regex-vc140-mt-gd-1_59.dll
2016-05-29  22:10         1ÿ092ÿ282 boost_regex-vc140-mt-gd-1_59.lib
2016-05-29  22:10           207ÿ360 boost_serialization-vc140-mt-1_59.dll
2016-05-29  22:10           202ÿ044 boost_serialization-vc140-mt-1_59.lib
2016-05-29  22:10           552ÿ448 boost_serialization-vc140-mt-gd-1_59.dll
2016-05-29  22:10           202ÿ864 boost_serialization-vc140-mt-gd-1_59.lib
2016-05-29  22:10            52ÿ736 boost_signals-vc140-mt-1_59.dll
2016-05-29  22:10            61ÿ742 boost_signals-vc140-mt-1_59.lib
2016-05-29  22:10           132ÿ608 boost_signals-vc140-mt-gd-1_59.dll
2016-05-29  22:10            62ÿ518 boost_signals-vc140-mt-gd-1_59.lib
2016-05-29  22:10            20ÿ480 boost_system-vc140-mt-1_59.dll
2016-05-29  22:10             2ÿ938 boost_system-vc140-mt-1_59.lib
2016-05-29  22:10            33ÿ280 boost_system-vc140-mt-gd-1_59.dll
2016-05-29  22:10             2ÿ980 boost_system-vc140-mt-gd-1_59.lib
2016-05-29  22:10            92ÿ672 boost_thread-vc140-mt-1_59.dll
2016-05-29  22:10            28ÿ724 boost_thread-vc140-mt-1_59.lib
2016-05-29  22:10           169ÿ984 boost_thread-vc140-mt-gd-1_59.dll
2016-05-29  22:10            28ÿ972 boost_thread-vc140-mt-gd-1_59.lib
2016-05-29  22:10            29ÿ184 boost_timer-vc140-mt-1_59.dll
2016-05-29  22:10            14ÿ690 boost_timer-vc140-mt-1_59.lib
2016-05-29  22:10            46ÿ592 boost_timer-vc140-mt-gd-1_59.dll
2016-05-29  22:10            14ÿ800 boost_timer-vc140-mt-gd-1_59.lib
2016-05-29  22:10           404ÿ480 boost_unit_test_framework-vc140-mt-1_59.dll
2016-05-29  22:10           239ÿ226 boost_unit_test_framework-vc140-mt-1_59.lib
2016-05-29  22:10         1ÿ103ÿ360 boost_unit_test_framework-vc140-mt-gd-1_59.dll
2016-05-29  22:10           240ÿ668 boost_unit_test_framework-vc140-mt-gd-1_59.lib
2016-05-29  22:10           652ÿ288 boost_wave-vc140-mt-1_59.dll
2016-05-29  22:10           145ÿ190 boost_wave-vc140-mt-1_59.lib
2016-05-29  22:10         1ÿ291ÿ264 boost_wave-vc140-mt-gd-1_59.dll
2016-05-29  22:10           145ÿ326 boost_wave-vc140-mt-gd-1_59.lib
2016-05-29  22:10           146ÿ432 boost_wserialization-vc140-mt-1_59.dll
2016-05-29  22:10            78ÿ792 boost_wserialization-vc140-mt-1_59.lib
2016-05-29  22:10           335ÿ872 boost_wserialization-vc140-mt-gd-1_59.dll
2016-05-29  22:10            79ÿ100 boost_wserialization-vc140-mt-gd-1_59.lib

So my question is: What's the difference between the different files? Which one should I choose?
Thanks a lot!

No answers for this question!
Get a new question page!

I am creating a program that writes data into a binary file and reads it. The binary file is used as a database. It's about bank account number and balance.
So basically I have a menu that asks the user for input from 1 - 4 and calls speicifc functions according to the input.
Input 1 calls function for adding a new bank account, checks if bank account already exists, if it doesn't the user inputs balance value. The data is stored in the file. The function seems to work properly. Haven't had issues with it.
Input 2 will be used to increase the balance for a certain bank account. This is where I have problem. I don't know how to find the balance value of the specific element inside the file and increase it with the user input. Here is my function:
void addBalance(Account acc[])
{
int k = 0; // this could be used as bool instead
Account s;

long pos;


myFile.open(fileName, ios::binary | ios::in | ios::app);
if (!myFile)
{
    cout << "\n ERROR!";
    exit(1);
}

    myFile.seekg(0L, ios::end); // set pointer at end of file
    pos = myFile.tellg(); // pos = number of bytes
    n = pos / sizeof(Account); // returns the number of inputs so far, not 100% how it works
                               // but it does
     myFile.seekg(0L, ios::beg); // set pointer at start of file

cout << "\n Input bank account number: ";
cin >> serial; // serial is global variable

for (i = 0; i < n; i++) // n = total number of inputs so far
{
    myFile.read((char*)&s, sizeof(Account));
    acc[i] = s;
    if (acc[i].getSerial() == serial) // checks for existing bank account
    {
        cout << "\n Input balance to add: ";
        cin >> balance; // balance is global variable
        acc[i].addBalance(balance); // adds the value entered
        fflush(stdin); // I believe this should be used everytime before writing to a file
        /* this is where the program should replace the current balance of element acc[i]
           with existingBalance = existingBalance + balance inside the file */
        k++;
    }
}

if (k == 0)
    cout << "\n No such existing bank account." << endl;

myFile.close();
}

As you can see acc[i].addBalance(balance) adds the user input value to the element of the array from class Account, but I don't know how to write it in the file. I believe I am supposed to use seekg to somehow find that value and replace it, but I am relatively new to C++ programming and I am trying to learn input/output using fstream for binary files.
Input 3 from the user should call a function similar to void addBalance but instead of adding it should substract (e.g. existingBalance = existingBalance - userInput) I belive the code would be the same as in the above function with minor differences.
Input 4 is used for printing, it is working, no issues so far.
I am a bit puzzled with some parts of the code as I have taken them from a manual book such as:
myFile.seekg(0L, ios::end);
pos = myFile.tellg();
n = pos / sizeof(Account);
myFile.seekg(0L, ios::beg);


No answers for this question!
Get a new question page!

When I run the code in windows, it works as expected.  But when I run it in linux, the program doesn't run as expected and produces a completely different output.
I'm assuming its a problem in the all_unique_letters method, but I can't seem to figure it out.  
Thanks for the help.
#include <iostream>
#include <string>
#include <cctype>

using namespace std;

bool is_all_lowercase(const string &s) {
    int min = 97;
    int max = 122;
    for(int i = 0; i< (int)s.length(); i++)
     {
        if( !((int)s[i] >= min && (int)s[i] <= max) )
        {
            return false;
        }
    }
    return true;
 }

bool all_unique_letters(const string &s) {
    unsigned int v;
    int shifter;
    int x; 

    for(int i = 0; i<(int)s.length(); i++)
    {
        shifter = ((int)s.at(i) - (int)'a');
        x = v >> shifter;
        if( (x & 1) == 1)
        {
            cout << "Duplicate letters found." << endl;
            return false;
        }
        else
    {
        v |= (1 << shifter);
    }
}
return true;
}

int main(int argc, char * const argv[]) {
    if(argc != 2)
    {
        cout << "Usage: ./unique <string>" << endl;
    }
    else if(is_all_lowercase(argv[1]))
    {
        if(all_unique_letters(argv[1]))
        {
            cout << "All letters are unique." << endl;
        }
    }
    else
    {
        cout << "Error: String must contain only lowercase letters." << endl;
    }
}

Here are there expected outcomes with inputs.
Input: "" 
Output: "Usage: ./unique <string>"

Input: "a b" 
Output: "Usage: ./unique <string>"

Input:"a0b" 
Output: "Error: String must contain only lowercase letters."

Input: "ABC" 
Output: "Error: String must contain only lowercase letters."

Input: "a" 
Output:"All letters are unique."

Input:"aa" 
Output:"Duplicate letters found."

Input: "aba" 
Output:"Duplicate letters found."

Input: "abc" 
Output:"All letters are unique."

Input:"abcdefghijklmnopqrstuvwxyz" 
Output:"All letters are unique."

Input:"zabcdefghijklmnopqrstuvwxy"
Output: "All letters are unique."

Input: "abcdefghijklmnopqrstuvwxyza" 
Output: "Duplicate letters found."

Input: "zabcdefghijklmnopqrstuvwxyz" 
Output: "Duplicate letters found."

Input: "abcabc" 
Output: "Duplicate letters found."

Input: "funstuph" 
Output: "Duplicate letters found."

Input: "powerful" 
Output: "All letters are unique."

But when I compile with linux, out of the 15 above, These are the only 3 with problems.
Input:"abcdefghijklmnopqrstuvwxyz" 
Output: "Duplicate letters found."

Input:"zabcdefghijklmnopqrstuvwxy"
Output: "Duplicate letters found."

Input: "powerful" 
Output: "Duplicate letters found."


New answer:
[u'\nIn bool all_unique_letters(const string &s), unsigned int v; is used without being initialized. If it contains something else that 0, the function reports a letter as a duplicate when it is not.\n']
Get a new question page!

I need to read class objects from file, but I don't know how.
Here I have a class "People"
class People{
public:

string name;
string surname;
int years;
private:

People(string a, string b, int c):
name(a),surname(b),years(c){}
};

Now I would like to read peoples from .txt file and store them to objects of a class People.
For instance, this is how my .txt file looks like:
John Snow 32
Arya Stark 19
Hodor Hodor 55
Ned Stark 00

I think the best way to do this would be to create array of 4 objects. I need to read word by word and line after line, if I assume correctly but I don't know how...

New answer:
[u'\nThe way to do this would be to compose a storage format for your class, for instance if I were to do this I would store the information just like you did\nJohn Snow 32\nArya Stark 19\nHodor Hodor 55\nNed Stark 00\n\nTo read this in you could do the following\nifstream fin;\nfin.open("input.txt");\nif (!fin) {\n    cerr << "Error in opening the file" << endl;\n    return 1; // if this is main\n}\n\nvector<People> people;\nPeople temp;\nwhile (fin >> temp.name >> temp.surname >> temp.years) {\n    people.push_back(temp);\n}\n\n// now print the information you read in\nfor (const auto& person : people) {\n    cout << person.name << \' \' << person.surname << \' \' << person.years << endl;\n}\n\nTo write it to a file you could do the following\nstatic const char* const FILENAME_PEOPLE = "people.txt";\nofstream fout;\nfout.open(FILENAME_PEOPLE); // be sure that the argument is a c string\nif (!fout) {\n    cerr << "Error in opening the output file" << endl;\n\n    // again only if this is main, chain return codes or throw an exception otherwise\n    return 1; \n}\n\n// form the vector of people here ...\n// ..\n// ..\n\nfor (const auto& person : people) {\n    fout << people.name << \' \' << people.surname << \' \' << people.years << \'\\n\';\n}\n\nIf you are not familiar with what a vector is vectors are the recommended way to store an array of objects that can grow dynamically in C++.  The vector class is a part of the C++ standard library.  And since you are reading in from a file you should not make any assumptions about how many objects are going to be stored in the file ahead of time.  \nBut just in case you are not familiar with the classes and features I used in the example above.  Here are some links\nvector http://en.cppreference.com/w/cpp/container/vector\nifstream http://en.cppreference.com/w/cpp/io/basic_ifstream\nrange based for loop http://en.cppreference.com/w/cpp/language/range-for\nauto http://en.cppreference.com/w/cpp/language/auto\n']
Get a new question page!

This is how my structure is constructed
struct dNascimento{

    int day, month, year;

};

struct morada{

    string street;
    int doorNum;
    string postCode;

};

typedef struct student{

    unsigned int id; //Número mecanográfico
    string name;
    string password;
    morada addressStudent;
    string course;
    dNascimento birth;
    int money;

    student* next;

}* studentPointer;

I'm adding student records to the linked list through this function
void addStudent(studentPointer studentToAdd) {

    studentToAdd->next = NULL;

    if (head != NULL) {

        current = head;

        while (current->next != NULL)
            current = current->next;

        current->next = studentToAdd;


    }
    else
        head = studentToAdd;

}

This is the function I use to save the students in the linked list to the binary file
void saveStudentsToFile() {

    FILE *file = fopen("records.bin", "wb");

    if (file != NULL) {

        if (head != NULL) {

            current = head;
            int numberOfStudents = 0;

            while (current != NULL){

                if (fwrite(current, sizeof(student), 1, file) != 1)
                    cout << "\n\t> Erro ao guardar o aluno " << current->name << " no ficheiro!\n" << endl;

                current = current->next;
                numberOfStudents++;

            };

            cout << "\n\t> " << numberOfStudents << " aluno(s) guardados com sucesso!\n" << endl;
            //^ Number of students saved successfully
            fclose(file);

        }else
            cout << "\n\t> Não há registos de alunos para guardar!\n" << endl;
            //^ There are no students to save to the file
    }else
        cout << "\n\t> Erro ao abrir o ficheiro para guardar registo de alunos!\n" << endl;
        //^ Error opening file to save students
}

This is the method I'm using to load the students saved from the file to the linked list
void loadFile() {

    FILE *file = fopen("records.bin", "rb");

    if (file != NULL) {

        studentPointer studentReader = new student;
        studentReader = (studentPointer) malloc(sizeof(student));
        int numberOfStudentsLoaded = 0;

        while (!(fread(studentReader, sizeof(student), 1, file) != 1)){
                addStudent(studentReader);
                numberOfStudentsLoaded++;
        };

        fclose(file);

        cout << "\n\t> " << numberOfStudentsLoaded << " aluno(s) carregado(s) com sucesso!\n" << endl;
        //^ Number of students loaded successfully
    }
    else
        cout << "\n\t> Erro ao abrir o ficheiro dos registos!\n" << endl;
        //^ Error opening file to load records
}

This is the method I'm using to list the students in the linked list
void listStudents() {

    if (head != NULL) {

        current = head;
        while (current != NULL) {
            cout << "\n\t> ID #" << current->id << endl;
            cout << "\t> " << current->name << endl;
            cout << "\t> " << current->password << endl;
            current = current->next;
        };

    }
    else
        cout << "\n\t> Não tem registos guardados!\n" << endl;
        //^ No records saved to display
}

When I add records manually to the linked list and use listStudents() to display them, they show up perfectly, but when I save the student records to the binary file and load them, the listStudents() method goes on an infinite loop to only display the last record saved in the binary file.
Keep in mind that every variable in the structure is correctly initialized before saved.

How students show up through listStudents() when I insert them manually
  http://image.prntscr.com/image/73459c40d81d462ca043ee414d1556d0.png
How students show up after I saveStudentsToFile() and loadFile()
http://image.prntscr.com/image/c3dfb61235de46b7adb757d0762883a9.png


New answer:
[u'\nOne of the problems with your code is that you cannot use fread to read student data from file (the same applies to fwrite). Your student class is not POD (Plain Old Data), it contains string variables which cannot be initialized by reading from binary file with fread. You should use fstream to write field by field to output file, and then read field by field. Or convert your student struct to POD, ie: replace all string name; with char name[64];.\nAlso, if you store: student* next; then you should not use its value, address will not be valid.\nYour code looks more like C than C++, for example here:\nWhy do you:\n    studentPointer studentReader = new student;\n    studentReader = (studentPointer) malloc(sizeof(student));\n\nyou dont need (studentPointer) malloc(sizeof(student));. Whats more you should not use malloc as it will not call constructors for string variables.\nIn the end never ending loop is probably caused by Undefined Behaviours in your code.\n[edit]\nThe reason for infinite loop is because you dont allocate each time you read a student from file, so you end up with all the same students. Below is corrected code.:\n    int numberOfStudentsLoaded = 0;\n    while (true){\n            studentReader = (studentPointer) malloc(sizeof(student));\n\n            if ((fread(studentReader, sizeof(student), 1, file) != 1)\n               break;\n\n            addStudent(studentReader);\n            numberOfStudentsLoaded++;\n    };\n\n']
Get a new question page!
All waiting link lists are done!

I recently bought an Atmega32 and tried to program an LCD-Display from Sunfounder with it. This isn't a regular LCD, it is controlled by a PCF8591 microcontroller. The display came within a Sensor Kit for my Raspberry Pi, so Sunfounder's library, which only works on the Raspberry Pi. I tried to transfer the code into C++ and the AVR environment, but it doesn't work! Do you guys have any idea?
Here's the python library:
#!/usr/bin/env python

import time
import smbus

BUS = smbus.SMBus(1)

def write_word(addr, data):
    global BLEN
    temp = data
    if BLEN == 1:
        temp |= 0x08
    else:
        temp &= 0xF7
    BUS.write_byte(addr ,temp)

def send_command(comm):
    # Send bit7-4 firstly
    buf = comm & 0xF0
    buf |= 0x04               # RS = 0, RW = 0, EN = 1
    write_word(LCD_ADDR ,buf)
    time.sleep(0.002)
    buf &= 0xFB               # Make EN = 0
    write_word(LCD_ADDR ,buf)

    # Send bit3-0 secondly
    buf = (comm & 0x0F) << 4
    buf |= 0x04               # RS = 0, RW = 0, EN = 1
    write_word(LCD_ADDR ,buf)
    time.sleep(0.002)
    buf &= 0xFB               # Make EN = 0
    write_word(LCD_ADDR ,buf)

def send_data(data):
    # Send bit7-4 firstly
    buf = data & 0xF0
    buf |= 0x05               # RS = 1, RW = 0, EN = 1
    write_word(LCD_ADDR ,buf)
    time.sleep(0.002)
    buf &= 0xFB               # Make EN = 0
    write_word(LCD_ADDR ,buf)

    # Send bit3-0 secondly
    buf = (data & 0x0F) << 4
    buf |= 0x05               # RS = 1, RW = 0, EN = 1
    write_word(LCD_ADDR ,buf)
    time.sleep(0.002)
    buf &= 0xFB               # Make EN = 0
    write_word(LCD_ADDR ,buf)

def init(addr, bl):
#   global BUS
#   BUS = smbus.SMBus(1)
    global LCD_ADDR
    global BLEN
    LCD_ADDR = addr
    BLEN = bl
    try:
        send_command(0x33) # Must initialize to 8-line mode at first
        time.sleep(0.005)
        send_command(0x32) # Then initialize to 4-line mode
        time.sleep(0.005)
        send_command(0x28) # 2 Lines & 5*7 dots
        time.sleep(0.005)
        send_command(0x0C) # Enable display without cursor
        time.sleep(0.005)
        send_command(0x01) # Clear Screen
        BUS.write_byte(LCD_ADDR, 0x08)
    except:
        return False
    else:
        return True

def clear():
    send_command(0x01) # Clear Screen

def openlight():  # Enable the backlight
    BUS.write_byte(0x27,0x08)
    BUS.close()

def write(x, y, str):
    if x < 0:
        x = 0
    if x > 15:
        x = 15
    if y < 0:
        y = 0
    if y > 1:
        y = 1

    # Move cursor
    addr = 0x80 + 0x40 * y + x
    send_command(addr)

    for chr in str:
        send_data(ord(chr))

if __name__ == '__main__':
    init(0x27, 1)
    write(4, 0, 'Hello')
    write(7, 1, 'world!')
    time.sleep(2)
    clear()

And here's my code:
#include <avr/io.h>
#include <util/twi.h>
#include <avr/sfr_defs.h>
#define F_CPU 1000000UL
#include <util/delay.h>

void sendbyte(char c)
{
    TWCR = _BV(TWINT) | _BV(TWSTA) | _BV(TWEN);   //TWSTA = TWI START Condition Bit (_BV = bit value => _BV(3) == 1 << 3
    while  (!(TWCR & (1<<TWINT)));

    if ((TWSR & 0xFB) != TW_START)
    //hier ne fehlermeldeung weil START nicht gesendet wurde
    TWDR = 0x27; //ADDRESS
    TWCR = (1 << TWINT) | (1 << TWEN);
    while (!(TWCR & (1 << TWINT)));
    if ((TWSR & 0xF8) != TW_MT_SLA_ACK)
    //hier noch ne fehlermeldung
    TWDR =  c | 0x08; //DATA
    TWCR = (1 << TWINT) | (1 << TWEN);

    while (!(TWCR & (1 << TWINT)));
    if ((TWSR & 0xF8) != TW_MT_DATA_ACK)
    // noch ne fehlermeldung
    TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);

}

void sendbyte_no_08(char c)
{
    TWCR = _BV(TWINT) | _BV(TWSTA) | _BV(TWEN);   //TWSTA = TWI START Condition Bit (_BV = bit value => _BV(3) == 1 << 3
    while  (!(TWCR & (1<<TWINT)));

    if ((TWSR & 0xFB) != TW_START)
    //error warning
    TWDR = 0x27; //ADDRESS
    TWCR = (1 << TWINT) | (1 << TWEN);
    while (!(TWCR & (1 << TWINT)));
    if ((TWSR & 0xF8) != TW_MT_SLA_ACK)
    //error warning
    TWDR =  c; //DATA
    TWCR = (1 << TWINT) | (1 << TWEN);

    while (!(TWCR & (1 << TWINT)));
    if ((TWSR & 0xF8) != TW_MT_DATA_ACK)
    //another error warning
    TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);

}

void sendcommand(char c)
{

    char buff;

    buff = c & 0xF0;

    buff |= 0x04;

    sendbyte(buff);

    _delay_ms(2);

    buff &= 0xFB;

    sendbyte(buff);

    buff = (c & 0x0F) << 4;
    buff |= 0x04;
    sendbyte(buff);

    _delay_ms(2);

    buff &= 0xFB;
    sendbyte(buff);

}

void lcd_init()
{
    sendcommand(0x33);
    _delay_ms(5);
    sendcommand(0x32);
    _delay_ms(5);
    sendcommand(0x28);
    _delay_ms(5);
    sendcommand(0x0C);
    _delay_ms(5);
    sendcommand(0x01);
    sendbyte_no_08(0x08);
}

int main(void)
{   
    //print "a" to display (0x62) (unicode 97)

    lcd_init();

    char cursor = 0x80 + 0x40 * 0 + 2;

    sendcommand(cursor);

    char buff;

    buff = (97 & 0xF0);

    buff |= 0x05;
    sendbyte(buff);

    _delay_ms(2);

    buff &= 0xFB;
    sendbyte(buff);

    buff = (97 & 0x0F) << 4;
    buff |= 0x05;
    sendbyte(buff);

    _delay_ms(2);

    buff &= 0xFB;
    sendbyte(buff);
}

Sorry for the bad formatting and the strange usage of functions, I just wanted to transfer it quickly.

No answers for this question!
Get a new question page!
All waiting link lists are done!

Normally, I would break a cycle of shared_ptrs with weak_ptr.  But I can't see how to do that in this example:
struct A;
struct B;
struct C;
struct D;

struct Cache {
    std::shared_ptr<A> a;
    std::shared_ptr<B> b;
    std::shared_ptr<C> c;
    std::shared_ptr<D> d;
};

struct A {
};

struct B {
    // Same 'a' as in the Cache
    std::shared_ptr<A> a;
};

struct C {
    // Holds a backreference to the cache
    std::shared_ptr<Cache> cache;
};

struct D {
    // Same 'c' as in the cache
    std::shared_ptr<C> c;
};

There are never any cycles between the A, B, etc.  The only cycles are backreferences to the Cache.  The Cache needs to stay alive as long as anybody (except the Cache itself) has a shared_ptr<C>, so just using weak_ptr<Cache> won't work.  For example:
std::shared_ptr<Cache> make_cache() {
    auto cache = std::make_shared<Cache>();
    cache->a = std::make_shared<A>();
    cache->b = std::make_shared<B>();
    cache->b->a = cache->a;
    cache->c = std::make_shared<C>();
    cache->c->cache = cache;
    cache->d = std::make_shared<D>();
    cache->d->c = cache->c;
    return cache;
}

void use_cache() {
    auto a = make_cache()->a;
    // No need to keep the Cache around

    auto b = make_cache()->b;
    // b->a must be valid

    auto c = make_cache()->c;
    // c->cache must be valid

    auto d = make_cache()->d;
    // d->c (and therefore d->c->cache, etc.) must be valid
}

I understand that in general this would require a garbage collector, but I'm hoping in this specific case there's some trickery that can be done with shared_ptr's aliasing constructor (8) or something.

New answer:
[u'\n\n\n"The Cache needs to stay alive as long as anybody (except the Cache itself) has a shared_ptr<C>."\n\n\nThis argues that C controls the ultimate lifetime of the entire structure.\nTherefore, shouldn\'t the cache be composed into C?\n']
Get a new question page!
All waiting link lists are done!

Hello I'm trying to cast arguments from void* to int using
id=*((int *)x);

But I'm getting different values than the original value of x. I've read about using intptr_t but could not understand how to use it  

New answer:
[u"\nThat's not a cast, that's a dereference. You want:\nid = (int) x;\n\n"]
New answer:
[u"\nThat's not a cast, that's a dereference. You want:\nid = (int) x;\n\n", u'\nYour approach is casting void pointer to int pointer, not to int. You can cast void pointer to int directly, like this\nint n = (int)p;\n\nHowever, that is not guaranteed to work for all values of integer.\nInstead, you should use intptr_t. Change parameter type from void pointer to intptr_t, and use the cast above. This is guaranteed to be portable.\n']
Get a new question page!
All waiting link lists are done!

I am a newbie to C++ and i really need help with this project, i need to include a library, but i don't know how, i tried adding all the header files to C:\MinGW\include , but it didn't help much. Please give me some advice and probably explanation because i understand nothing in these things. Thank you!
P.S
Since this is my first question on stackoverflow, please give me reasonable criticism. 

No answers for this question!
Get a new question page!
All waiting link lists are done!


This question already has an answer here:


Can virtual functions have default parameters?

                    5 answers
                



I truly don't understand why this works like this.
#include<iostream>

using namespace std;
class Figura{
public:
int x;
int y;
virtual void pomak(int dx=10,int dy=1)
    {

        x+=dx;
        y+=dy;
        cout<<"Figura"<<endl;


    }
};
class Skakac:public Figura{
public:
void pomak(int dx=2,int dy=-1)
    {
        cout<<dx<<endl;
        x+=dx;
        y+=dy;
        cout<<"Skakac"<<endl;


    }
};

int main()
{
    Skakac S;
    S.x=0;
    S.y=0;
    Figura* x=&S;
    cout<<x->x<<" "<<x->y<<endl;
    x->pomak();
    cout<<S.x<<" "<<S.y<<endl;




 }

When i call function pomak() it couts dx as 10, although it calls second function pomak(not the virtual one) and i clearly stated that dx = 2. 

New answer:
[u'\nAccording to the standard (N4140):\n\n8.3.6 Default arguments...\n10 A virtual function call (10.3) uses the default arguments in the declaration of the virtual function determined\n  by the static type of the pointer or reference denoting the object. An overriding function in a derived class\n  does not acquire default arguments from the function it overrides. [\xa0Example:\nstruct A {\n    virtual void f(int a = 7);\n};\nstruct B : public A {\n    void f(int a);\n};\nvoid m() {\n    B* pb = new B;\n    A* pa = pb;\n    pa->f(); // OK, calls pa->B::f(7)\n    pb->f(); // error: wrong number of arguments for B::f()\n}\n\n\u2014end example ]\n\n']
New answer:
[u'\nAccording to the standard (N4140):\n\n8.3.6 Default arguments...\n10 A virtual function call (10.3) uses the default arguments in the declaration of the virtual function determined\n  by the static type of the pointer or reference denoting the object. An overriding function in a derived class\n  does not acquire default arguments from the function it overrides. [\xa0Example:\nstruct A {\n    virtual void f(int a = 7);\n};\nstruct B : public A {\n    void f(int a);\n};\nvoid m() {\n    B* pb = new B;\n    A* pa = pb;\n    pa->f(); // OK, calls pa->B::f(7)\n    pb->f(); // error: wrong number of arguments for B::f()\n}\n\n\u2014end example ]\n\n', u'\nThe function is called through a pointer to Figura. The default value for the argument is clearly 10.\nBecause the function is virtual, the most derived version of the function is used, based on the dynamic type of the pointed object, which is Skakac. The default arguments of the dynamic type are not used as the standard, already quoted by AlexD, states.\nP.S.\n\nit calls second function pomak(not the virtual one)\n\nSkakac::pomak is also virtual.\n\nHow can i fix it?\n\nIf by "fix it" you mean "How can I override the default argument", then I recommend using overloading instead of default arguments:\nclass Figura {\n    // ...\n    virtual void pomak() {\n        pomak(10, 1);\n    }\n    virtual void pomak(int dx, int dy) {\n        // ...\n    }\n};\nclass Skakac: public Figura {\n    // ...\n    void pomak() {\n        pomak(2, -1);\n    }\n    void pomak(int dx, int dy) {\n        // ...\n    }\n};\n\n']
Get a new question page!
All waiting link lists are done!

real	2m41.822s
user	0m29.944s
sys	6m9.612s

Script done on Mon 30 May 2016 06:07:59 PM PDT
